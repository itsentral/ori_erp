<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Final_drawing extends CI_Controller {

	public function __construct() {
		parent::__construct();
		$this->load->model('master_model');
		// Your own constructor code
		if(!$this->session->userdata('isORIlogin')){ 
			redirect('login');
		}
	}
	
	//INDEX FINAL DRAWING
	public function index(){
		$controller			= ucfirst(strtolower($this->uri->segment(1)));
		$Arr_Akses			= getAcccesmenu($controller);
		if($Arr_Akses['read'] !='1'){
			$this->session->set_flashdata("alert_data", "<div class=\"alert alert-warning\" id=\"flash-message\">You Don't Have Right To Access This Page, Please Contact Your Administrator....</div>");
			redirect(site_url('dashboard'));
		}
		$data_Group			= $this->master_model->getArray('groups',array(),'id','name');
		$data = array(
			'title'			=> 'Indeks Of Final Drawing Structure BQ',
			'action'		=> 'index',
			'row_group'		=> $data_Group,
			'akses_menu'	=> $Arr_Akses
		);
		history('View Final Drawing Structure BQ');
		$this->load->view('FinalDrawing/index',$data);
	}
	
	public function getDataJSONEst(){
		$controller			= ucfirst(strtolower($this->uri->segment(1)));
		$Arr_Akses			= getAcccesmenu($controller);

		$requestData	= $_REQUEST;
		$fetch			= $this->queryDataJSONEst(
			$requestData['search']['value'],
			$requestData['order'][0]['column'],
			$requestData['order'][0]['dir'],
			$requestData['start'],
			$requestData['length']
		);
		$totalData		= $fetch['totalData'];
		$totalFiltered	= $fetch['totalFiltered'];
		$query			= $fetch['query'];

		$data	= array();
		$urut1  = 1;
        $urut2  = 0;
		foreach($query->result_array() as $row)
		{
			$total_data     = $totalData;
            $start_dari     = $requestData['start'];
            $asc_desc       = $requestData['order'][0]['dir'];
            if($asc_desc == 'asc')
            {
                $nomor = $urut1 + $start_dari;
            }
            if($asc_desc == 'desc')
            {
                $nomor = ($total_data - $start_dari) - $urut2;
            }

			$nestedData 	= array();
			$nestedData[]	= "<div align='center'>".$nomor."</div>";
			$nestedData[]	= "<div align='center'>".$row['id_bq']."</div>";
			$nestedData[]	= "<div align='left'>".$row['nm_customer']."</div>";
			$nestedData[]	= "<div align='left'>".strtoupper(strtolower($row['order_type']))."</div>";
				$ListBQipp		= $this->db->query("SELECT series  FROM so_detail_header WHERE id_bq = '".$row['id_bq']."' GROUP BY series")->result_array();
				$dtListArray = array();
				foreach($ListBQipp AS $val => $valx){
					$dtListArray[$val] = $valx['series'];
				}
				$dtImplode	= "".implode(", ", $dtListArray)."";
			$nestedData[]	= "<div align='left'>".$dtImplode."</div>";
			$nestedData[]	= "<div align='center'><span class='badge bg-green'>".strtoupper(strtolower($row['rev']))."</span></div>";

				$warna = Color_status($row['sts_ipp']);
				
			$nestedData[]	= "<div align='left'><span class='badge' style='background-color:".$warna."'>".$row['sts_ipp']."</span></div>";
					$priX	= "";
					$updX	= "";
					$delX	= "";
					$app	= "";
					
					if($row['aju_approved'] == 'N'){
						if($Arr_Akses['approve']=='1'){
							$app	= "&nbsp;<button type='button' class='btn btn-sm btn-success' id='ajuAppBQ' title='Lanjutkan ke Estimasi' data-id_bq='".$row['id_bq']."'><i class='fa fa-check'></i></button>";
						}
						if($Arr_Akses['update']=='1'){
							if($row['sts_ipp'] == 'WAITING FINAL DRAWING' OR $row['sts_ipp'] == 'WAITING FINAL DRAWING'){
								$updX	= "&nbsp;<button class='btn btn-sm btn-primary' id='editBQ' title='Edit BQ' data-id_bq='".$row['id_bq']."' data-ciri='revisi_quo'><i class='fa fa-edit'></i></button>";
							}
						}
					}
			$nestedData[]	= "<div align='left'>
									<button class='btn btn-sm btn-warning' id='detailBQ' title='Detail BQ' data-id_bq='".$row['id_bq']."'><i class='fa fa-eye'></i></button>
									".$priX."
									".$updX."
									".$delX."
									".$app."
									</div>";
			$data[] = $nestedData;
            $urut1++;
            $urut2++;
		}

		$json_data = array(
			"draw"            	=> intval( $requestData['draw'] ),
			"recordsTotal"    	=> intval( $totalData ),
			"recordsFiltered" 	=> intval( $totalFiltered ),
			"data"            	=> $data
		);

		echo json_encode($json_data);
	}

	public function queryDataJSONEst($like_value = NULL, $column_order = NULL, $column_dir = NULL, $limit_start = NULL, $limit_length = NULL){

		$sql = "
			SELECT
				a.*,
				b.nm_customer,
				b.status AS sts_ipp
			FROM
				so_header a LEFT JOIN production b ON a.no_ipp = b.no_ipp
		    WHERE (
				a.no_ipp LIKE '%".$this->db->escape_like_str($like_value)."%'
				OR a.id_bq LIKE '%".$this->db->escape_like_str($like_value)."%'
				OR b.nm_customer LIKE '%".$this->db->escape_like_str($like_value)."%'
	        )
		";
		// echo $sql; exit;

		$data['totalData'] = $this->db->query($sql)->num_rows();
		$data['totalFiltered'] = $this->db->query($sql)->num_rows();
		$columns_order_by = array(
			0 => 'nomor',
			1 => 'id_bq',
			2 => 'nm_customer'
		);

		$sql .= " ORDER BY a.approved DESC, ".$columns_order_by[$column_order]." ".$column_dir." ";
		$sql .= " LIMIT ".$limit_start." ,".$limit_length." ";

		$data['query'] = $this->db->query($sql);
		return $data;
	}
	
	public function modalDetailBQ(){
		$this->load->view('FinalDrawing/modalDetailBQ');
	}
	
	public function modalEditBQ(){
		$this->load->view('FinalDrawing/modalEditBQ');
	}
	
	function DeleteEdit(){
		$id_bqdet 		= $this->uri->segment(3);
		$id_bqdet_et 	= $this->uri->segment(4);
		$data_session	= $this->session->userdata;
		$ExpTy			= explode('-', $id_bqdet_et);

		$id_bq =  $ExpTy[0]."-". $ExpTy[1];
		// echo  $id_bq;
		// exit;

		$ToHistBqDetDetail	= $this->db->query("SELECT * FROM so_detail_detail WHERE id_bq_header='".$id_bqdet_et."' ")->result_array();
		$sqlToHistHead		= "	INSERT INTO hist_so_detail_header
									(id_bq, id_bq_header, id_delivery, sub_delivery, series, no_komponen, sts_delivery, id_category, qty, diameter_1, diameter_2, length, thickness, sudut, id_standard, type, id_product, man_power, id_mesin, total_time, man_hours, hist_by, hist_date)
								SELECT
									id_bq, id_bq_header, id_delivery, sub_delivery, series, no_komponen, sts_delivery, id_category, qty, diameter_1, diameter_2, length, thickness, sudut, id_standard, type, id_product, man_power, id_mesin, total_time, man_hours, '".$this->session->userdata['ORI_User']['username']."', '".date('Y-m-d H:i:s')."'
								FROM so_detail_header
								WHERE id = '".$id_bqdet."'
								";

		$ArrToHistDetDetail = array();
		foreach($ToHistBqDetDetail AS $val => $valx){
			$ArrToHistDetDetail[$val]['id_bq']			= $valx['id_bq'];
			$ArrToHistDetDetail[$val]['id_bq_header']	= $valx['id_bq_header'];
			$ArrToHistDetDetail[$val]['id_delivery']	= $valx['id_delivery'];
			$ArrToHistDetDetail[$val]['sub_delivery'] 	= $valx['sub_delivery'];
			$ArrToHistDetDetail[$val]['sts_delivery'] 	= $valx['sts_delivery'];
			$ArrToHistDetDetail[$val]['id_category'] 	= $valx['id_category'];
			$ArrToHistDetDetail[$val]['qty'] 			= $valx['qty'];
			$ArrToHistDetDetail[$val]['diameter_1'] 	= $valx['diameter_1'];
			$ArrToHistDetDetail[$val]['diameter_2'] 	= $valx['diameter_2'];
			$ArrToHistDetDetail[$val]['length']			= $valx['length'];
			$ArrToHistDetDetail[$val]['thickness']		= $valx['thickness'];
			$ArrToHistDetDetail[$val]['sudut']			= $valx['sudut'];
			$ArrToHistDetDetail[$val]['id_standard'] 	= $valx['id_standard'];
			$ArrToHistDetDetail[$val]['type'] 			= $valx['type'];
			$ArrToHistDetDetail[$val]['product_ke'] 	= $valx['product_ke'];
			$ArrToHistDetDetail[$val]['hist_by'] 		= $this->session->userdata['ORI_User']['username'];
			$ArrToHistDetDetail[$val]['hist_date'] 		= date('Y-m-d H:i:s');
		}

		// exit;

		$this->db->trans_start();
		$this->db->query($sqlToHistHead);
		$this->db->insert_batch('hist_so_detail_detail', $ArrToHistDetDetail);
		$this->db->query("DELETE FROM so_detail_header WHERE id='".$id_bqdet."' AND id_bq_header='".$id_bqdet_et."' ");
		$this->db->query("DELETE FROM so_detail_detail WHERE id_bq_header='".$id_bqdet_et."' ");
		$this->db->trans_complete();

		if($this->db->trans_status() === FALSE){
			$this->db->trans_rollback();
			$Arr_Data	= array(
				'pesan'		=>'Hapus sebagian BQ Final Drawing gagal. Please try again later ...',
				'status'	=> 0,
				'id_bq'		=> $id_bq
			);
		}
		else{
			$this->db->trans_commit();
			$Arr_Data	= array(
				'pesan'		=>'Hapus sebagian BQ Final Drawing berhasil. Thanks ...',
				'status'	=> 1,
				'id_bq'		=> $id_bq
			);
			history('Delete Sebagian BQ Final Drawing with ID : '.$id_bqdet_et);
		}

		echo json_encode($Arr_Data);
	}
	
	public function getDeliveryMX(){
		$dataL 		= $this->input->post('series');
		$id_bq 		= $this->input->post('id_bq');
		$sqlSup		= "SELECT id_delivery FROM so_detail_header WHERE id_bq = '".$id_bq."' GROUP BY id_delivery";
		$restSup	= $this->db->query($sqlSup)->result_array();

		$option	= "<option>Iso M</option>";
		foreach($restSup AS $val){
			$option .= "<option value='".$val['id_delivery']."'>".strtoupper($val['id_delivery'])."</option>";
		}

		$ArrJson	= array(
			'option' => $option
		);
		echo json_encode($ArrJson);
	}
	
	public function getSubDeliveryMX(){
		$dataL = $this->input->post('series');
		$dataM = $this->input->post('id_delivery');
		$id_bq = $this->input->post('id_bq');

		$sqlSup		= "SELECT sub_delivery FROM so_detail_header WHERE id_bq = '".$id_bq."'  GROUP BY sub_delivery";
		$restSup	= $this->db->query($sqlSup)->result_array();

		$option	= "";
		foreach($restSup AS $val){
			$option .= "<option value='".$val['sub_delivery']."'>".strtoupper($val['sub_delivery'])."</option>";
		}
		$ArrJson	= array(
			'option' => $option
		);
		echo json_encode($ArrJson);
	}
	
	public function getStandard(){
		$sqlSup		= "SELECT * FROM list_standard ORDER BY urut ASC";
		$restSup	= $this->db->query($sqlSup)->result_array();

		$option	= "<option value='0'>Standard</option>";
		foreach($restSup AS $val => $valx){
			$option .= "<option value='".$valx['id_standard']."'>".strtoupper($valx['nm_standard'])."</option>";
		}
		$ArrJson	= array(
			'option' => $option
		);
		echo json_encode($ArrJson);
	}
	
	public function getTypeProduct(){
		$sqlSup		= "SELECT * FROM product_parent ORDER BY product_parent ASC";
		$restSup	= $this->db->query($sqlSup)->result_array();

		$option	= "<option value='0'>Select An Type Product</option>";
		foreach($restSup AS $val => $valx){
			$option .= "<option value='".$valx['product_parent']."'>".strtoupper($valx['product_parent'])."</option>";
		}
		$ArrJson	= array(
			'option' => $option
		);
		echo json_encode($ArrJson);
	}
	
	public function getSeries(){
		$sqlSup		= "SELECT kode_group FROM component_group WHERE deleted ='N' AND status='Y' GROUP BY kode_group ORDER BY resin_system ASC, pressure ASC, liner ASC";
		$restSup	= $this->db->query($sqlSup)->result_array();

		$option	= "<option value='0'>Select An Series</option>";
		foreach($restSup AS $val => $valx){
			$option .= "<option value='".$valx['kode_group']."'>".strtoupper($valx['kode_group'])."</option>";
		}
		$ArrJson	= array(
			'option' => $option
		);
		echo json_encode($ArrJson);
	}
	
	public function BqUpdated(){
		$data 			= $this->input->post();
		$data_session	= $this->session->userdata;
		$id_bq			= $data['id_bq'];
		$DataBQ			= $data['DetailBq'];

		if(!empty($data['ListDetail'])){
			$data2 = $data['ListDetail'];
		}

		$ToHistBqHeader		= $this->db->query("SELECT * FROM so_header WHERE id_bq='".$id_bq."' ")->result_array();
		$ToHistBqDetHeader	= $this->db->query("SELECT * FROM so_detail_header WHERE id_bq='".$id_bq."' ")->result_array();
		$ToHistBqDetDetail	= $this->db->query("SELECT * FROM so_detail_detail WHERE id_bq='".$id_bq."' ")->result_array();

		// echo "SELECT * FROM bq_detail_detail WHERE id_bq='".$id_bq."'";
		// print_r($DataBQ);
		// print_r($data2);
		// exit();

		if(!empty($data['ListDetail'])){
			$DataHeader = $this->db->query("SELECT MAX(id_bq_header) AS maximalA FROM so_detail_header WHERE id_bq = '".$id_bq."' ")->result();
			$nst		= explode('-', $DataHeader[0]->maximalA);
			$numX 		= ltrim($nst[2], '0');
			// echo $numX; exit;
			$ArrInsertNew	= array();
			$Loop = 0;

			$ArrInsertDetDetail = array();
			foreach($data2 AS $val => $valx){
				$numX++;
				$dataKR4 	= sprintf('%03s',$numX);

				$wherePN = floatval(substr($valx['series'], 3,2));
				$whereLN = floatval(substr($valx['series'], 6,3));
				
				$wherePlus = '';
				if($valx['id_category'] == 'concentric reducer' OR $valx['id_category'] == 'branch joint' OR $valx['id_category'] == 'eccentric reducer' OR $valx['id_category'] == 'reducer tee mould' OR $valx['id_category'] == 'reducer tee slongsong'){
					$wherePlus = " AND diameter2 = '".$valx['diameter_2']."' ";
				}
				$qSeries = "SELECT man_power, id_mesin, total_time, man_hours FROM cycletime_default WHERE product_parent='".$valx['id_category']."' AND diameter='".$valx['diameter_1']."' ".$wherePlus." AND pn='".$wherePN."' AND liner='".$whereLN."' LIMIT 1 ";
				$restSer = $this->db->query($qSeries)->result();
				// echo $qSeries."<br>";

				$ArrInsertNew[$val]['id_bq'] 			= $id_bq;
				$ArrInsertNew[$val]['id_bq_header'] 	= $id_bq."-".$dataKR4;
				$ArrInsertNew[$val]['id_delivery'] 		= $valx['id_delivery'];
				$ArrInsertNew[$val]['sub_delivery'] 	= $valx['sub_delivery'];
				$ArrInsertNew[$val]['no_komponen'] 		= $valx['sub_delivery']."/".$dataKR4;
				$ArrInsertNew[$val]['sts_delivery'] 	= $valx['sts_delivery'];
				$ArrInsertNew[$val]['series'] 			= $valx['series'];

				$ArrInsertNew[$val]['id_category']	= $valx['id_category'];
				$ArrInsertNew[$val]['diameter_1']	= $valx['diameter_1'];
				$ArrInsertNew[$val]['diameter_2'] 	= $valx['diameter_2'];
				$ArrInsertNew[$val]['length'] 		= $valx['length'];
				$ArrInsertNew[$val]['thickness'] 	= $valx['thickness'];
				$ArrInsertNew[$val]['sudut'] 		= $valx['sudut'];
				$ArrInsertNew[$val]['id_standard'] 	= $valx['id_standard'];
				$ArrInsertNew[$val]['type'] 		= $valx['type'];
				$ArrInsertNew[$val]['qty'] 			= $valx['qty'];

				$ArrInsertNew[$val]['man_power'] 	= (!empty($restSer[0]->man_power))?$restSer[0]->man_power:'';
				$ArrInsertNew[$val]['id_mesin'] 	= (!empty($restSer[0]->id_mesin))?$restSer[0]->id_mesin:'';
				$ArrInsertNew[$val]['total_time'] 	= (!empty($restSer[0]->total_time))?$restSer[0]->total_time:'';
				$ArrInsertNew[$val]['man_hours'] 	= (!empty($restSer[0]->man_hours))?$restSer[0]->man_hours:'';

				$total_time 	= (!empty($restSer[0]->total_time))?$restSer[0]->total_time:'';
				$id_mesin 		= (!empty($restSer[0]->id_mesin))?$restSer[0]->id_mesin:'';
				$ArrInsertNew[$val]['pe_direct_labour'] 			= pe_direct_labour();
				$ArrInsertNew[$val]['pe_indirect_labour'] 			= pe_indirect_labour();
				$ArrInsertNew[$val]['pe_machine'] 					= pe_machine($total_time, $id_mesin);
				$ArrInsertNew[$val]['pe_mould_mandrill'] 			= pe_mould_mandrill($valx['id_category'], $valx['diameter_1'], $valx['diameter_2']);
				$ArrInsertNew[$val]['pe_consumable'] 				= pe_consumable($valx['id_category']);
				$ArrInsertNew[$val]['pe_foh_consumable'] 			= pe_foh_consumable();
				$ArrInsertNew[$val]['pe_foh_depresiasi'] 			= pe_foh_depresiasi();
				$ArrInsertNew[$val]['pe_biaya_gaji_non_produksi'] 	= pe_biaya_gaji_non_produksi();
				$ArrInsertNew[$val]['pe_biaya_non_produksi'] 		= pe_biaya_non_produksi();
				$ArrInsertNew[$val]['pe_biaya_rutin_bulanan'] 		= pe_biaya_rutin_bulanan();

				for($no=1; $no <= $valx['qty']; $no++){
					$Loop++;
					$ArrInsertDetDetail[$Loop]['id_bq'] 		= $id_bq;

					$ArrInsertDetDetail[$Loop]['id_bq_header'] 	= $id_bq."-".$dataKR4;
					$ArrInsertDetDetail[$Loop]['id_delivery'] 	= $valx['id_delivery'];
					$ArrInsertDetDetail[$Loop]['sub_delivery'] 	= $valx['sub_delivery'];
					$ArrInsertDetDetail[$Loop]['sts_delivery'] 	= $valx['sts_delivery'];
					$ArrInsertDetDetail[$Loop]['series'] 		= $valx['series'];

					$ArrInsertDetDetail[$Loop]['id_category'] 	= $valx['id_category'];
					$ArrInsertDetDetail[$Loop]['diameter_1'] 	= $valx['diameter_1'];
					$ArrInsertDetDetail[$Loop]['diameter_2'] 	= $valx['diameter_2'];
					$ArrInsertDetDetail[$Loop]['length'] 		= $valx['length'];
					$ArrInsertDetDetail[$Loop]['thickness'] 	= $valx['thickness'];
					$ArrInsertDetDetail[$Loop]['sudut'] 		= $valx['sudut'];
					$ArrInsertDetDetail[$Loop]['id_standard'] 	= $valx['id_standard'];
					$ArrInsertDetDetail[$Loop]['type'] 			= $valx['type'];
					$ArrInsertDetDetail[$Loop]['qty'] 			= $valx['qty'];
					$ArrInsertDetDetail[$Loop]['product_ke'] 	= $no;
				}
			}
		}

		// print_r($ArrInsertNew);
		// print_r($ArrInsertDetDetail);
		// exit;

		$ArrUpdateBq	= array();
		$Loop = 0;
		$ArrDetDetail = array();
		foreach($DataBQ AS $val => $valx){
			$wherePN = floatval(substr($valx['series'], 3,2));
			$whereLN = floatval(substr($valx['series'], 6,3));
			
			$wherePlus = ''; 
			if($valx['id_category'] == 'concentric reducer' OR $valx['id_category'] == 'branch joint' OR $valx['id_category'] == 'eccentric reducer' OR $valx['id_category'] == 'reducer tee mould' OR $valx['id_category'] == 'reducer tee slongsong'){
				$wherePlus = " AND diameter2 = '".$valx['diameter_2']."' ";
			}
			$qSeries = "SELECT man_power, id_mesin, total_time, man_hours FROM cycletime_default WHERE product_parent='".$valx['id_category']."' AND diameter='".$valx['diameter_1']."' ".$wherePlus." AND pn='".$wherePN."' AND liner='".$whereLN."' LIMIT 1 ";
			$restSer = $this->db->query($qSeries)->result();
			// echo $qSeries."<br>";
			
			$ArrUpdateBq[$val]['id']			= $valx['id'];
			$ArrUpdateBq[$val]['id_category']	= $valx['id_category'];
			$ArrUpdateBq[$val]['sts_delivery']	= $valx['sts_delivery'];
			$ArrUpdateBq[$val]['sub_delivery']	= $valx['sub_delivery'];
			$ArrUpdateBq[$val]['id_delivery']	= $valx['id_delivery'];
			$ArrUpdateBq[$val]['series']		= $valx['series'];
			$ArrUpdateBq[$val]['diameter_1']	= $valx['diameter_1'];
			$ArrUpdateBq[$val]['diameter_2'] 	= $valx['diameter_2'];
			$ArrUpdateBq[$val]['length'] 		= $valx['length'];
			$ArrUpdateBq[$val]['thickness'] 	= $valx['thickness'];
			$ArrUpdateBq[$val]['sudut'] 		= $valx['sudut'];
			$ArrUpdateBq[$val]['id_standard'] 	= $valx['id_standard'];
			$ArrUpdateBq[$val]['type'] 			= $valx['type'];
			$ArrUpdateBq[$val]['qty'] 			= $valx['qty'];

			$ArrUpdateBq[$val]['man_power'] 	= (!empty($restSer[0]->man_power))?$restSer[0]->man_power:'';
			$ArrUpdateBq[$val]['id_mesin'] 		= (!empty($restSer[0]->id_mesin))?$restSer[0]->id_mesin:'';
			$ArrUpdateBq[$val]['total_time'] 	= (!empty($restSer[0]->total_time))?$restSer[0]->total_time:'';
			$ArrUpdateBq[$val]['man_hours'] 	= (!empty($restSer[0]->man_hours))?$restSer[0]->man_hours:'';

			$total_time 	= (!empty($restSer[0]->total_time))?$restSer[0]->total_time:'';
			$id_mesin 		= (!empty($restSer[0]->id_mesin))?$restSer[0]->id_mesin:'';
			$ArrUpdateBq[$val]['pe_direct_labour'] 			= pe_direct_labour();
			$ArrUpdateBq[$val]['pe_indirect_labour'] 			= pe_indirect_labour();
			$ArrUpdateBq[$val]['pe_machine'] 					= pe_machine($total_time, $id_mesin);
			$ArrUpdateBq[$val]['pe_mould_mandrill'] 			= pe_mould_mandrill($valx['id_category'], $valx['diameter_1'], $valx['diameter_2']);
			$ArrUpdateBq[$val]['pe_consumable'] 				= pe_consumable($valx['id_category']);
			$ArrUpdateBq[$val]['pe_foh_consumable'] 			= pe_foh_consumable();
			$ArrUpdateBq[$val]['pe_foh_depresiasi'] 			= pe_foh_depresiasi();
			$ArrUpdateBq[$val]['pe_biaya_gaji_non_produksi'] 	= pe_biaya_gaji_non_produksi();
			$ArrUpdateBq[$val]['pe_biaya_non_produksi'] 		= pe_biaya_non_produksi();
			$ArrUpdateBq[$val]['pe_biaya_rutin_bulanan'] 		= pe_biaya_rutin_bulanan();

			$DataHeader = $this->db->query("SELECT id_bq_header, id_delivery, sub_delivery, sts_delivery, series FROM so_detail_header WHERE id = '".$valx['id']."' ")->result();

			for($no=1; $no <= $valx['qty']; $no++){
				$Loop++;
				$ArrDetDetail[$Loop]['id_bq'] 			= $id_bq;

				$ArrDetDetail[$Loop]['id_bq_header'] 	= $DataHeader[0]->id_bq_header;
				$ArrDetDetail[$Loop]['id_delivery'] 	= $DataHeader[0]->id_delivery;
				$ArrDetDetail[$Loop]['sub_delivery'] 	= $DataHeader[0]->sub_delivery;
				$ArrDetDetail[$Loop]['sts_delivery'] 	= $DataHeader[0]->sts_delivery;
				$ArrDetDetail[$Loop]['series'] 			= $DataHeader[0]->series;

				$ArrDetDetail[$Loop]['id_category'] 	= $valx['id_category'];
				$ArrDetDetail[$Loop]['diameter_1'] 		= $valx['diameter_1'];
				$ArrDetDetail[$Loop]['diameter_2'] 		= $valx['diameter_2'];
				$ArrDetDetail[$Loop]['length'] 			= $valx['length'];
				$ArrDetDetail[$Loop]['thickness'] 		= $valx['thickness'];
				$ArrDetDetail[$Loop]['sudut'] 			= $valx['sudut'];
				$ArrDetDetail[$Loop]['id_standard'] 	= $valx['id_standard'];
				$ArrDetDetail[$Loop]['type'] 			= $valx['type'];
				$ArrDetDetail[$Loop]['qty'] 			= $valx['qty'];
				$ArrDetDetail[$Loop]['product_ke'] 		= $no;
			}

		}
		// print_r($ArrUpdateBq);
		// print_r($ArrDetDetail);
		// exit;

		$ArrToHistHeader = array();
		foreach($ToHistBqHeader AS $val => $valx){
			$ArrToHistHeader[$val]['id_bq']			= $valx['id_bq'];
			$ArrToHistHeader[$val]['no_ipp']		= $valx['no_ipp'];
			$ArrToHistHeader[$val]['order_type']	= $valx['order_type'];
			$ArrToHistHeader[$val]['ket'] 			= $valx['ket'];
			$ArrToHistHeader[$val]['estimasi'] 		= $valx['estimasi'];
			$ArrToHistHeader[$val]['rev'] 			= $valx['rev'];
			$ArrToHistHeader[$val]['created_by'] 	= $valx['created_by'];
			$ArrToHistHeader[$val]['created_date'] 	= $valx['created_date'];
			$ArrToHistHeader[$val]['modified_by'] 	= $valx['modified_by'];
			$ArrToHistHeader[$val]['modified_date'] = $valx['modified_date'];
			$ArrToHistHeader[$val]['hist_by'] 		= $this->session->userdata['ORI_User']['username'];
			$ArrToHistHeader[$val]['hist_date'] 	= date('Y-m-d H:i:s');
		}

		$ArrToHistDetHeader = array();
		foreach($ToHistBqDetHeader AS $val => $valx){
			$ArrToHistDetHeader[$val]['id_bq']			= $valx['id_bq'];
			$ArrToHistDetHeader[$val]['id_bq_header']	= $valx['id_bq_header'];
			$ArrToHistDetHeader[$val]['id_delivery']	= $valx['id_delivery'];
			$ArrToHistDetHeader[$val]['sub_delivery'] 	= $valx['sub_delivery'];
			$ArrToHistDetHeader[$val]['sts_delivery'] 	= $valx['sts_delivery'];
			$ArrToHistDetHeader[$val]['series'] 		= $valx['series'];
			$ArrToHistDetHeader[$val]['no_komponen'] 	= $valx['no_komponen'];
			$ArrToHistDetHeader[$val]['id_category'] 	= $valx['id_category'];
			$ArrToHistDetHeader[$val]['qty'] 			= $valx['qty'];
			$ArrToHistDetHeader[$val]['diameter_1'] 	= $valx['diameter_1'];
			$ArrToHistDetHeader[$val]['diameter_2'] 	= $valx['diameter_2'];
			$ArrToHistDetHeader[$val]['length']			= $valx['length'];
			$ArrToHistDetHeader[$val]['thickness']		= $valx['thickness'];
			$ArrToHistDetHeader[$val]['sudut']			= $valx['sudut'];
			$ArrToHistDetHeader[$val]['id_standard'] 	= $valx['id_standard'];
			$ArrToHistDetHeader[$val]['type'] 			= $valx['type'];
			$ArrToHistDetHeader[$val]['id_product'] 	= $valx['id_product'];
			$ArrToHistDetHeader[$val]['hist_by'] 		= $this->session->userdata['ORI_User']['username'];
			$ArrToHistDetHeader[$val]['hist_date'] 		= date('Y-m-d H:i:s');

			$ArrToHistDetHeader[$val]['man_power'] = $valx['man_power'];
			$ArrToHistDetHeader[$val]['id_mesin'] = $valx['id_mesin'];
			$ArrToHistDetHeader[$val]['total_time'] = $valx['total_time'];
			$ArrToHistDetHeader[$val]['man_hours'] = $valx['man_hours']; 

			$ArrToHistDetHeader[$val]['pe_direct_labour'] 			= $valx['pe_direct_labour'];
			$ArrToHistDetHeader[$val]['pe_indirect_labour'] 		= $valx['pe_indirect_labour'];
			$ArrToHistDetHeader[$val]['pe_machine'] 				= $valx['pe_machine'];
			$ArrToHistDetHeader[$val]['pe_mould_mandrill'] 			= $valx['pe_mould_mandrill'];
			$ArrToHistDetHeader[$val]['pe_consumable'] 				= $valx['pe_consumable'];
			$ArrToHistDetHeader[$val]['pe_foh_consumable'] 			= $valx['pe_foh_consumable'];
			$ArrToHistDetHeader[$val]['pe_foh_depresiasi'] 			= $valx['pe_foh_depresiasi'];
			$ArrToHistDetHeader[$val]['pe_biaya_gaji_non_produksi'] = $valx['pe_biaya_gaji_non_produksi'];
			$ArrToHistDetHeader[$val]['pe_biaya_non_produksi'] 		= $valx['pe_biaya_non_produksi'];
			$ArrToHistDetHeader[$val]['pe_biaya_rutin_bulanan'] 	= $valx['pe_biaya_rutin_bulanan'];
		}

		$ArrToHistDetDetail = array();
		foreach($ToHistBqDetDetail AS $val => $valx){
			$ArrToHistDetDetail[$val]['id_bq']			= $valx['id_bq'];
			$ArrToHistDetDetail[$val]['id_bq_header']	= $valx['id_bq_header'];
			$ArrToHistDetDetail[$val]['id_delivery']	= $valx['id_delivery'];
			$ArrToHistDetDetail[$val]['sub_delivery'] 	= $valx['sub_delivery'];
			$ArrToHistDetDetail[$val]['sts_delivery'] 	= $valx['sts_delivery'];
			$ArrToHistDetDetail[$val]['id_category'] 	= $valx['id_category'];
			$ArrToHistDetDetail[$val]['qty'] 			= $valx['qty'];
			$ArrToHistDetDetail[$val]['diameter_1'] 	= $valx['diameter_1'];
			$ArrToHistDetDetail[$val]['diameter_2'] 	= $valx['diameter_2'];
			$ArrToHistDetDetail[$val]['length']			= $valx['length'];
			$ArrToHistDetDetail[$val]['thickness']		= $valx['thickness'];
			$ArrToHistDetDetail[$val]['sudut']			= $valx['sudut'];
			$ArrToHistDetDetail[$val]['id_standard'] 	= $valx['id_standard'];
			$ArrToHistDetDetail[$val]['type'] 			= $valx['type'];
			$ArrToHistDetDetail[$val]['product_ke'] 	= $valx['product_ke'];
			$ArrToHistDetDetail[$val]['hist_by'] 		= $this->session->userdata['ORI_User']['username'];
			$ArrToHistDetDetail[$val]['hist_date'] 		= date('Y-m-d H:i:s');
		}

		$UpdateModif	= array(
			'rev'	=> $ToHistBqHeader[0]['rev'] + 1 ,
			'modified_by'	=> $this->session->userdata['ORI_User']['username'],
			'modified_date'	=> date('Y-m-d H:i:s')
		);

		// if(!empty($ArrToHistDetDetail)){
				// echo "ADa";
			// }
		// exit;
		$this->db->trans_start();
			$this->db->insert_batch('hist_so_header', $ArrToHistHeader);
			$this->db->insert_batch('hist_so_detail_header', $ArrToHistDetHeader);
			if(!empty($ArrToHistDetDetail)){
				$this->db->insert_batch('hist_so_detail_detail', $ArrToHistDetDetail);
			}
			$this->db->where('id_bq', $id_bq);
			$this->db->update('so_header', $UpdateModif);
			$this->db->update_batch('so_detail_header', $ArrUpdateBq, 'id');
			$this->db->delete('so_detail_detail', array('id_bq' => $id_bq));
			$this->db->insert_batch('so_detail_detail', $ArrDetDetail);
			if(!empty($data['ListDetail'])){
				$this->db->insert_batch('so_detail_header', $ArrInsertNew);
				$this->db->insert_batch('so_detail_detail', $ArrInsertDetDetail);
			}
		$this->db->trans_complete();

		if($this->db->trans_status() === FALSE){
			$this->db->trans_rollback();
			$Arr_Kembali	= array(
				'pesan'		=>'Edit structure bq final drawing data failed. Please try again later ...',
				'status'	=> 2
			);
		}
		else{
			$this->db->trans_commit();
			$Arr_Kembali	= array(
				'pesan'		=>'Edit structure bq final drawing data success. Thanks ...',
				'status'	=> 1
			);
			history('Edit Structure BQ Final Drawing with code : '.$id_bq);
		}

		echo json_encode($Arr_Kembali);

	}
	
	public function ajukanAppBQ(){
		$id_bq 			= $this->uri->segment(3);
		$data_session	= $this->session->userdata;
		
		$Arr_Edit	= array(
			'aju_approved' 		=> 'Y',
			'aju_approved_by' 	=> $data_session['ORI_User']['username'],
			'aju_approved_date' => date('Y-m-d H:i:s'),
			'approved' 			=> 'Y',
			'approved_by' 		=> $data_session['ORI_User']['username'],
			'approved_date' 	=> date('Y-m-d H:i:s')
		);
		// print_r($Arr_Edit);
		// exit;
		$this->db->trans_start();
			$this->db->where('id_bq', $id_bq);
			$this->db->update('so_header', $Arr_Edit);
		$this->db->trans_complete();
		
		if($this->db->trans_status() === FALSE){
			$this->db->trans_rollback();
			$Arr_Data	= array(
				'pesan'		=>'Next process failed. Please try again later ...',
				'status'	=> 0
			);			
		}
		else{
			$this->db->trans_commit();
			$Arr_Data	= array(
				'pesan'		=>'Next process success. Thanks ...',
				'status'	=> 1
			);				
			history('Proses next estimasi project (final drawing) with BQ : '.$id_bq);
		}
		echo json_encode($Arr_Data);
	}
	
	//back to BQ final drawing
	public function backAppBQ(){
		$id_bq 			= $this->uri->segment(3);
		$data_session	= $this->session->userdata;
		
		$Arr_Edit	= array(
			'aju_approved' 		=> 'N',
			'aju_approved_by' 	=> $data_session['ORI_User']['username'],
			'aju_approved_date' => date('Y-m-d H:i:s'),
			'approved' 			=> 'N',
			'approved_by' 		=> $data_session['ORI_User']['username'],
			'approved_date' 	=> date('Y-m-d H:i:s')
		);
		// print_r($Arr_Edit);
		// exit;
		$this->db->trans_start();
			$this->db->where('id_bq', $id_bq);
			$this->db->update('so_header', $Arr_Edit);
		$this->db->trans_complete();
		
		if($this->db->trans_status() === FALSE){
			$this->db->trans_rollback();
			$Arr_Data	= array(
				'pesan'		=>'Back process failed. Please try again later ...',
				'status'	=> 0
			);			
		}
		else{
			$this->db->trans_commit();
			$Arr_Data	= array(
				'pesan'		=>'Back process success. Thanks ...',
				'status'	=> 1
			);				
			history('Proses back structure bq (final drawing) with BQ : '.$id_bq);
		}
		echo json_encode($Arr_Data);
	}
	//END FINAL DRAWING
	
	//ESTIMASI PROJECT
	public function fd_estimasi(){
		$controller			= ucfirst(strtolower($this->uri->segment(1)));
		$Arr_Akses			= getAcccesmenu($controller);
		if($Arr_Akses['read'] !='1'){
			$this->session->set_flashdata("alert_data", "<div class=\"alert alert-warning\" id=\"flash-message\">You Don't Have Right To Access This Page, Please Contact Your Administrator....</div>");
			redirect(site_url('dashboard'));
		}
		$data_Group			= $this->master_model->getArray('groups',array(),'id','name');
		$data = array(
			'title'			=> 'Indeks Of Project Estimation Final Drawing',
			'action'		=> 'fd_estimasi',
			'row_group'		=> $data_Group,
			'akses_menu'	=> $Arr_Akses
		);
		history('View Data Project Estimation Final Drawing');
		$this->load->view('FinalDrawing/fd_estimasi',$data);
	}
	
	public function getDataJSONEstProject(){
		$controller			= ucfirst(strtolower($this->uri->segment(1)));
		$Arr_Akses			= getAcccesmenu($controller);

		$requestData	= $_REQUEST;
		$fetch			= $this->queryDataJSONEstProject(
			$requestData['search']['value'],
			$requestData['order'][0]['column'],
			$requestData['order'][0]['dir'],
			$requestData['start'],
			$requestData['length']
		);
		$totalData		= $fetch['totalData'];
		$totalFiltered	= $fetch['totalFiltered'];
		$query			= $fetch['query'];

		$data	= array();
		$urut1  = 1;
        $urut2  = 0;
		foreach($query->result_array() as $row)
		{
			$total_data     = $totalData;
            $start_dari     = $requestData['start'];
            $asc_desc       = $requestData['order'][0]['dir'];
            if($asc_desc == 'asc')
            {
                $nomor = $urut1 + $start_dari;
            }
            if($asc_desc == 'desc')
            {
                $nomor = ($total_data - $start_dari) - $urut2;
            }

			$nestedData 	= array();
			$nestedData[]	= "<div align='center'>".$nomor."</div>";
			$nestedData[]	= "<div align='center'>".$row['id_bq']."</div>";
			$nestedData[]	= "<div align='left'>".$row['nm_customer']."</div>";
			$nestedData[]	= "<div align='left'>".strtoupper(strtolower($row['order_type']))."</div>";
				$ListBQipp		= $this->db->query("SELECT series  FROM bq_detail_header WHERE id_bq = '".$row['id_bq']."' GROUP BY series")->result_array();
				$dtListArray = array();
				foreach($ListBQipp AS $val => $valx){
					$dtListArray[$val] = $valx['series'];
				}
				$dtImplode	= "".implode(", ", $dtListArray)."";
			$nestedData[]	= "<div align='left'>".$dtImplode."</div>";
			$nestedData[]	= "<div align='center'><span class='badge bg-green'>".strtoupper(strtolower($row['rev']))."</span></div>";

				$warna = Color_status($row['sts_ipp']);
				
			$nestedData[]	= "<div align='left'><span class='badge' style='background-color:".$warna."'>".$row['sts_ipp']."</span></div>";
					$priX	= "";
					$updX	= "";
					$delX	= "";
					$detX	= "";
					$app	= "";
					$bcBQ	= "";
					
					if($row['estimasi']=='Y'){
						$detX	= "&nbsp;<button class='btn btn-sm btn-success viewDT' title='View Data' data-id_bq='".$row['id_bq']."'><i class='fa fa-eye'></i></button>";
					}
					
					if($Arr_Akses['update']=='1'){
						if($row['aju_approved_est'] == 'N' AND $row['approved'] == 'Y'){
							$updX	= "&nbsp;<button class='btn btn-sm btn-primary editBQ' title='Estimation BQ' data-id_bq='".$row['id_bq']."'><i class='fa fa-edit'></i></button>";
							$app	= "&nbsp;<button type='button' class='btn btn-sm btn-success ajuAppFD' title='Ajukan Final Drawing' data-id_bq='".$row['id_bq']."'><i class='fa fa-check'></i></button>";
							$bcBQ	= "&nbsp;<button type='button' class='btn btn-sm btn-danger bcBQD' title='Back Structure BQ' data-id_bq='".$row['id_bq']."'><i class='fa fa-reply'></i></button>";
						}
					}
					

			$nestedData[]	= "<div align='left' style='padding-left: 20px;'>
									<button class='btn btn-sm btn-warning detailBQ' title='Detail BQ' data-id_bq='".$row['id_bq']."'><i class='fa fa-eye'></i></button>
									".$priX."
									".$delX."
									".$detX."
									".$updX."
									".$bcBQ."
									".$app."
									</div>";
			$data[] = $nestedData;
            $urut1++;
            $urut2++;
		}

		$json_data = array(
			"draw"            	=> intval( $requestData['draw'] ),
			"recordsTotal"    	=> intval( $totalData ),
			"recordsFiltered" 	=> intval( $totalFiltered ),
			"data"            	=> $data
		);

		echo json_encode($json_data);
	}

	public function queryDataJSONEstProject($like_value = NULL, $column_order = NULL, $column_dir = NULL, $limit_start = NULL, $limit_length = NULL){

		$sql = "
			SELECT
				a.*,
				b.nm_customer,
				b.status AS sts_ipp
			FROM
				so_header a LEFT JOIN production b ON a.no_ipp = b.no_ipp
		    WHERE a.approved = 'Y' AND (
				a.no_ipp LIKE '%".$this->db->escape_like_str($like_value)."%'
				OR a.id_bq LIKE '%".$this->db->escape_like_str($like_value)."%'
				OR b.nm_customer LIKE '%".$this->db->escape_like_str($like_value)."%'
	        )
		";
		// echo $sql; exit;

		$data['totalData'] = $this->db->query($sql)->num_rows();
		$data['totalFiltered'] = $this->db->query($sql)->num_rows();
		$columns_order_by = array(
			0 => 'nomor',
			1 => 'id_bq',
			2 => 'nm_customer'
		);

		$sql .= " ORDER BY a.approved_est DESC,  ".$columns_order_by[$column_order]." ".$column_dir." ";
		$sql .= " LIMIT ".$limit_start." ,".$limit_length." ";

		$data['query'] = $this->db->query($sql);
		return $data;
	}
	
	public function modalviewDT(){
		$id_bq = $this->uri->segment(3);

		history('View Result Material Estimasi Final Drawing BQ: '.$id_bq);
		
		$this->load->view('FinalDrawing/modalViewDT');
	}
	
	public function modalviewSO(){
		$id_bq = $this->uri->segment(3);

		history('View Result Sales Order in Approve FD BQ: '.$id_bq);
		
		$this->load->view('FinalDrawing/modalViewSO');
	}
	
	public function modalviewFD(){
		$id_bq = $this->uri->segment(3);

		history('View Result Final Drawing in Approve FD BQ: '.$id_bq);
		
		$this->load->view('FinalDrawing/modalViewFD');
	}
	
	public function modalEstBQ(){
		$id_bq = $this->uri->segment(3);
		$app_est = $this->uri->segment(4);

		$qBQ 	= "	SELECT * FROM so_header WHERE id_bq = '".$id_bq."' ";
		$row	= $this->db->query($qBQ)->result_array(); 

		$qBQdetailHeader 	= "SELECT 
									a.*, 
									a.series, 
									b.no_ipp,
									c.id_milik AS id_milik_bq
								FROM so_detail_header a 
								LEFT JOIN so_header b ON a.id_bq=b.id_bq
								LEFT JOIN so_bf_detail_header c ON a.id_milik=c.id
								WHERE a.id_bq = '".$id_bq."' AND a.id_category <> 'pipe slongsong' ORDER BY a.id_bq_header ASC";
		$qBQdetailRest		= $this->db->query($qBQdetailHeader)->result_array();
		
		$data = array(
			'id_bq'			=> $id_bq,
			'app_est'		=> $app_est,
			'row'			=> $row,
			'qBQdetailRest'	=> $qBQdetailRest
		);
		history('View Estimasi Final Drawing BQ: '.$id_bq);
		
		$this->load->view('FinalDrawing/modalEstBQ', $data);
	}
	
	public function updateBQNew(){
		$Arr_Kembali	= array();
		$data			= $this->input->post();
		
		$id_bq			= "BQ-".$data['no_ipp'];
		$no_ipp			= $data['no_ipp'];
		$pembeda		= $data['pembeda'];
		
		$chOri			= $data['check'];
		$check 			= $chOri;
		$detailBQ		= $data['detailBQ'];
		$Arr0 = array();
		foreach($check AS $vaxl){
			$valG = explode('-', $vaxl);
			$Arr0[$vaxl] = $valG[0];
			$Arr1[$vaxl] = $valG[1];
		}
		$dtImplode		= "('".implode("','", $Arr0)."')";
		// $dtImplode2		= "('".implode("','", $Arr1)."')";
		// print_r($check);
		// echo $dtImplode;
		// echo $dtImplode2;
		// exit;

		$dtListArray 	= array();
		foreach($check AS $valT ){
			foreach($detailBQ AS $val => $valx){
				$valG = explode('-', $valT);
				if($valx['id'] == $valG[0]){
					$dtListArray[$val]['id'] = $valx['id'];
					$dtListArray[$val]['panjang'] = $valx['panjang'];
					$dtListArray[$val]['id_productx'] = $valx['id_productx'];
				}
			}
		}
		// print_r($dtListArray);
		// exit;
		
		$ArrDetBq		= array();
		foreach($dtListArray AS $val => $valx){
			if(!empty($valx["id_productx"]))
			{
				$ArrDetBq[$val]['id']	= $valx['id'];
				$ArrDetBq[$val]['id_product']	= $valx['id_productx'];
				$ArrDetBq[$val]['panjang']	= $valx['panjang'];
			}
		}

		$ArrDetBq2		= array();
		foreach($dtListArray AS $val => $valx){
			if(!empty($valx["id_productx"]))
			{
				$ArrDetBq2[$val]['id']	= $valx['id'];
				$ArrDetBq2[$val]['id_product']	= $valx['id_productx'];
			}
		}

		// print_r($ArrDetBq);
		// print_r($ArrDetBq2);
		// exit;
		// $ArrHeader 		= array_unique(array_column($ArrDetBq, "id_product"));
		// echo "<pre>";

		$ArrBqHeader			= array();
		$ArrBqDetail			= array();
		$ArrBqDetailPlus		= array();
		$ArrBqDetailAdd			= array();
		$ArrBqFooter			= array();
		$ArrBqHeaderHist		= array();
		$ArrBqDetailHist		= array();
		$ArrBqDetailPlusHist	= array();
		$ArrBqDetailAddHist		= array();
		$ArrBqFooterHist		= array();
		$ArrBqDefault			= array();
		$ArrBqDefaultHist		= array();

		$LoopDetail = 0;
		$LoopDetailLam = 0;
		$LoopDetailPlus = 0;
		$LoopDetailAdd = 0;
		$LoopFooter = 0;
		foreach($ArrDetBq AS $val => $valx){
			//Component Header
			$qHeader	= $this->db->query("SELECT * FROM component_header WHERE id_product='".$valx['id_product']."' LIMIT 1 ")->result();
			$ArrBqHeader[$val]['id_product']			= $valx['id_product'];
			$ArrBqHeader[$val]['id_bq']					= $id_bq;
			$ArrBqHeader[$val]['id_milik']				= $valx['id'];
			$ArrBqHeader[$val]['parent_product']		= $qHeader[0]->parent_product;
			$ArrBqHeader[$val]['nm_product']			= $qHeader[0]->nm_product;
			$ArrBqHeader[$val]['standart_code']			= $qHeader[0]->standart_code;
			$ArrBqHeader[$val]['series']				= $qHeader[0]->series;
			$ArrBqHeader[$val]['resin_sistem']			= $qHeader[0]->resin_sistem;
			$ArrBqHeader[$val]['pressure']				= $qHeader[0]->pressure;
			$ArrBqHeader[$val]['diameter']				= $qHeader[0]->diameter;
			$ArrBqHeader[$val]['liner']					= $qHeader[0]->liner;
			$ArrBqHeader[$val]['aplikasi_product']		= $qHeader[0]->aplikasi_product;
			$ArrBqHeader[$val]['criminal_barier']		= $qHeader[0]->criminal_barier;
			$ArrBqHeader[$val]['vacum_rate']			= $qHeader[0]->vacum_rate;
			$ArrBqHeader[$val]['stiffness']				= $qHeader[0]->stiffness;
			$ArrBqHeader[$val]['design_life']			= $qHeader[0]->design_life;
			$ArrBqHeader[$val]['standart_by']			= $qHeader[0]->standart_by;
			$ArrBqHeader[$val]['standart_toleransi']	= $qHeader[0]->standart_toleransi;
			$ArrBqHeader[$val]['diameter2']				= $qHeader[0]->diameter2;
			if($qHeader[0]->parent_product == 'pipe' OR $qHeader[0]->parent_product == 'pipe slongsong'){
				$ArrBqHeader[$val]['panjang']			= floatval($valx['panjang']) + 400;
			}
			else{
				$ArrBqHeader[$val]['panjang']			= $qHeader[0]->panjang;
			}
			$ArrBqHeader[$val]['radius']				= $qHeader[0]->radius;
			$ArrBqHeader[$val]['type_elbow']			= $qHeader[0]->type_elbow;
			$ArrBqHeader[$val]['angle']					= $qHeader[0]->angle;
			$ArrBqHeader[$val]['design']				= $qHeader[0]->design;
			$ArrBqHeader[$val]['est']					= $qHeader[0]->est;
			$ArrBqHeader[$val]['min_toleransi']			= $qHeader[0]->min_toleransi;
			$ArrBqHeader[$val]['max_toleransi']			= $qHeader[0]->max_toleransi;
			$ArrBqHeader[$val]['waste']					= $qHeader[0]->waste;
			if($qHeader[0]->parent_product == 'pipe' OR $qHeader[0]->parent_product == 'pipe slongsong'){
				$ArrBqHeader[$val]['area']				= (floatval($qHeader[0]->area) / floatval($qHeader[0]->panjang)) * (floatval($valx['panjang']) + 400);
			}
			else{
				$ArrBqHeader[$val]['area']				= $qHeader[0]->area;
			}
			$ArrBqHeader[$val]['wrap_length']		= $qHeader[0]->wrap_length;
			$ArrBqHeader[$val]['wrap_length2']		= $qHeader[0]->wrap_length2;
			$ArrBqHeader[$val]['high']				= $qHeader[0]->high;
			$ArrBqHeader[$val]['area2']				= $qHeader[0]->area2;
			$ArrBqHeader[$val]['panjang_neck_1']	= $qHeader[0]->panjang_neck_1;
			$ArrBqHeader[$val]['panjang_neck_2']	= $qHeader[0]->panjang_neck_2;
			$ArrBqHeader[$val]['design_neck_1']		= $qHeader[0]->design_neck_1;
			$ArrBqHeader[$val]['design_neck_2']		= $qHeader[0]->design_neck_2;
			$ArrBqHeader[$val]['est_neck_1']		= $qHeader[0]->est_neck_1;
			$ArrBqHeader[$val]['est_neck_2']		= $qHeader[0]->est_neck_2;
			$ArrBqHeader[$val]['area_neck_1']		= $qHeader[0]->area_neck_1;
			$ArrBqHeader[$val]['area_neck_2']		= $qHeader[0]->area_neck_2;
			$ArrBqHeader[$val]['flange_od']			= $qHeader[0]->flange_od;
			$ArrBqHeader[$val]['flange_bcd']		= $qHeader[0]->flange_bcd;
			$ArrBqHeader[$val]['flange_n']			= $qHeader[0]->flange_n;
			$ArrBqHeader[$val]['flange_oh']			= $qHeader[0]->flange_oh;
			$ArrBqHeader[$val]['rev']				= $qHeader[0]->rev;
			$ArrBqHeader[$val]['status']			= $qHeader[0]->status;
			$ArrBqHeader[$val]['approve_by']		= $qHeader[0]->approve_by;
			$ArrBqHeader[$val]['approve_date']		= $qHeader[0]->approve_date;
			$ArrBqHeader[$val]['approve_reason']	= $qHeader[0]->approve_reason;
			$ArrBqHeader[$val]['sts_price']			= $qHeader[0]->sts_price;
			$ArrBqHeader[$val]['sts_price_by']		= $qHeader[0]->sts_price_by;
			$ArrBqHeader[$val]['sts_price_date']	= $qHeader[0]->sts_price_date;
			$ArrBqHeader[$val]['sts_price_reason']	= $qHeader[0]->sts_price_reason;
			$ArrBqHeader[$val]['created_by']		= $qHeader[0]->created_by;
			$ArrBqHeader[$val]['created_date']		= $qHeader[0]->created_date;
			$ArrBqHeader[$val]['deleted']			= $qHeader[0]->deleted;
			$ArrBqHeader[$val]['deleted_by']		= $qHeader[0]->deleted_by;
			$ArrBqHeader[$val]['deleted_date']		= $qHeader[0]->deleted_date;
			//
			$ArrBqHeader[$val]['pipe_thickness']		= $qHeader[0]->pipe_thickness;
			$ArrBqHeader[$val]['joint_thickness']		= $qHeader[0]->joint_thickness;
			$ArrBqHeader[$val]['factor_thickness']		= $qHeader[0]->factor_thickness;
			$ArrBqHeader[$val]['factor']			= $qHeader[0]->factor;
			
			
			//================================================================================================================
			//============================================DEFAULT BY ARWANT===================================================
			//================================================================================================================
			if(!empty($qHeader[0]->standart_code)){
				$plusSQL = "";
				if($qHeader[0]->parent_product == 'concentric reducer' OR $qHeader[0]->parent_product == 'reducer tee mould' OR $qHeader[0]->parent_product == 'eccentric reducer' OR $qHeader[0]->parent_product == 'reducer tee slongsong' OR $qHeader[0]->parent_product == 'branch joint'){
					$plusSQL = " AND diameter2='".$qHeader[0]->diameter2."'";
				}
				$getDefVal		= $this->db->query("SELECT * FROM help_default WHERE product_parent='".$qHeader[0]->parent_product."' AND standart_code='".$qHeader[0]->standart_code."' AND diameter='".$qHeader[0]->diameter."' ".$plusSQL." LIMIT 1 ")->result();
				$getDefValNum	= $this->db->query("SELECT * FROM help_default WHERE product_parent='".$qHeader[0]->parent_product."' AND standart_code='".$qHeader[0]->standart_code."' AND diameter='".$qHeader[0]->diameter."' ".$plusSQL." LIMIT 1 ")->num_rows();
				if($getDefValNum > 0){
					$ArrBqDefault[$val]['id_product']				= $valx['id_product'];
					$ArrBqDefault[$val]['id_bq']					= $id_bq;
					$ArrBqDefault[$val]['id_milik']					= $valx['id'];
					$ArrBqDefault[$val]['product_parent']			= $getDefVal[0]->product_parent;
					$ArrBqDefault[$val]['kd_cust']					= $getDefVal[0]->kd_cust;
					$ArrBqDefault[$val]['customer']					= $getDefVal[0]->customer;
					$ArrBqDefault[$val]['standart_code']			= $getDefVal[0]->standart_code;
					$ArrBqDefault[$val]['diameter']					= $getDefVal[0]->diameter;
					$ArrBqDefault[$val]['diameter2']				= $getDefVal[0]->diameter2;
					$ArrBqDefault[$val]['liner']					= $getDefVal[0]->liner;
					$ArrBqDefault[$val]['pn']						= $getDefVal[0]->pn;
					$ArrBqDefault[$val]['overlap']					= $getDefVal[0]->overlap;
					$ArrBqDefault[$val]['waste']					= $getDefVal[0]->waste;
					$ArrBqDefault[$val]['waste_n1']					= $getDefVal[0]->waste_n1;
					$ArrBqDefault[$val]['waste_n2']					= $getDefVal[0]->waste_n2;
					$ArrBqDefault[$val]['max']						= $getDefVal[0]->max;
					$ArrBqDefault[$val]['min']						= $getDefVal[0]->min;
					$ArrBqDefault[$val]['plastic_film']				= $getDefVal[0]->plastic_film;
					$ArrBqDefault[$val]['lin_resin_veil_a']			= $getDefVal[0]->lin_resin_veil_a;
					$ArrBqDefault[$val]['lin_resin_veil_b']			= $getDefVal[0]->lin_resin_veil_b;
					$ArrBqDefault[$val]['lin_resin_veil']			= $getDefVal[0]->lin_resin_veil;
					$ArrBqDefault[$val]['lin_resin_veil_add_a']		= $getDefVal[0]->lin_resin_veil_add_a;
					$ArrBqDefault[$val]['lin_resin_veil_add_b']		= $getDefVal[0]->lin_resin_veil_add_b;
					$ArrBqDefault[$val]['lin_resin_veil_add']		= $getDefVal[0]->lin_resin_veil_add;
					$ArrBqDefault[$val]['lin_resin_csm_a']			= $getDefVal[0]->lin_resin_csm_a;
					$ArrBqDefault[$val]['lin_resin_csm_b']			= $getDefVal[0]->lin_resin_csm_b;
					$ArrBqDefault[$val]['lin_resin_csm']			= $getDefVal[0]->lin_resin_csm;
					$ArrBqDefault[$val]['lin_resin_csm_add_a']		= $getDefVal[0]->lin_resin_csm_add_a;
					$ArrBqDefault[$val]['lin_resin_csm_add_b']		= $getDefVal[0]->lin_resin_csm_add_b;
					$ArrBqDefault[$val]['lin_resin_csm_add']		= $getDefVal[0]->lin_resin_csm_add;
					$ArrBqDefault[$val]['lin_faktor_veil']			= $getDefVal[0]->lin_faktor_veil;
					$ArrBqDefault[$val]['lin_faktor_veil_add']		= $getDefVal[0]->lin_faktor_veil_add;
					$ArrBqDefault[$val]['lin_faktor_csm']			= $getDefVal[0]->lin_faktor_csm;
					$ArrBqDefault[$val]['lin_faktor_csm_add']		= $getDefVal[0]->lin_faktor_csm_add;
					$ArrBqDefault[$val]['lin_resin']				= $getDefVal[0]->lin_resin;
					$ArrBqDefault[$val]['lin_resin_thickness']		= $getDefVal[0]->lin_resin_thickness;
					$ArrBqDefault[$val]['str_resin_csm_a']			= $getDefVal[0]->str_resin_csm_a;
					$ArrBqDefault[$val]['str_resin_csm_b']			= $getDefVal[0]->str_resin_csm_b;
					$ArrBqDefault[$val]['str_resin_csm']			= $getDefVal[0]->str_resin_csm;
					$ArrBqDefault[$val]['str_resin_csm_add_a']		= $getDefVal[0]->str_resin_csm_add_a;
					$ArrBqDefault[$val]['str_resin_csm_add_b']		= $getDefVal[0]->str_resin_csm_add_b;
					$ArrBqDefault[$val]['str_resin_csm_add']		= $getDefVal[0]->str_resin_csm_add;
					$ArrBqDefault[$val]['str_resin_wr_a']			= $getDefVal[0]->str_resin_wr_a;
					$ArrBqDefault[$val]['str_resin_wr_b']			= $getDefVal[0]->str_resin_wr_b;
					$ArrBqDefault[$val]['str_resin_wr']				= $getDefVal[0]->str_resin_wr;
					$ArrBqDefault[$val]['str_resin_wr_add_a']		= $getDefVal[0]->str_resin_wr_add_a;
					$ArrBqDefault[$val]['str_resin_wr_add_b']		= $getDefVal[0]->str_resin_wr_add_b;
					$ArrBqDefault[$val]['str_resin_wr_add']			= $getDefVal[0]->str_resin_wr_add;
					$ArrBqDefault[$val]['str_resin_rv_a']			= $getDefVal[0]->str_resin_rv_a;
					$ArrBqDefault[$val]['str_resin_rv_b']			= $getDefVal[0]->str_resin_rv_b;
					$ArrBqDefault[$val]['str_resin_rv']				= $getDefVal[0]->str_resin_rv;
					$ArrBqDefault[$val]['str_resin_rv_add_a']		= $getDefVal[0]->str_resin_rv_add_a;
					$ArrBqDefault[$val]['str_resin_rv_add_b']		= $getDefVal[0]->str_resin_rv_add_b;
					$ArrBqDefault[$val]['str_resin_rv_add']			= $getDefVal[0]->str_resin_rv_add;
					$ArrBqDefault[$val]['str_faktor_csm']			= $getDefVal[0]->str_faktor_csm;
					$ArrBqDefault[$val]['str_faktor_csm_add']		= $getDefVal[0]->str_faktor_csm_add;
					$ArrBqDefault[$val]['str_faktor_wr']			= $getDefVal[0]->str_faktor_wr;
					$ArrBqDefault[$val]['str_faktor_wr_add']		= $getDefVal[0]->str_faktor_wr_add;
					$ArrBqDefault[$val]['str_faktor_rv']			= $getDefVal[0]->str_faktor_rv;
					$ArrBqDefault[$val]['str_faktor_rv_bw']			= $getDefVal[0]->str_faktor_rv_bw;
					$ArrBqDefault[$val]['str_faktor_rv_jb']			= $getDefVal[0]->str_faktor_rv_jb;
					$ArrBqDefault[$val]['str_faktor_rv_add']		= $getDefVal[0]->str_faktor_rv_add;
					$ArrBqDefault[$val]['str_faktor_rv_add_bw']		= $getDefVal[0]->str_faktor_rv_add_bw;
					$ArrBqDefault[$val]['str_faktor_rv_add_jb']		= $getDefVal[0]->str_faktor_rv_add_jb;
					$ArrBqDefault[$val]['str_resin']				= $getDefVal[0]->str_resin;
					$ArrBqDefault[$val]['str_resin_thickness']		= $getDefVal[0]->str_resin_thickness;
					$ArrBqDefault[$val]['eks_resin_veil_a']			= $getDefVal[0]->eks_resin_veil_a;
					$ArrBqDefault[$val]['eks_resin_veil_b']			= $getDefVal[0]->eks_resin_veil_b;
					$ArrBqDefault[$val]['eks_resin_veil']			= $getDefVal[0]->eks_resin_veil;
					$ArrBqDefault[$val]['eks_resin_veil_add_a']		= $getDefVal[0]->eks_resin_veil_add_a;
					$ArrBqDefault[$val]['eks_resin_veil_add_b']		= $getDefVal[0]->eks_resin_veil_add_b;
					$ArrBqDefault[$val]['eks_resin_veil_add']		= $getDefVal[0]->eks_resin_veil_add;
					$ArrBqDefault[$val]['eks_resin_csm_a']			= $getDefVal[0]->eks_resin_csm_a;
					$ArrBqDefault[$val]['eks_resin_csm_b']			= $getDefVal[0]->eks_resin_csm_b;
					$ArrBqDefault[$val]['eks_resin_csm']			= $getDefVal[0]->eks_resin_csm;
					$ArrBqDefault[$val]['eks_resin_csm_add_a']		= $getDefVal[0]->eks_resin_csm_add_a;
					$ArrBqDefault[$val]['eks_resin_csm_add_b']		= $getDefVal[0]->eks_resin_csm_add_b;
					$ArrBqDefault[$val]['eks_resin_csm_add']		= $getDefVal[0]->eks_resin_csm_add;
					$ArrBqDefault[$val]['eks_faktor_veil']			= $getDefVal[0]->eks_faktor_veil;
					$ArrBqDefault[$val]['eks_faktor_veil_add']		= $getDefVal[0]->eks_faktor_veil_add;
					$ArrBqDefault[$val]['eks_faktor_csm']			= $getDefVal[0]->eks_faktor_csm;
					$ArrBqDefault[$val]['eks_faktor_csm_add']		= $getDefVal[0]->eks_faktor_csm_add;
					$ArrBqDefault[$val]['eks_resin']				= $getDefVal[0]->eks_resin;
					$ArrBqDefault[$val]['eks_resin_thickness']		= $getDefVal[0]->eks_resin_thickness;
					$ArrBqDefault[$val]['topcoat_resin']			= $getDefVal[0]->topcoat_resin;
					$ArrBqDefault[$val]['str_n1_resin_csm_a']		= $getDefVal[0]->str_n1_resin_csm_a;
					$ArrBqDefault[$val]['str_n1_resin_csm_b']		= $getDefVal[0]->str_n1_resin_csm_b;
					$ArrBqDefault[$val]['str_n1_resin_csm']			= $getDefVal[0]->str_n1_resin_csm;
					$ArrBqDefault[$val]['str_n1_resin_csm_add_a']	= $getDefVal[0]->str_n1_resin_csm_add_a;
					$ArrBqDefault[$val]['str_n1_resin_csm_add_b']	= $getDefVal[0]->str_n1_resin_csm_add_b;
					$ArrBqDefault[$val]['str_n1_resin_csm_add']		= $getDefVal[0]->str_n1_resin_csm_add;
					$ArrBqDefault[$val]['str_n1_resin_wr_a']		= $getDefVal[0]->str_n1_resin_wr_a;
					$ArrBqDefault[$val]['str_n1_resin_wr_b']		= $getDefVal[0]->str_n1_resin_wr_b;
					$ArrBqDefault[$val]['str_n1_resin_wr']			= $getDefVal[0]->str_n1_resin_wr;
					$ArrBqDefault[$val]['str_n1_resin_wr_add_a']	= $getDefVal[0]->str_n1_resin_wr_add_a;
					$ArrBqDefault[$val]['str_n1_resin_wr_add_b']	= $getDefVal[0]->str_n1_resin_wr_add_b;
					$ArrBqDefault[$val]['str_n1_resin_wr_add']		= $getDefVal[0]->str_n1_resin_wr_add;
					$ArrBqDefault[$val]['str_n1_resin_rv_a']		= $getDefVal[0]->str_n1_resin_rv_a;
					$ArrBqDefault[$val]['str_n1_resin_rv_b']		= $getDefVal[0]->str_n1_resin_rv_b;
					$ArrBqDefault[$val]['str_n1_resin_rv']			= $getDefVal[0]->str_n1_resin_rv;
					$ArrBqDefault[$val]['str_n1_resin_rv_add_a']	= $getDefVal[0]->str_n1_resin_rv_add_a;
					$ArrBqDefault[$val]['str_n1_resin_rv_add_b']	= $getDefVal[0]->str_n1_resin_rv_add_b;
					$ArrBqDefault[$val]['str_n1_resin_rv_add']		= $getDefVal[0]->str_n1_resin_rv_add;
					$ArrBqDefault[$val]['str_n1_faktor_csm']		= $getDefVal[0]->str_n1_faktor_csm;
					$ArrBqDefault[$val]['str_n1_faktor_csm_add']	= $getDefVal[0]->str_n1_faktor_csm_add;
					$ArrBqDefault[$val]['str_n1_faktor_wr']			= $getDefVal[0]->str_n1_faktor_wr;
					$ArrBqDefault[$val]['str_n1_faktor_wr_add']		= $getDefVal[0]->str_n1_faktor_wr_add;
					$ArrBqDefault[$val]['str_n1_faktor_rv']			= $getDefVal[0]->str_n1_faktor_rv;
					$ArrBqDefault[$val]['str_n1_faktor_rv_bw']		= $getDefVal[0]->str_n1_faktor_rv_bw;
					$ArrBqDefault[$val]['str_n1_faktor_rv_jb']		= $getDefVal[0]->str_n1_faktor_rv_jb;
					$ArrBqDefault[$val]['str_n1_faktor_rv_add']		= $getDefVal[0]->str_n1_faktor_rv_add;
					$ArrBqDefault[$val]['str_n1_faktor_rv_add_bw']	= $getDefVal[0]->str_n1_faktor_rv_add_bw;
					$ArrBqDefault[$val]['str_n1_faktor_rv_add_jb']	= $getDefVal[0]->str_n1_faktor_rv_add_jb;
					$ArrBqDefault[$val]['str_n1_resin']				= $getDefVal[0]->str_n1_resin;
					$ArrBqDefault[$val]['str_n1_resin_thickness']	= $getDefVal[0]->str_n1_resin_thickness;
					$ArrBqDefault[$val]['str_n2_resin_csm_a']		= $getDefVal[0]->str_n2_resin_csm_a;
					$ArrBqDefault[$val]['str_n2_resin_csm_b']		= $getDefVal[0]->str_n2_resin_csm_b;
					$ArrBqDefault[$val]['str_n2_resin_csm']			= $getDefVal[0]->str_n2_resin_csm;
					$ArrBqDefault[$val]['str_n2_resin_csm_add_a']	= $getDefVal[0]->str_n2_resin_csm_add_a;
					$ArrBqDefault[$val]['str_n2_resin_csm_add_b']	= $getDefVal[0]->str_n2_resin_csm_add_b;
					$ArrBqDefault[$val]['str_n2_resin_csm_add']		= $getDefVal[0]->str_n2_resin_csm_add;
					$ArrBqDefault[$val]['str_n2_resin_wr_a']		= $getDefVal[0]->str_n2_resin_wr_a;
					$ArrBqDefault[$val]['str_n2_resin_wr_b']		= $getDefVal[0]->str_n2_resin_wr_b;
					$ArrBqDefault[$val]['str_n2_resin_wr']			= $getDefVal[0]->str_n2_resin_wr;
					$ArrBqDefault[$val]['str_n2_resin_wr_add_a']	= $getDefVal[0]->str_n2_resin_wr_add_a;
					$ArrBqDefault[$val]['str_n2_resin_wr_add_b']	= $getDefVal[0]->str_n2_resin_wr_add_b;
					$ArrBqDefault[$val]['str_n2_resin_wr_add']		= $getDefVal[0]->str_n2_resin_wr_add;
					$ArrBqDefault[$val]['str_n2_faktor_csm']		= $getDefVal[0]->str_n2_faktor_csm;
					$ArrBqDefault[$val]['str_n2_faktor_csm_add']	= $getDefVal[0]->str_n2_faktor_csm_add;
					$ArrBqDefault[$val]['str_n2_faktor_wr']			= $getDefVal[0]->str_n2_faktor_wr;
					$ArrBqDefault[$val]['str_n2_faktor_wr_add']		= $getDefVal[0]->str_n2_faktor_wr_add;
					$ArrBqDefault[$val]['str_n2_resin']				= $getDefVal[0]->str_n2_resin;
					$ArrBqDefault[$val]['str_n2_resin_thickness']	= $getDefVal[0]->str_n2_resin_thickness;
					$ArrBqDefault[$val]['created_by']				= $this->session->userdata['ORI_User']['username'];
					$ArrBqDefault[$val]['created_date']				= date('Y-m-d H:i:s');
				}
			}
			
			//Insert Component Header To Hist
			$qHeaderHistDef		= $this->db->query("SELECT * FROM so_component_default WHERE id_bq='".$id_bq."' ")->result_array();
			$qHeaderHistNumDef	= $this->db->query("SELECT * FROM so_component_default WHERE id_bq='".$id_bq."' ")->num_rows();
			if($qHeaderHistNumDef > 0){
				foreach($qHeaderHistDef AS $val2HistADef => $valx2HistADef){
					$ArrBqDefaultHist[$val2HistADef]['id_product']				= $valx2HistADef['id_product'];
					$ArrBqDefaultHist[$val2HistADef]['id_milik']				= $valx2HistADef['id_milik'];
					$ArrBqDefaultHist[$val2HistADef]['id_bq']					= $valx2HistADef['id_bq'];
					$ArrBqDefaultHist[$val2HistADef]['product_parent']			= $valx2HistADef['product_parent'];
					$ArrBqDefaultHist[$val2HistADef]['kd_cust']					= $valx2HistADef['kd_cust'];
					$ArrBqDefaultHist[$val2HistADef]['customer']				= $valx2HistADef['customer'];
					$ArrBqDefaultHist[$val2HistADef]['standart_code']			= $valx2HistADef['standart_code'];
					$ArrBqDefaultHist[$val2HistADef]['diameter']				= $valx2HistADef['diameter'];
					$ArrBqDefaultHist[$val2HistADef]['diameter2']				= $valx2HistADef['diameter2'];
					$ArrBqDefaultHist[$val2HistADef]['liner']					= $valx2HistADef['liner'];
					$ArrBqDefaultHist[$val2HistADef]['pn']						= $valx2HistADef['pn'];
					$ArrBqDefaultHist[$val2HistADef]['overlap']					= $valx2HistADef['overlap'];
					$ArrBqDefaultHist[$val2HistADef]['waste']					= $valx2HistADef['waste'];
					$ArrBqDefaultHist[$val2HistADef]['waste_n1']				= $valx2HistADef['waste_n1'];
					$ArrBqDefaultHist[$val2HistADef]['waste_n2']				= $valx2HistADef['waste_n2'];
					$ArrBqDefaultHist[$val2HistADef]['max']						= $valx2HistADef['max'];
					$ArrBqDefaultHist[$val2HistADef]['min']						= $valx2HistADef['min'];
					$ArrBqDefaultHist[$val2HistADef]['plastic_film']			= $valx2HistADef['plastic_film'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil_a']		= $valx2HistADef['lin_resin_veil_a'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil_b']		= $valx2HistADef['lin_resin_veil_b'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil']			= $valx2HistADef['lin_resin_veil'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil_add_a']	= $valx2HistADef['lin_resin_veil_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil_add_b']	= $valx2HistADef['lin_resin_veil_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil_add']		= $valx2HistADef['lin_resin_veil_add'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm_a']			= $valx2HistADef['lin_resin_csm_a'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm_b']			= $valx2HistADef['lin_resin_csm_b'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm']			= $valx2HistADef['lin_resin_csm'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm_add_a']		= $valx2HistADef['lin_resin_csm_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm_add_b']		= $valx2HistADef['lin_resin_csm_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm_add']		= $valx2HistADef['lin_resin_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['lin_faktor_veil']			= $valx2HistADef['lin_faktor_veil'];
					$ArrBqDefaultHist[$val2HistADef]['lin_faktor_veil_add']		= $valx2HistADef['lin_faktor_veil_add'];
					$ArrBqDefaultHist[$val2HistADef]['lin_faktor_csm']			= $valx2HistADef['lin_faktor_csm'];
					$ArrBqDefaultHist[$val2HistADef]['lin_faktor_csm_add']		= $valx2HistADef['lin_faktor_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin']				= $valx2HistADef['lin_resin'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_thickness']		= $valx2HistADef['lin_resin_thickness'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm_a']			= $valx2HistADef['str_resin_csm_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm_b']			= $valx2HistADef['str_resin_csm_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm']			= $valx2HistADef['str_resin_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm_add_a']		= $valx2HistADef['str_resin_csm_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm_add_b']		= $valx2HistADef['str_resin_csm_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm_add']		= $valx2HistADef['str_resin_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr_a']			= $valx2HistADef['str_resin_wr_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr_b']			= $valx2HistADef['str_resin_wr_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr']			= $valx2HistADef['str_resin_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr_add_a']		= $valx2HistADef['str_resin_wr_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr_add_b']		= $valx2HistADef['str_resin_wr_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr_add']		= $valx2HistADef['str_resin_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv_a']			= $valx2HistADef['str_resin_rv_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv_b']			= $valx2HistADef['str_resin_rv_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv']			= $valx2HistADef['str_resin_rv'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv_add_a']		= $valx2HistADef['str_resin_rv_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv_add_b']		= $valx2HistADef['str_resin_rv_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv_add']		= $valx2HistADef['str_resin_rv_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_csm']			= $valx2HistADef['str_faktor_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_csm_add']		= $valx2HistADef['str_faktor_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_wr']			= $valx2HistADef['str_faktor_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_wr_add']		= $valx2HistADef['str_faktor_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv']			= $valx2HistADef['str_faktor_rv'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv_bw']		= $valx2HistADef['str_faktor_rv_bw'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv_jb']		= $valx2HistADef['str_faktor_rv_jb'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv_add']		= $valx2HistADef['str_faktor_rv_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv_add_bw']	= $valx2HistADef['str_faktor_rv_add_bw'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv_add_jb']	= $valx2HistADef['str_faktor_rv_add_jb'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin']				= $valx2HistADef['str_resin'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_thickness']		= $valx2HistADef['str_resin_thickness'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil_a']		= $valx2HistADef['eks_resin_veil_a'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil_b']		= $valx2HistADef['eks_resin_veil_b'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil']			= $valx2HistADef['eks_resin_veil'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil_add_a']	= $valx2HistADef['eks_resin_veil_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil_add_b']	= $valx2HistADef['eks_resin_veil_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil_add']		= $valx2HistADef['eks_resin_veil_add'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm_a']			= $valx2HistADef['eks_resin_csm_a'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm_b']			= $valx2HistADef['eks_resin_csm_b'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm']			= $valx2HistADef['eks_resin_csm'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm_add_a']		= $valx2HistADef['eks_resin_csm_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm_add_b']		= $valx2HistADef['eks_resin_csm_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm_add']		= $valx2HistADef['eks_resin_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['eks_faktor_veil']			= $valx2HistADef['eks_faktor_veil'];
					$ArrBqDefaultHist[$val2HistADef]['eks_faktor_veil_add']		= $valx2HistADef['eks_faktor_veil_add'];
					$ArrBqDefaultHist[$val2HistADef]['eks_faktor_csm']			= $valx2HistADef['eks_faktor_csm'];
					$ArrBqDefaultHist[$val2HistADef]['eks_faktor_csm_add']		= $valx2HistADef['eks_faktor_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin']				= $valx2HistADef['eks_resin'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_thickness']		= $valx2HistADef['eks_resin_thickness'];
					$ArrBqDefaultHist[$val2HistADef]['topcoat_resin']			= $valx2HistADef['topcoat_resin'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm_a']		= $valx2HistADef['str_n1_resin_csm_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm_b']		= $valx2HistADef['str_n1_resin_csm_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm']		= $valx2HistADef['str_n1_resin_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm_add_a']	= $valx2HistADef['str_n1_resin_csm_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm_add_b']	= $valx2HistADef['str_n1_resin_csm_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm_add']	= $valx2HistADef['str_n1_resin_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr_a']		= $valx2HistADef['str_n1_resin_wr_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr_b']		= $valx2HistADef['str_n1_resin_wr_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr']			= $valx2HistADef['str_n1_resin_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr_add_a']	= $valx2HistADef['str_n1_resin_wr_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr_add_b']	= $valx2HistADef['str_n1_resin_wr_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr_add']		= $valx2HistADef['str_n1_resin_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv_a']		= $valx2HistADef['str_n1_resin_rv_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv_b']		= $valx2HistADef['str_n1_resin_rv_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv']			= $valx2HistADef['str_n1_resin_rv'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv_add_a']	= $valx2HistADef['str_n1_resin_rv_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv_add_b']	= $valx2HistADef['str_n1_resin_rv_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv_add']		= $valx2HistADef['str_n1_resin_rv_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_csm']		= $valx2HistADef['str_n1_faktor_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_csm_add']	= $valx2HistADef['str_n1_faktor_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_wr']		= $valx2HistADef['str_n1_faktor_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_wr_add']	= $valx2HistADef['str_n1_faktor_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv']		= $valx2HistADef['str_n1_faktor_rv'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv_bw']		= $valx2HistADef['str_n1_faktor_rv_bw'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv_jb']		= $valx2HistADef['str_n1_faktor_rv_jb'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv_add']	= $valx2HistADef['str_n1_faktor_rv_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv_add_bw']	= $valx2HistADef['str_n1_faktor_rv_add_bw'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv_add_jb']	= $valx2HistADef['str_n1_faktor_rv_add_jb'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin']			= $valx2HistADef['str_n1_resin'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_thickness']	= $valx2HistADef['str_n1_resin_thickness'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm_a']		= $valx2HistADef['str_n2_resin_csm_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm_b']		= $valx2HistADef['str_n2_resin_csm_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm']		= $valx2HistADef['str_n2_resin_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm_add_a']	= $valx2HistADef['str_n2_resin_csm_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm_add_b']	= $valx2HistADef['str_n2_resin_csm_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm_add']	= $valx2HistADef['str_n2_resin_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr_a']		= $valx2HistADef['str_n2_resin_wr_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr_b']		= $valx2HistADef['str_n2_resin_wr_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr']			= $valx2HistADef['str_n2_resin_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr_add_a']	= $valx2HistADef['str_n2_resin_wr_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr_add_b']	= $valx2HistADef['str_n2_resin_wr_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr_add']		= $valx2HistADef['str_n2_resin_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_faktor_csm']		= $valx2HistADef['str_n2_faktor_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_faktor_csm_add']	= $valx2HistADef['str_n2_faktor_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_faktor_wr']		= $valx2HistADef['str_n2_faktor_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_faktor_wr_add']	= $valx2HistADef['str_n2_faktor_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin']			= $valx2HistADef['str_n2_resin'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_thickness']	= $valx2HistADef['str_n2_resin_thickness'];
					$ArrBqDefaultHist[$val2HistADef]['created_by']				= $valx2HistADef['created_by'];
					$ArrBqDefaultHist[$val2HistADef]['created_date']			= $valx2HistADef['created_date'];
					$ArrBqDefaultHist[$val2HistADef]['modified_by']				= $valx2HistADef['modified_by'];
					$ArrBqDefaultHist[$val2HistADef]['modified_date']			= $valx2HistADef['modified_date'];
					$ArrBqDefaultHist[$val2HistADef]['hist_by']					= $this->session->userdata['ORI_User']['username'];
					$ArrBqDefaultHist[$val2HistADef]['hist_date']				= date('Y-m-d H:i:s');
					
					
				}
			}
			//================================================================================================================
			//================================================================================================================
			//================================================================================================================
			
			//Insert Component Header To Hist
			$qHeaderHist	= $this->db->query("SELECT * FROM so_component_header WHERE id_bq='".$id_bq."' ")->result_array();
			$qHeaderHistNum	= $this->db->query("SELECT * FROM so_component_header WHERE id_bq='".$id_bq."' ")->num_rows();
			if($qHeaderHistNum > 0){
				foreach($qHeaderHist AS $val2HistA => $valx2HistA){
					$ArrBqHeaderHist[$val2HistA]['id_product']			= $valx2HistA['id_product'];
					$ArrBqHeaderHist[$val2HistA]['id_milik']			= $valx2HistA['id_milik'];
					$ArrBqHeaderHist[$val2HistA]['id_bq']				= $valx2HistA['id_bq'];
					$ArrBqHeaderHist[$val2HistA]['parent_product']		= $valx2HistA['parent_product'];
					$ArrBqHeaderHist[$val2HistA]['nm_product']			= $valx2HistA['nm_product'];
					$ArrBqHeaderHist[$val2HistA]['series']				= $valx2HistA['series'];
					$ArrBqHeaderHist[$val2HistA]['resin_sistem']		= $valx2HistA['resin_sistem'];
					$ArrBqHeaderHist[$val2HistA]['pressure']			= $valx2HistA['pressure'];
					$ArrBqHeaderHist[$val2HistA]['diameter']			= $valx2HistA['diameter'];
					$ArrBqHeaderHist[$val2HistA]['liner']				= $valx2HistA['liner'];
					$ArrBqHeaderHist[$val2HistA]['aplikasi_product']	= $valx2HistA['aplikasi_product'];
					$ArrBqHeaderHist[$val2HistA]['criminal_barier']		= $valx2HistA['criminal_barier'];
					$ArrBqHeaderHist[$val2HistA]['vacum_rate']			= $valx2HistA['vacum_rate'];
					$ArrBqHeaderHist[$val2HistA]['stiffness']			= $valx2HistA['stiffness'];
					$ArrBqHeaderHist[$val2HistA]['design_life']			= $valx2HistA['design_life'];
					$ArrBqHeaderHist[$val2HistA]['standart_by']			= $valx2HistA['standart_by'];
					$ArrBqHeaderHist[$val2HistA]['standart_toleransi']	= $valx2HistA['standart_toleransi'];
					$ArrBqHeaderHist[$val2HistA]['diameter2']			= $valx2HistA['diameter2'];
					$ArrBqHeaderHist[$val2HistA]['panjang']				= $valx2HistA['panjang'];
					$ArrBqHeaderHist[$val2HistA]['radius']				= $valx2HistA['radius'];
					$ArrBqHeaderHist[$val2HistA]['type_elbow']			= $valx2HistA['type_elbow'];
					$ArrBqHeaderHist[$val2HistA]['angle']				= $valx2HistA['angle'];
					$ArrBqHeaderHist[$val2HistA]['design']				= $valx2HistA['design'];
					$ArrBqHeaderHist[$val2HistA]['est']					= $valx2HistA['est'];
					$ArrBqHeaderHist[$val2HistA]['min_toleransi']		= $valx2HistA['min_toleransi'];
					$ArrBqHeaderHist[$val2HistA]['max_toleransi']		= $valx2HistA['max_toleransi'];
					$ArrBqHeaderHist[$val2HistA]['waste']				= $valx2HistA['waste'];
					$ArrBqHeaderHist[$val2HistA]['area']				= $valx2HistA['area'];
					$ArrBqHeaderHist[$val2HistA]['wrap_length']			= $valx2HistA['wrap_length'];
					$ArrBqHeaderHist[$val2HistA]['wrap_length2']		= $valx2HistA['wrap_length2'];
					$ArrBqHeaderHist[$val2HistA]['high']				= $valx2HistA['high'];
					$ArrBqHeaderHist[$val2HistA]['area2']				= $valx2HistA['area2'];
					$ArrBqHeaderHist[$val2HistA]['panjang_neck_1']		= $valx2HistA['panjang_neck_1'];
					$ArrBqHeaderHist[$val2HistA]['panjang_neck_2']		= $valx2HistA['panjang_neck_2'];
					$ArrBqHeaderHist[$val2HistA]['design_neck_1']		= $valx2HistA['design_neck_1'];
					$ArrBqHeaderHist[$val2HistA]['design_neck_2']		= $valx2HistA['design_neck_2'];
					$ArrBqHeaderHist[$val2HistA]['est_neck_1']			= $valx2HistA['est_neck_1'];
					$ArrBqHeaderHist[$val2HistA]['est_neck_2']			= $valx2HistA['est_neck_2'];
					$ArrBqHeaderHist[$val2HistA]['area_neck_1']			= $valx2HistA['area_neck_1'];
					$ArrBqHeaderHist[$val2HistA]['area_neck_2']			= $valx2HistA['area_neck_2'];
					$ArrBqHeaderHist[$val2HistA]['flange_od']			= $valx2HistA['flange_od'];
					$ArrBqHeaderHist[$val2HistA]['flange_bcd']			= $valx2HistA['flange_bcd'];
					$ArrBqHeaderHist[$val2HistA]['flange_n']			= $valx2HistA['flange_n'];
					$ArrBqHeaderHist[$val2HistA]['flange_oh']			= $valx2HistA['flange_oh'];
					$ArrBqHeaderHist[$val2HistA]['rev']					= $valx2HistA['rev'];
					$ArrBqHeaderHist[$val2HistA]['status']				= $valx2HistA['status'];
					$ArrBqHeaderHist[$val2HistA]['approve_by']			= $valx2HistA['approve_by'];
					$ArrBqHeaderHist[$val2HistA]['approve_date']		= $valx2HistA['approve_date'];
					$ArrBqHeaderHist[$val2HistA]['approve_reason']		= $valx2HistA['approve_reason'];
					$ArrBqHeaderHist[$val2HistA]['sts_price']			= $valx2HistA['sts_price'];
					$ArrBqHeaderHist[$val2HistA]['sts_price_by']		= $valx2HistA['sts_price_by'];
					$ArrBqHeaderHist[$val2HistA]['sts_price_date']		= $valx2HistA['sts_price_date'];
					$ArrBqHeaderHist[$val2HistA]['sts_price_reason']	= $valx2HistA['sts_price_reason'];
					$ArrBqHeaderHist[$val2HistA]['created_by']			= $valx2HistA['created_by'];
					$ArrBqHeaderHist[$val2HistA]['created_date']		= $valx2HistA['created_date'];
					$ArrBqHeaderHist[$val2HistA]['deleted']				= $valx2HistA['deleted'];
					$ArrBqHeaderHist[$val2HistA]['deleted_by']			= $valx2HistA['deleted_by'];
					$ArrBqHeaderHist[$val2HistA]['deleted_date']		= $valx2HistA['deleted_date'];
					$ArrBqHeaderHist[$val2HistA]['hist_by']				= $this->session->userdata['ORI_User']['username'];
					$ArrBqHeaderHist[$val2HistA]['hist_date']			= date('Y-m-d H:i:s');
					
				}
			}

			//Component Detail
			$qDetail	= $this->db->query("SELECT a.*, b.panjang FROM component_detail a LEFT JOIN component_header b ON a.id_product = b.id_product WHERE a.id_product='".$valx['id_product']."' ")->result_array();
			foreach($qDetail AS $val2 => $valx2){
				$LoopDetail++;

				// $sqlPrice = "SELECT price_ref_estimation FROM raw_materials WHERE id_material='".$valx2['id_material']."' LIMIT 1";
				// $restPrice = $this->db->query($sqlPrice)->result();

				$ArrBqDetail[$LoopDetail]['id_product']		= $valx['id_product'];
				$ArrBqDetail[$LoopDetail]['id_bq']				= $id_bq;
				$ArrBqDetail[$LoopDetail]['id_milik']			= $valx['id'];
				$ArrBqDetail[$LoopDetail]['detail_name']		= $valx2['detail_name'];
				$ArrBqDetail[$LoopDetail]['acuhan']			= $valx2['acuhan'];
				$ArrBqDetail[$LoopDetail]['id_ori']			= $valx2['id_ori'];
				$ArrBqDetail[$LoopDetail]['id_ori2']			= $valx2['id_ori2'];
				$ArrBqDetail[$LoopDetail]['id_category']		= $valx2['id_category'];
				$ArrBqDetail[$LoopDetail]['nm_category']		= $valx2['nm_category'];
				$ArrBqDetail[$LoopDetail]['id_material']		= $valx2['id_material'];
				$ArrBqDetail[$LoopDetail]['nm_material']		= $valx2['nm_material'];
				$ArrBqDetail[$LoopDetail]['value']			= $valx2['value'];
				$ArrBqDetail[$LoopDetail]['thickness']		= $valx2['thickness'];
				$ArrBqDetail[$LoopDetail]['fak_pengali']		= $valx2['fak_pengali'];
				$ArrBqDetail[$LoopDetail]['bw']				= $valx2['bw'];
				$ArrBqDetail[$LoopDetail]['jumlah']			= $valx2['jumlah'];
				$ArrBqDetail[$LoopDetail]['layer']			= $valx2['layer'];
				$ArrBqDetail[$LoopDetail]['containing']		= $valx2['containing'];
				$ArrBqDetail[$LoopDetail]['total_thickness']	= $valx2['total_thickness'];
				if($qHeader[0]->parent_product == 'pipe' OR $qHeader[0]->parent_product == 'pipe slongsong'){
					$ArrBqDetail[$LoopDetail]['last_cost']	= (floatval($valx2['last_cost']) / floatval($valx2['panjang']))* (floatval($valx['panjang']) + 400);
				}
				elseif ($qHeader[0]->parent_product == 'branch joint' OR $qHeader[0]->parent_product == 'field joint' OR $qHeader[0]->parent_product == 'shop joint') {
					$ArrBqDetail[$LoopDetail]['last_cost']	= $valx2['material_weight'];
				}
				else{
					$ArrBqDetail[$LoopDetail]['last_cost']	= $valx2['last_cost'];
				}
				$ArrBqDetail[$LoopDetail]['rev']				= $qHeader[0]->rev;
				//
				$ArrBqDetail[$LoopDetail]['area_weight']				= $valx2['area_weight'];
				$ArrBqDetail[$LoopDetail]['material_weight']				= $valx2['material_weight'];
				$ArrBqDetail[$LoopDetail]['percentage']				= $valx2['percentage'];
				$ArrBqDetail[$LoopDetail]['resin_content']				= $valx2['resin_content'];

				$ArrBqDetail[$LoopDetail]['price_mat']				= get_price_ref($valx2['id_material']);
			}

			//Component Lamination
			$qDetailLam	= $this->db->query("SELECT * FROM component_lamination WHERE id_product='".$valx['id_product']."' ")->result_array();
			foreach($qDetailLam AS $val2 => $valx2){
				$LoopDetailLam++;
				$ArrBqDetailLam[$LoopDetailLam]['id_product']		= $valx['id_product'];
				$ArrBqDetailLam[$LoopDetailLam]['id_bq']				= $id_bq;
				$ArrBqDetailLam[$LoopDetailLam]['id_milik']			= $valx['id'];
				$ArrBqDetailLam[$LoopDetailLam]['detail_name']		= $valx2['detail_name'];
				$ArrBqDetailLam[$LoopDetailLam]['lapisan']			= $valx2['lapisan'];
				$ArrBqDetailLam[$LoopDetailLam]['std_glass']			= $valx2['std_glass'];
				$ArrBqDetailLam[$LoopDetailLam]['width']			= $valx2['width'];
				$ArrBqDetailLam[$LoopDetailLam]['stage']		= $valx2['stage'];
				$ArrBqDetailLam[$LoopDetailLam]['glass']		= $valx2['glass'];
				$ArrBqDetailLam[$LoopDetailLam]['thickness_1']		= $valx2['thickness_1'];
				$ArrBqDetailLam[$LoopDetailLam]['thickness_2']		= $valx2['thickness_2'];
				$ArrBqDetailLam[$LoopDetailLam]['glass_length']			= $valx2['glass_length'];
				$ArrBqDetailLam[$LoopDetailLam]['weight_veil']		= $valx2['weight_veil'];
				$ArrBqDetailLam[$LoopDetailLam]['weight_csm']		= $valx2['weight_csm'];
				$ArrBqDetailLam[$LoopDetailLam]['weight_wr']				= $valx2['weight_wr'];
			}

			//Insert Component Detail To Hist
			$qDetailHist	= $this->db->query("SELECT * FROM so_component_detail WHERE id_bq='".$id_bq."' ")->result_array();
			$qDetailHistNum	= $this->db->query("SELECT * FROM so_component_detail WHERE id_bq='".$id_bq."' ")->num_rows();
			if($qDetailHistNum > 0){
				foreach($qDetailHist AS $val2Hist => $valx2Hist){
					$ArrBqDetailHist[$val2Hist]['id_product']		= $valx2Hist['id_product'];
					$ArrBqDetailHist[$val2Hist]['id_bq']			= $valx2Hist['id_bq'];
					$ArrBqDetailHist[$val2Hist]['id_milik']			= $valx2Hist['id_milik'];
					$ArrBqDetailHist[$val2Hist]['detail_name']		= $valx2Hist['detail_name'];
					$ArrBqDetailHist[$val2Hist]['acuhan']			= $valx2Hist['acuhan'];
					$ArrBqDetailHist[$val2Hist]['id_ori']			= $valx2Hist['id_ori'];
					$ArrBqDetailHist[$val2Hist]['id_ori2']			= $valx2Hist['id_ori2'];
					$ArrBqDetailHist[$val2Hist]['id_category']		= $valx2Hist['id_category'];
					$ArrBqDetailHist[$val2Hist]['nm_category']		= $valx2Hist['nm_category'];
					$ArrBqDetailHist[$val2Hist]['id_material']		= $valx2Hist['id_material'];
					$ArrBqDetailHist[$val2Hist]['nm_material']		= $valx2Hist['nm_material'];
					$ArrBqDetailHist[$val2Hist]['value']			= $valx2Hist['value'];
					$ArrBqDetailHist[$val2Hist]['thickness']		= $valx2Hist['thickness'];
					$ArrBqDetailHist[$val2Hist]['fak_pengali']		= $valx2Hist['fak_pengali'];
					$ArrBqDetailHist[$val2Hist]['bw']				= $valx2Hist['bw'];
					$ArrBqDetailHist[$val2Hist]['jumlah']			= $valx2Hist['jumlah'];
					$ArrBqDetailHist[$val2Hist]['layer']			= $valx2Hist['layer'];
					$ArrBqDetailHist[$val2Hist]['containing']		= $valx2Hist['containing'];
					$ArrBqDetailHist[$val2Hist]['total_thickness']	= $valx2Hist['total_thickness'];
					$ArrBqDetailHist[$val2Hist]['last_cost']		= $valx2Hist['last_cost'];
					$ArrBqDetailHist[$val2Hist]['rev']				= $valx2Hist['rev'];
					$ArrBqDetailHist[$val2Hist]['price_mat']		= $valx2Hist['price_mat'];
					$ArrBqDetailHist[$val2Hist]['hist_by']			= $this->session->userdata['ORI_User']['username'];
					$ArrBqDetailHist[$val2Hist]['hist_date']		= date('Y-m-d H:i:s');
				}
			}

			//Component Detail Plus
			$qDetailPlus	= $this->db->query("SELECT a.*, b.panjang FROM component_detail_plus a LEFT JOIN component_header b ON a.id_product = b.id_product WHERE a.id_product='".$valx['id_product']."' ")->result_array();
			foreach($qDetailPlus AS $val3 => $valx3){
				$LoopDetailPlus++;

				// $sqlPrice = "SELECT price_ref_estimation FROM raw_materials WHERE id_material='".$valx3['id_material']."' LIMIT 1";
				// $restPrice = $this->db->query($sqlPrice)->result();

				$ArrBqDetailPlus[$LoopDetailPlus]['id_product']		= $valx['id_product'];
				$ArrBqDetailPlus[$LoopDetailPlus]['id_bq']			= $id_bq;
				$ArrBqDetailPlus[$LoopDetailPlus]['id_milik']			= $valx['id'];
				$ArrBqDetailPlus[$LoopDetailPlus]['detail_name']		= $valx3['detail_name'];
				$ArrBqDetailPlus[$LoopDetailPlus]['id_ori']			= $valx3['id_ori'];
				$ArrBqDetailPlus[$LoopDetailPlus]['id_ori2']			= $valx3['id_ori2'];
				$ArrBqDetailPlus[$LoopDetailPlus]['id_category']		= $valx3['id_category'];
				$ArrBqDetailPlus[$LoopDetailPlus]['nm_category']		= $valx3['nm_category'];
				$ArrBqDetailPlus[$LoopDetailPlus]['id_material']		= $valx3['id_material'];
				$ArrBqDetailPlus[$LoopDetailPlus]['nm_material']		= $valx3['nm_material'];
				$ArrBqDetailPlus[$LoopDetailPlus]['containing']		= $valx3['containing'];
				$ArrBqDetailPlus[$LoopDetailPlus]['perse']			= $valx3['perse'];
				if($qHeader[0]->parent_product == 'pipe' OR $qHeader[0]->parent_product == 'pipe slongsong'){
					$ArrBqDetailPlus[$LoopDetailPlus]['last_full']	= (floatval($valx3['last_full']) / floatval($valx3['panjang'])) * (floatval($valx['panjang']) + 400);
					$ArrBqDetailPlus[$LoopDetailPlus]['last_cost']	= (floatval($valx3['last_cost']) / floatval($valx3['panjang'])) * (floatval($valx['panjang']) + 400);
				}
				else{
					$ArrBqDetailPlus[$LoopDetailPlus]['last_full']	= $valx3['last_full'];
					$ArrBqDetailPlus[$LoopDetailPlus]['last_cost']	= $valx3['last_cost'];
				}
				$ArrBqDetailPlus[$LoopDetailPlus]['rev']				= $qHeader[0]->rev;
				$ArrBqDetailPlus[$LoopDetailPlus]['price_mat']				= get_price_ref($valx3['id_material']);
			}

			//Insert Component Detail Plus To Hist
			$qDetailPlusHist	= $this->db->query("SELECT * FROM so_component_detail_plus WHERE id_bq='".$id_bq."' ")->result_array();
			$qDetailPlusHistNum	= $this->db->query("SELECT * FROM so_component_detail_plus WHERE id_bq='".$id_bq."' ")->num_rows();
			if($qDetailPlusHistNum > 0){
				foreach($qDetailPlusHist AS $val3Hist => $valx3Hist){
					$ArrBqDetailPlusHist[$val3Hist]['id_product']	= $valx3Hist['id_product'];
					$ArrBqDetailPlusHist[$val3Hist]['id_bq']		= $valx3Hist['id_bq'];
					$ArrBqDetailPlusHist[$val3Hist]['id_milik']		= $valx3Hist['id_milik'];
					$ArrBqDetailPlusHist[$val3Hist]['detail_name']	= $valx3Hist['detail_name'];
					$ArrBqDetailPlusHist[$val3Hist]['id_ori']		= $valx3Hist['id_ori'];
					$ArrBqDetailPlusHist[$val3Hist]['id_ori2']		= $valx3Hist['id_ori2'];
					$ArrBqDetailPlusHist[$val3Hist]['id_category']	= $valx3Hist['id_category'];
					$ArrBqDetailPlusHist[$val3Hist]['nm_category']	= $valx3Hist['nm_category'];
					$ArrBqDetailPlusHist[$val3Hist]['id_material']	= $valx3Hist['id_material'];
					$ArrBqDetailPlusHist[$val3Hist]['nm_material']	= $valx3Hist['nm_material'];
					$ArrBqDetailPlusHist[$val3Hist]['containing']	= $valx3Hist['containing'];
					$ArrBqDetailPlusHist[$val3Hist]['perse']		= $valx3Hist['perse'];
					$ArrBqDetailPlusHist[$val3Hist]['last_full']	= $valx3Hist['last_full'];
					$ArrBqDetailPlusHist[$val3Hist]['last_cost']	= $valx3Hist['last_cost'];
					$ArrBqDetailPlusHist[$val3Hist]['rev']			= $valx3Hist['rev'];
					$ArrBqDetailPlusHist[$val3Hist]['price_mat']	= $valx3Hist['price_mat'];
					$ArrBqDetailPlusHist[$val3Hist]['hist_by']		= $this->session->userdata['ORI_User']['username'];
					$ArrBqDetailPlusHist[$val3Hist]['hist_date']	= date('Y-m-d H:i:s');
				}
			}

			//Component Detail Add
			$qDetailAdd		= $this->db->query("SELECT a.*, b.panjang FROM component_detail_add a LEFT JOIN component_header b ON a.id_product = b.id_product WHERE a.id_product='".$valx['id_product']."' ")->result_array();
			$qDetailAddNum	= $this->db->query("SELECT * FROM component_detail_add WHERE id_product='".$valx['id_product']."' ")->num_rows();
			if($qDetailAddNum > 0){
				foreach($qDetailAdd AS $val4 => $valx4){
					$LoopDetailAdd++;
					// $sqlPrice = "SELECT price_ref_estimation FROM raw_materials WHERE id_material='".$valx2['id_material']."' LIMIT 1";
					// $restPrice = $this->db->query($sqlPrice)->result();
					$ArrBqDetailAdd[$LoopDetailAdd]['id_product']		= $valx['id_product'];
					$ArrBqDetailAdd[$LoopDetailAdd]['id_bq']				= $id_bq;
					$ArrBqDetailAdd[$LoopDetailAdd]['id_milik']			= $valx['id'];
					$ArrBqDetailAdd[$LoopDetailAdd]['detail_name']		= $valx4['detail_name'];
					$ArrBqDetailAdd[$LoopDetailAdd]['id_category']		= $valx4['id_category'];
					$ArrBqDetailAdd[$LoopDetailAdd]['nm_category']		= $valx4['nm_category'];
					$ArrBqDetailAdd[$LoopDetailAdd]['id_material']		= $valx4['id_material'];
					$ArrBqDetailAdd[$LoopDetailAdd]['nm_material']		= $valx4['nm_material'];
					$ArrBqDetailAdd[$LoopDetailAdd]['containing']		= $valx4['containing'];
					$ArrBqDetailAdd[$LoopDetailAdd]['perse']				= $valx4['perse'];
					if($qHeader[0]->parent_product == 'pipe' OR $qHeader[0]->parent_product == 'pipe slongsong'){
						$ArrBqDetailAdd[$LoopDetailAdd]['last_full']		= (floatval($valx4['last_full']) / floatval($valx4['panjang'])) * (floatval($valx['panjang']) + 400);
						$ArrBqDetailAdd[$LoopDetailAdd]['last_cost']		= (floatval($valx4['last_cost']) / floatval($valx4['panjang'])) * (floatval($valx['panjang']) + 400);
					}
					else{
						$ArrBqDetailAdd[$LoopDetailAdd]['last_full']		= $valx4['last_full'];
						$ArrBqDetailAdd[$LoopDetailAdd]['last_cost']		= $valx4['last_cost'];
					}
					$ArrBqDetailAdd[$LoopDetailAdd]['rev']				= $qHeader[0]->rev;
					$ArrBqDetailAdd[$LoopDetailAdd]['price_mat']		= get_price_ref($valx4['id_material']);
				}
			}

			//Insert Component Detail Add To Hist
			$qDetailAddHist		= $this->db->query("SELECT * FROM so_component_detail_add WHERE id_bq='".$id_bq."' ")->result_array();
			$qDetailAddNumHist	= $this->db->query("SELECT * FROM so_component_detail_add WHERE id_bq='".$id_bq."' ")->num_rows();
			if($qDetailAddNumHist > 0){
				foreach($qDetailAddHist AS $val4Hist => $valx4Hist){
					
					$ArrBqDetailAddHist[$val4Hist]['id_product']	= $valx4Hist['id_product'];
					$ArrBqDetailAddHist[$val4Hist]['id_bq']			= $valx4Hist['id_bq'];
					$ArrBqDetailAddHist[$val4Hist]['id_milik']		= $valx4Hist['id_milik'];
					$ArrBqDetailAddHist[$val4Hist]['detail_name']	= $valx4Hist['detail_name'];
					$ArrBqDetailAddHist[$val4Hist]['id_category']	= $valx4Hist['id_category'];
					$ArrBqDetailAddHist[$val4Hist]['nm_category']	= $valx4Hist['nm_category'];
					$ArrBqDetailAddHist[$val4Hist]['id_material']	= $valx4Hist['id_material'];
					$ArrBqDetailAddHist[$val4Hist]['nm_material']	= $valx4Hist['nm_material'];
					$ArrBqDetailAddHist[$val4Hist]['containing']	= $valx4Hist['containing'];
					$ArrBqDetailAddHist[$val4Hist]['perse']			= $valx4Hist['perse'];
					$ArrBqDetailAddHist[$val4Hist]['last_full']		= $valx4Hist['last_full'];
					$ArrBqDetailAddHist[$val4Hist]['last_cost']		= $valx4Hist['last_cost'];
					$ArrBqDetailAddHist[$val4Hist]['rev']			= $valx4Hist['rev'];
					$ArrBqDetailAddHist[$val4Hist]['price_mat']		= $valx4Hist['price_mat'];
					$ArrBqDetailAddHist[$val4Hist]['hist_by']		= $this->session->userdata['ORI_User']['username'];
					$ArrBqDetailAddHist[$val4Hist]['hist_date']		= date('Y-m-d H:i:s');
				}
			}

			//Component Footer
			$qDetailFooter	= $this->db->query("SELECT * FROM component_footer WHERE id_product='".$valx['id_product']."' ")->result_array();
			if (count($qDetailFooter)>0)
			{
				foreach($qDetailFooter AS $val5 => $valx5){
					$LoopFooter++;
					$ArrBqFooter[$LoopFooter]['id_product']	= $valx['id_product'];
					$ArrBqFooter[$LoopFooter]['id_bq']		= $id_bq;
					$ArrBqFooter[$LoopFooter]['id_milik']		= $valx['id'];
					$ArrBqFooter[$LoopFooter]['detail_name']	= $valx5['detail_name'];
					$ArrBqFooter[$LoopFooter]['total']		= $valx5['total'];
					$ArrBqFooter[$LoopFooter]['min']			= $valx5['min'];
					$ArrBqFooter[$LoopFooter]['max']			= $valx5['max'];
					$ArrBqFooter[$LoopFooter]['hasil']		= $valx5['hasil'];
					$ArrBqFooter[$LoopFooter]['rev']			= $qHeader[0]->rev;
				}
			}
			//Insert Component Footer To Hist
			$qDetailFooterHist		= $this->db->query("SELECT * FROM so_component_footer WHERE id_bq='".$id_bq."' ")->result_array();
			$qDetailFooterHistNum	= $this->db->query("SELECT * FROM so_component_footer WHERE id_bq='".$id_bq."' ")->num_rows();
			if($qDetailFooterHistNum > 0){
				foreach($qDetailFooterHist AS $val5Hist => $valx5Hist){
					$ArrBqFooterHist[$val5Hist]['id_product']	= $valx5Hist['id_product'];
					$ArrBqFooterHist[$val5Hist]['id_bq']		= $valx5Hist['id_bq'];
					$ArrBqFooterHist[$val5Hist]['id_milik']		= $valx5Hist['id_milik'];
					$ArrBqFooterHist[$val5Hist]['detail_name']	= $valx5Hist['detail_name'];
					$ArrBqFooterHist[$val5Hist]['total']		= $valx5Hist['total'];
					$ArrBqFooterHist[$val5Hist]['min']			= $valx5Hist['min'];
					$ArrBqFooterHist[$val5Hist]['max']			= $valx5Hist['max'];
					$ArrBqFooterHist[$val5Hist]['hasil']		= $valx5Hist['hasil'];
					$ArrBqFooterHist[$val5Hist]['rev']			= $valx5Hist['rev'];
					$ArrBqFooterHist[$val5Hist]['hist_by']		= $this->session->userdata['ORI_User']['username'];
					$ArrBqFooterHist[$val5Hist]['hist_date']	= date('Y-m-d H:i:s');
				}
			}

			$qDetailHeaderNum2			= $this->db->query("SELECT * FROM so_component_header WHERE id_bq='".$id_bq."' ")->num_rows();
			$qDetailDetailNum2			= $this->db->query("SELECT * FROM so_component_detail WHERE id_bq='".$id_bq."' ")->num_rows();
			$qDetailDetailPlusNum2		= $this->db->query("SELECT * FROM so_component_detail_plus WHERE id_bq='".$id_bq."' ")->num_rows();
			$qDetailDetailAddNum2		= $this->db->query("SELECT * FROM so_component_detail_add WHERE id_bq='".$id_bq."' ")->num_rows();
			$qDetailDetailFooterNum2	= $this->db->query("SELECT * FROM so_component_footer WHERE id_bq='".$id_bq."' ")->num_rows();
			// echo $qDetailHeaderNum2;
			
		}

		// print_r($ArrBqDefault);
		// print_r($ArrBqDetail);
		// print_r($ArrBqDetailPlus);
		// print_r($ArrBqDetailAdd);
		// print_r($ArrBqFooter); ArrBqDefaultHist
		// echo $qDetailAddNum2;
		// echo $qDetailHeaderNum2;
		// echo $qDetailDetailNum2;
		// echo $qDetailDetailPlusNum2;
		// echo $qDetailDetailAddNum2;
		// echo $qDetailDetailFooterNum2;
		// echo "</pre>";
		// exit;

		$UpdateBQ	= array(
			'estimasi'	=> 'Y',
			'est_by'	=> $this->session->userdata['ORI_User']['username'],
			'est_date'	=> date('Y-m-d H:i:s')
		);

		$this->db->trans_start();
			$this->db->update_batch('so_detail_header', $ArrDetBq2, 'id');

			//Insert Batch Histories
			if(!empty($ArrBqHeaderHist)){
				$this->db->insert_batch('hist_so_component_header', $ArrBqHeaderHist);
			}
			if(!empty($ArrBqDetailHist)){
				$this->db->insert_batch('hist_so_component_detail', $ArrBqDetailHist);
			}
			if(!empty($ArrBqDetailPlusHist)){
				$this->db->insert_batch('hist_so_component_detail_plus', $ArrBqDetailPlusHist);
			}
			if(!empty($ArrBqDetailAddHist)){
				$this->db->insert_batch('hist_so_component_detail_add', $ArrBqDetailAddHist);
			}
			if(count($ArrBqFooterHist)>0){
				$this->db->insert_batch('hist_so_component_footer', $ArrBqFooterHist);
			}
			if(!empty($ArrBqDefaultHist)){
				$this->db->insert_batch('hist_so_component_default', $ArrBqDefaultHist);
			}

			//Delete BQ Component
			foreach($dtListArray AS $val => $valx){ 
				$this->db->delete('so_component_header', array('id_bq' => $id_bq, 'id_milik' => $valx['id']));
				$this->db->delete('so_component_detail', array('id_bq' => $id_bq, 'id_milik' => $valx['id']));
				$this->db->delete('so_component_lamination', array('id_bq' => $id_bq, 'id_milik' => $valx['id']));
				$this->db->delete('so_component_detail_plus', array('id_bq' => $id_bq, 'id_milik' => $valx['id']));
				$this->db->delete('so_component_detail_add', array('id_bq' => $id_bq, 'id_milik' => $valx['id']));
				$this->db->delete('so_component_footer', array('id_bq' => $id_bq, 'id_milik' => $valx['id']));
				$this->db->delete('so_component_default', array('id_bq' => $id_bq, 'id_milik' => $valx['id']));
			}
			
			// $this->db->delete('so_component_header', array('id_bq' => $id_bq));
			// $this->db->delete('so_component_detail', array('id_bq' => $id_bq));
			// $this->db->delete('so_component_lamination', array('id_bq' => $id_bq));
			// $this->db->delete('so_component_detail_plus', array('id_bq' => $id_bq));
			// $this->db->delete('so_component_detail_add', array('id_bq' => $id_bq));
			// $this->db->delete('so_component_footer', array('id_bq' => $id_bq));
			// $this->db->delete('so_component_default', array('id_bq' => $id_bq));

			//Insert BQ Component
			if(!empty($ArrBqHeader)){
				$this->db->insert_batch('so_component_header', $ArrBqHeader);
			}
			if(!empty($ArrBqDetail)){
				$this->db->insert_batch('so_component_detail', $ArrBqDetail);
			}
			if(!empty($ArrBqDetailLam)){
				$this->db->insert_batch('so_component_lamination', $ArrBqDetailLam);
			}
			if(!empty($ArrBqDetailPlus)){
				$this->db->insert_batch('so_component_detail_plus', $ArrBqDetailPlus);
			}
			if(!empty($ArrBqDetailAdd)){
				$this->db->insert_batch('so_component_detail_add', $ArrBqDetailAdd);
			}
			if(!empty($ArrBqFooter)){
				$this->db->insert_batch('so_component_footer', $ArrBqFooter);
			}
			if(!empty($ArrBqDefault)){
				$this->db->insert_batch('so_component_default', $ArrBqDefault);
			}

			$this->db->where('id_bq', $id_bq);
			$this->db->update('so_header', $UpdateBQ);

		$this->db->trans_complete();

		if($this->db->trans_status() === FALSE){
			$this->db->trans_rollback();
			$Arr_Kembali	= array(
				'pesan'		=>'Estimation structure bq data failed. Please try again later ...',
				'status'	=> 0
			);
		}
		else{
			$this->db->trans_commit();
			$Arr_Kembali	= array(
				'id_bqx'	=> $id_bq,
				'pembeda'	=> $pembeda,
				'pesan'		=>'Estimation structure bq data success. Thanks ...',
				'status'	=> 1
			);
			history('Estimation Structure BQ (tarik baru) in Final Drawing with code : '.$id_bq.'/'.$no_ipp);
		}

		echo json_encode($Arr_Kembali);
	}

	public function updateBQNewBQ(){
		$Arr_Kembali	= array();
		$data			= $this->input->post();
		
		$id_bq			= "BQ-".$data['no_ipp'];
		$no_ipp			= $data['no_ipp'];
		$pembeda		= $data['pembeda'];
		
		$chOri			= $data['check'];
		$check 			= $chOri;
		$detailBQ		= $data['detailBQ'];
		$Arr0 = array();
		foreach($check AS $vaxl){
			$valG = explode('-', $vaxl);
			$Arr0[$vaxl] = $valG[0];
			$Arr1[$vaxl] = $valG[1];
		}
		$dtImplode		= "('".implode("','", $Arr0)."')";
		$dtImplode2		= "('".implode("','", $Arr1)."')";

		// echo $dtImplode2;
		// exit;
		
		$dtListArray 	= array();
		foreach($check AS $valT ){
			foreach($detailBQ AS $val => $valx){
				$valG = explode('-', $valT);
				if($valx['id'] == $valG[0]){
					$dtListArray[$val]['id'] = $valx['id'];
					$dtListArray[$val]['id_milik'] = $valG[1];
					$dtListArray[$val]['panjang'] = $valx['panjang'];
					$dtListArray[$val]['id_productx'] = $valx['id_productx'];
				}
			}
		}
		
		$ArrDetBq		= array();
		foreach($dtListArray AS $val => $valx){
			if(!empty($valx["id_productx"]))
			{
				$ArrDetBq[$val]['id']	= $valx['id'];
				$ArrDetBq[$val]['id_milik']	= $valx['id_milik'];
				$ArrDetBq[$val]['id_product']	= $valx['id_productx'];
				$ArrDetBq[$val]['panjang']	= $valx['panjang'];
			}
		}

		// print_r($ArrDetBq);
		// exit;

		$ArrDetBq2		= array();
		foreach($dtListArray AS $val => $valx){
			if(!empty($valx["id_productx"]))
			{
				$ArrDetBq2[$val]['id']	= $valx['id'];
				$ArrDetBq2[$val]['id_product']	= $valx['id_productx'];
			}
		}

		// print_r($ArrDetBq);
		// print_r($ArrDetBq2);
		// exit;
		// $ArrHeader 		= array_unique(array_column($ArrDetBq, "id_product"));
		// echo "<pre>";

		$ArrBqHeader			= array();
		$ArrBqDetail			= array();
		$ArrBqDetailPlus		= array();
		$ArrBqDetailAdd			= array();
		$ArrBqFooter			= array();
		$ArrBqHeaderHist		= array();
		$ArrBqDetailHist		= array();
		$ArrBqDetailPlusHist	= array();
		$ArrBqDetailAddHist		= array();
		$ArrBqFooterHist		= array();
		$ArrBqDefault			= array();
		$ArrBqDefaultHist		= array();

		$LoopDetail = 0;
		$LoopDetailLam = 0;
		$LoopDetailPlus = 0;
		$LoopDetailAdd = 0;
		$LoopFooter = 0;
		foreach($ArrDetBq AS $val => $valx){
			//Component Header
			$qHeader	= $this->db->query("SELECT * FROM bq_component_header WHERE id_product='".$valx['id_product']."' AND id_milik='".$valx['id_milik']."' LIMIT 1 ")->result();
			$ArrBqHeader[$val]['id_product']			= $valx['id_product'];
			$ArrBqHeader[$val]['id_bq']					= $id_bq;
			$ArrBqHeader[$val]['id_milik']				= $valx['id'];
			$ArrBqHeader[$val]['parent_product']		= $qHeader[0]->parent_product;
			$ArrBqHeader[$val]['nm_product']			= $qHeader[0]->nm_product;
			$ArrBqHeader[$val]['standart_code']			= $qHeader[0]->standart_code;
			$ArrBqHeader[$val]['series']				= $qHeader[0]->series;
			$ArrBqHeader[$val]['resin_sistem']			= $qHeader[0]->resin_sistem;
			$ArrBqHeader[$val]['pressure']				= $qHeader[0]->pressure;
			$ArrBqHeader[$val]['diameter']				= $qHeader[0]->diameter;
			$ArrBqHeader[$val]['liner']					= $qHeader[0]->liner;
			$ArrBqHeader[$val]['aplikasi_product']		= $qHeader[0]->aplikasi_product;
			$ArrBqHeader[$val]['criminal_barier']		= $qHeader[0]->criminal_barier;
			$ArrBqHeader[$val]['vacum_rate']			= $qHeader[0]->vacum_rate;
			$ArrBqHeader[$val]['stiffness']				= $qHeader[0]->stiffness;
			$ArrBqHeader[$val]['design_life']			= $qHeader[0]->design_life;
			$ArrBqHeader[$val]['standart_by']			= $qHeader[0]->standart_by;
			$ArrBqHeader[$val]['standart_toleransi']	= $qHeader[0]->standart_toleransi;
			$ArrBqHeader[$val]['diameter2']				= $qHeader[0]->diameter2;
			$ArrBqHeader[$val]['panjang']				= $qHeader[0]->panjang;
			$ArrBqHeader[$val]['radius']				= $qHeader[0]->radius;
			$ArrBqHeader[$val]['type_elbow']			= $qHeader[0]->type_elbow;
			$ArrBqHeader[$val]['angle']					= $qHeader[0]->angle;
			$ArrBqHeader[$val]['design']				= $qHeader[0]->design;
			$ArrBqHeader[$val]['est']					= $qHeader[0]->est;
			$ArrBqHeader[$val]['min_toleransi']			= $qHeader[0]->min_toleransi;
			$ArrBqHeader[$val]['max_toleransi']			= $qHeader[0]->max_toleransi;
			$ArrBqHeader[$val]['waste']					= $qHeader[0]->waste;
			$ArrBqHeader[$val]['area']				= $qHeader[0]->area;
			$ArrBqHeader[$val]['wrap_length']		= $qHeader[0]->wrap_length;
			$ArrBqHeader[$val]['wrap_length2']		= $qHeader[0]->wrap_length2;
			$ArrBqHeader[$val]['high']				= $qHeader[0]->high;
			$ArrBqHeader[$val]['area2']				= $qHeader[0]->area2;
			$ArrBqHeader[$val]['panjang_neck_1']	= $qHeader[0]->panjang_neck_1;
			$ArrBqHeader[$val]['panjang_neck_2']	= $qHeader[0]->panjang_neck_2;
			$ArrBqHeader[$val]['design_neck_1']		= $qHeader[0]->design_neck_1;
			$ArrBqHeader[$val]['design_neck_2']		= $qHeader[0]->design_neck_2;
			$ArrBqHeader[$val]['est_neck_1']		= $qHeader[0]->est_neck_1;
			$ArrBqHeader[$val]['est_neck_2']		= $qHeader[0]->est_neck_2;
			$ArrBqHeader[$val]['area_neck_1']		= $qHeader[0]->area_neck_1;
			$ArrBqHeader[$val]['area_neck_2']		= $qHeader[0]->area_neck_2;
			$ArrBqHeader[$val]['flange_od']			= $qHeader[0]->flange_od;
			$ArrBqHeader[$val]['flange_bcd']		= $qHeader[0]->flange_bcd;
			$ArrBqHeader[$val]['flange_n']			= $qHeader[0]->flange_n;
			$ArrBqHeader[$val]['flange_oh']			= $qHeader[0]->flange_oh;
			$ArrBqHeader[$val]['rev']				= $qHeader[0]->rev;
			$ArrBqHeader[$val]['status']			= $qHeader[0]->status;
			$ArrBqHeader[$val]['approve_by']		= $qHeader[0]->approve_by;
			$ArrBqHeader[$val]['approve_date']		= $qHeader[0]->approve_date;
			$ArrBqHeader[$val]['approve_reason']	= $qHeader[0]->approve_reason;
			$ArrBqHeader[$val]['sts_price']			= $qHeader[0]->sts_price;
			$ArrBqHeader[$val]['sts_price_by']		= $qHeader[0]->sts_price_by;
			$ArrBqHeader[$val]['sts_price_date']	= $qHeader[0]->sts_price_date;
			$ArrBqHeader[$val]['sts_price_reason']	= $qHeader[0]->sts_price_reason;
			$ArrBqHeader[$val]['created_by']		= $qHeader[0]->created_by;
			$ArrBqHeader[$val]['created_date']		= $qHeader[0]->created_date;
			$ArrBqHeader[$val]['deleted']			= $qHeader[0]->deleted;
			$ArrBqHeader[$val]['deleted_by']		= $qHeader[0]->deleted_by;
			$ArrBqHeader[$val]['deleted_date']		= $qHeader[0]->deleted_date;
			//
			$ArrBqHeader[$val]['pipe_thickness']		= $qHeader[0]->pipe_thickness;
			$ArrBqHeader[$val]['joint_thickness']		= $qHeader[0]->joint_thickness;
			$ArrBqHeader[$val]['factor_thickness']		= $qHeader[0]->factor_thickness;
			$ArrBqHeader[$val]['factor']			= $qHeader[0]->factor;
			
			
			//================================================================================================================
			//============================================DEFAULT BY ARWANT===================================================
			//================================================================================================================
			if(!empty($qHeader[0]->standart_code)){
				$getDefVal		= $this->db->query("SELECT * FROM bq_component_default WHERE id_product='".$valx['id_product']."' AND id_milik='".$valx['id_milik']."' LIMIT 1 ")->result();
				$getDefValNum	= $this->db->query("SELECT * FROM bq_component_default WHERE id_product='".$valx['id_product']."' AND id_milik='".$valx['id_milik']."' LIMIT 1 ")->num_rows();
				if($getDefValNum > 0){
					$ArrBqDefault[$val]['id_product']				= $valx['id_product'];
					$ArrBqDefault[$val]['id_bq']					= $id_bq;
					$ArrBqDefault[$val]['id_milik']					= $valx['id'];
					$ArrBqDefault[$val]['product_parent']			= $getDefVal[0]->product_parent;
					$ArrBqDefault[$val]['kd_cust']					= $getDefVal[0]->kd_cust;
					$ArrBqDefault[$val]['customer']					= $getDefVal[0]->customer;
					$ArrBqDefault[$val]['standart_code']			= $getDefVal[0]->standart_code;
					$ArrBqDefault[$val]['diameter']					= $getDefVal[0]->diameter;
					$ArrBqDefault[$val]['diameter2']				= $getDefVal[0]->diameter2;
					$ArrBqDefault[$val]['liner']					= $getDefVal[0]->liner;
					$ArrBqDefault[$val]['pn']						= $getDefVal[0]->pn;
					$ArrBqDefault[$val]['overlap']					= $getDefVal[0]->overlap;
					$ArrBqDefault[$val]['waste']					= $getDefVal[0]->waste;
					$ArrBqDefault[$val]['waste_n1']					= $getDefVal[0]->waste_n1;
					$ArrBqDefault[$val]['waste_n2']					= $getDefVal[0]->waste_n2;
					$ArrBqDefault[$val]['max']						= $getDefVal[0]->max;
					$ArrBqDefault[$val]['min']						= $getDefVal[0]->min;
					$ArrBqDefault[$val]['plastic_film']				= $getDefVal[0]->plastic_film;
					$ArrBqDefault[$val]['lin_resin_veil_a']			= $getDefVal[0]->lin_resin_veil_a;
					$ArrBqDefault[$val]['lin_resin_veil_b']			= $getDefVal[0]->lin_resin_veil_b;
					$ArrBqDefault[$val]['lin_resin_veil']			= $getDefVal[0]->lin_resin_veil;
					$ArrBqDefault[$val]['lin_resin_veil_add_a']		= $getDefVal[0]->lin_resin_veil_add_a;
					$ArrBqDefault[$val]['lin_resin_veil_add_b']		= $getDefVal[0]->lin_resin_veil_add_b;
					$ArrBqDefault[$val]['lin_resin_veil_add']		= $getDefVal[0]->lin_resin_veil_add;
					$ArrBqDefault[$val]['lin_resin_csm_a']			= $getDefVal[0]->lin_resin_csm_a;
					$ArrBqDefault[$val]['lin_resin_csm_b']			= $getDefVal[0]->lin_resin_csm_b;
					$ArrBqDefault[$val]['lin_resin_csm']			= $getDefVal[0]->lin_resin_csm;
					$ArrBqDefault[$val]['lin_resin_csm_add_a']		= $getDefVal[0]->lin_resin_csm_add_a;
					$ArrBqDefault[$val]['lin_resin_csm_add_b']		= $getDefVal[0]->lin_resin_csm_add_b;
					$ArrBqDefault[$val]['lin_resin_csm_add']		= $getDefVal[0]->lin_resin_csm_add;
					$ArrBqDefault[$val]['lin_faktor_veil']			= $getDefVal[0]->lin_faktor_veil;
					$ArrBqDefault[$val]['lin_faktor_veil_add']		= $getDefVal[0]->lin_faktor_veil_add;
					$ArrBqDefault[$val]['lin_faktor_csm']			= $getDefVal[0]->lin_faktor_csm;
					$ArrBqDefault[$val]['lin_faktor_csm_add']		= $getDefVal[0]->lin_faktor_csm_add;
					$ArrBqDefault[$val]['lin_resin']				= $getDefVal[0]->lin_resin;
					$ArrBqDefault[$val]['lin_resin_thickness']		= $getDefVal[0]->lin_resin_thickness;
					$ArrBqDefault[$val]['str_resin_csm_a']			= $getDefVal[0]->str_resin_csm_a;
					$ArrBqDefault[$val]['str_resin_csm_b']			= $getDefVal[0]->str_resin_csm_b;
					$ArrBqDefault[$val]['str_resin_csm']			= $getDefVal[0]->str_resin_csm;
					$ArrBqDefault[$val]['str_resin_csm_add_a']		= $getDefVal[0]->str_resin_csm_add_a;
					$ArrBqDefault[$val]['str_resin_csm_add_b']		= $getDefVal[0]->str_resin_csm_add_b;
					$ArrBqDefault[$val]['str_resin_csm_add']		= $getDefVal[0]->str_resin_csm_add;
					$ArrBqDefault[$val]['str_resin_wr_a']			= $getDefVal[0]->str_resin_wr_a;
					$ArrBqDefault[$val]['str_resin_wr_b']			= $getDefVal[0]->str_resin_wr_b;
					$ArrBqDefault[$val]['str_resin_wr']				= $getDefVal[0]->str_resin_wr;
					$ArrBqDefault[$val]['str_resin_wr_add_a']		= $getDefVal[0]->str_resin_wr_add_a;
					$ArrBqDefault[$val]['str_resin_wr_add_b']		= $getDefVal[0]->str_resin_wr_add_b;
					$ArrBqDefault[$val]['str_resin_wr_add']			= $getDefVal[0]->str_resin_wr_add;
					$ArrBqDefault[$val]['str_resin_rv_a']			= $getDefVal[0]->str_resin_rv_a;
					$ArrBqDefault[$val]['str_resin_rv_b']			= $getDefVal[0]->str_resin_rv_b;
					$ArrBqDefault[$val]['str_resin_rv']				= $getDefVal[0]->str_resin_rv;
					$ArrBqDefault[$val]['str_resin_rv_add_a']		= $getDefVal[0]->str_resin_rv_add_a;
					$ArrBqDefault[$val]['str_resin_rv_add_b']		= $getDefVal[0]->str_resin_rv_add_b;
					$ArrBqDefault[$val]['str_resin_rv_add']			= $getDefVal[0]->str_resin_rv_add;
					$ArrBqDefault[$val]['str_faktor_csm']			= $getDefVal[0]->str_faktor_csm;
					$ArrBqDefault[$val]['str_faktor_csm_add']		= $getDefVal[0]->str_faktor_csm_add;
					$ArrBqDefault[$val]['str_faktor_wr']			= $getDefVal[0]->str_faktor_wr;
					$ArrBqDefault[$val]['str_faktor_wr_add']		= $getDefVal[0]->str_faktor_wr_add;
					$ArrBqDefault[$val]['str_faktor_rv']			= $getDefVal[0]->str_faktor_rv;
					$ArrBqDefault[$val]['str_faktor_rv_bw']			= $getDefVal[0]->str_faktor_rv_bw;
					$ArrBqDefault[$val]['str_faktor_rv_jb']			= $getDefVal[0]->str_faktor_rv_jb;
					$ArrBqDefault[$val]['str_faktor_rv_add']		= $getDefVal[0]->str_faktor_rv_add;
					$ArrBqDefault[$val]['str_faktor_rv_add_bw']		= $getDefVal[0]->str_faktor_rv_add_bw;
					$ArrBqDefault[$val]['str_faktor_rv_add_jb']		= $getDefVal[0]->str_faktor_rv_add_jb;
					$ArrBqDefault[$val]['str_resin']				= $getDefVal[0]->str_resin;
					$ArrBqDefault[$val]['str_resin_thickness']		= $getDefVal[0]->str_resin_thickness;
					$ArrBqDefault[$val]['eks_resin_veil_a']			= $getDefVal[0]->eks_resin_veil_a;
					$ArrBqDefault[$val]['eks_resin_veil_b']			= $getDefVal[0]->eks_resin_veil_b;
					$ArrBqDefault[$val]['eks_resin_veil']			= $getDefVal[0]->eks_resin_veil;
					$ArrBqDefault[$val]['eks_resin_veil_add_a']		= $getDefVal[0]->eks_resin_veil_add_a;
					$ArrBqDefault[$val]['eks_resin_veil_add_b']		= $getDefVal[0]->eks_resin_veil_add_b;
					$ArrBqDefault[$val]['eks_resin_veil_add']		= $getDefVal[0]->eks_resin_veil_add;
					$ArrBqDefault[$val]['eks_resin_csm_a']			= $getDefVal[0]->eks_resin_csm_a;
					$ArrBqDefault[$val]['eks_resin_csm_b']			= $getDefVal[0]->eks_resin_csm_b;
					$ArrBqDefault[$val]['eks_resin_csm']			= $getDefVal[0]->eks_resin_csm;
					$ArrBqDefault[$val]['eks_resin_csm_add_a']		= $getDefVal[0]->eks_resin_csm_add_a;
					$ArrBqDefault[$val]['eks_resin_csm_add_b']		= $getDefVal[0]->eks_resin_csm_add_b;
					$ArrBqDefault[$val]['eks_resin_csm_add']		= $getDefVal[0]->eks_resin_csm_add;
					$ArrBqDefault[$val]['eks_faktor_veil']			= $getDefVal[0]->eks_faktor_veil;
					$ArrBqDefault[$val]['eks_faktor_veil_add']		= $getDefVal[0]->eks_faktor_veil_add;
					$ArrBqDefault[$val]['eks_faktor_csm']			= $getDefVal[0]->eks_faktor_csm;
					$ArrBqDefault[$val]['eks_faktor_csm_add']		= $getDefVal[0]->eks_faktor_csm_add;
					$ArrBqDefault[$val]['eks_resin']				= $getDefVal[0]->eks_resin;
					$ArrBqDefault[$val]['eks_resin_thickness']		= $getDefVal[0]->eks_resin_thickness;
					$ArrBqDefault[$val]['topcoat_resin']			= $getDefVal[0]->topcoat_resin;
					$ArrBqDefault[$val]['str_n1_resin_csm_a']		= $getDefVal[0]->str_n1_resin_csm_a;
					$ArrBqDefault[$val]['str_n1_resin_csm_b']		= $getDefVal[0]->str_n1_resin_csm_b;
					$ArrBqDefault[$val]['str_n1_resin_csm']			= $getDefVal[0]->str_n1_resin_csm;
					$ArrBqDefault[$val]['str_n1_resin_csm_add_a']	= $getDefVal[0]->str_n1_resin_csm_add_a;
					$ArrBqDefault[$val]['str_n1_resin_csm_add_b']	= $getDefVal[0]->str_n1_resin_csm_add_b;
					$ArrBqDefault[$val]['str_n1_resin_csm_add']		= $getDefVal[0]->str_n1_resin_csm_add;
					$ArrBqDefault[$val]['str_n1_resin_wr_a']		= $getDefVal[0]->str_n1_resin_wr_a;
					$ArrBqDefault[$val]['str_n1_resin_wr_b']		= $getDefVal[0]->str_n1_resin_wr_b;
					$ArrBqDefault[$val]['str_n1_resin_wr']			= $getDefVal[0]->str_n1_resin_wr;
					$ArrBqDefault[$val]['str_n1_resin_wr_add_a']	= $getDefVal[0]->str_n1_resin_wr_add_a;
					$ArrBqDefault[$val]['str_n1_resin_wr_add_b']	= $getDefVal[0]->str_n1_resin_wr_add_b;
					$ArrBqDefault[$val]['str_n1_resin_wr_add']		= $getDefVal[0]->str_n1_resin_wr_add;
					$ArrBqDefault[$val]['str_n1_resin_rv_a']		= $getDefVal[0]->str_n1_resin_rv_a;
					$ArrBqDefault[$val]['str_n1_resin_rv_b']		= $getDefVal[0]->str_n1_resin_rv_b;
					$ArrBqDefault[$val]['str_n1_resin_rv']			= $getDefVal[0]->str_n1_resin_rv;
					$ArrBqDefault[$val]['str_n1_resin_rv_add_a']	= $getDefVal[0]->str_n1_resin_rv_add_a;
					$ArrBqDefault[$val]['str_n1_resin_rv_add_b']	= $getDefVal[0]->str_n1_resin_rv_add_b;
					$ArrBqDefault[$val]['str_n1_resin_rv_add']		= $getDefVal[0]->str_n1_resin_rv_add;
					$ArrBqDefault[$val]['str_n1_faktor_csm']		= $getDefVal[0]->str_n1_faktor_csm;
					$ArrBqDefault[$val]['str_n1_faktor_csm_add']	= $getDefVal[0]->str_n1_faktor_csm_add;
					$ArrBqDefault[$val]['str_n1_faktor_wr']			= $getDefVal[0]->str_n1_faktor_wr;
					$ArrBqDefault[$val]['str_n1_faktor_wr_add']		= $getDefVal[0]->str_n1_faktor_wr_add;
					$ArrBqDefault[$val]['str_n1_faktor_rv']			= $getDefVal[0]->str_n1_faktor_rv;
					$ArrBqDefault[$val]['str_n1_faktor_rv_bw']		= $getDefVal[0]->str_n1_faktor_rv_bw;
					$ArrBqDefault[$val]['str_n1_faktor_rv_jb']		= $getDefVal[0]->str_n1_faktor_rv_jb;
					$ArrBqDefault[$val]['str_n1_faktor_rv_add']		= $getDefVal[0]->str_n1_faktor_rv_add;
					$ArrBqDefault[$val]['str_n1_faktor_rv_add_bw']	= $getDefVal[0]->str_n1_faktor_rv_add_bw;
					$ArrBqDefault[$val]['str_n1_faktor_rv_add_jb']	= $getDefVal[0]->str_n1_faktor_rv_add_jb;
					$ArrBqDefault[$val]['str_n1_resin']				= $getDefVal[0]->str_n1_resin;
					$ArrBqDefault[$val]['str_n1_resin_thickness']	= $getDefVal[0]->str_n1_resin_thickness;
					$ArrBqDefault[$val]['str_n2_resin_csm_a']		= $getDefVal[0]->str_n2_resin_csm_a;
					$ArrBqDefault[$val]['str_n2_resin_csm_b']		= $getDefVal[0]->str_n2_resin_csm_b;
					$ArrBqDefault[$val]['str_n2_resin_csm']			= $getDefVal[0]->str_n2_resin_csm;
					$ArrBqDefault[$val]['str_n2_resin_csm_add_a']	= $getDefVal[0]->str_n2_resin_csm_add_a;
					$ArrBqDefault[$val]['str_n2_resin_csm_add_b']	= $getDefVal[0]->str_n2_resin_csm_add_b;
					$ArrBqDefault[$val]['str_n2_resin_csm_add']		= $getDefVal[0]->str_n2_resin_csm_add;
					$ArrBqDefault[$val]['str_n2_resin_wr_a']		= $getDefVal[0]->str_n2_resin_wr_a;
					$ArrBqDefault[$val]['str_n2_resin_wr_b']		= $getDefVal[0]->str_n2_resin_wr_b;
					$ArrBqDefault[$val]['str_n2_resin_wr']			= $getDefVal[0]->str_n2_resin_wr;
					$ArrBqDefault[$val]['str_n2_resin_wr_add_a']	= $getDefVal[0]->str_n2_resin_wr_add_a;
					$ArrBqDefault[$val]['str_n2_resin_wr_add_b']	= $getDefVal[0]->str_n2_resin_wr_add_b;
					$ArrBqDefault[$val]['str_n2_resin_wr_add']		= $getDefVal[0]->str_n2_resin_wr_add;
					$ArrBqDefault[$val]['str_n2_faktor_csm']		= $getDefVal[0]->str_n2_faktor_csm;
					$ArrBqDefault[$val]['str_n2_faktor_csm_add']	= $getDefVal[0]->str_n2_faktor_csm_add;
					$ArrBqDefault[$val]['str_n2_faktor_wr']			= $getDefVal[0]->str_n2_faktor_wr;
					$ArrBqDefault[$val]['str_n2_faktor_wr_add']		= $getDefVal[0]->str_n2_faktor_wr_add;
					$ArrBqDefault[$val]['str_n2_resin']				= $getDefVal[0]->str_n2_resin;
					$ArrBqDefault[$val]['str_n2_resin_thickness']	= $getDefVal[0]->str_n2_resin_thickness;
					$ArrBqDefault[$val]['created_by']				= $this->session->userdata['ORI_User']['username'];
					$ArrBqDefault[$val]['created_date']				= date('Y-m-d H:i:s');
				}
			}
			
			//Insert Component Header To Hist
			$qHeaderHistDef		= $this->db->query("SELECT * FROM so_component_default WHERE id_bq='".$id_bq."' ")->result_array();
			$qHeaderHistNumDef	= $this->db->query("SELECT * FROM so_component_default WHERE id_bq='".$id_bq."' ")->num_rows();
			if($qHeaderHistNumDef > 0){
				foreach($qHeaderHistDef AS $val2HistADef => $valx2HistADef){
					$ArrBqDefaultHist[$val2HistADef]['id_product']				= $valx2HistADef['id_product'];
					$ArrBqDefaultHist[$val2HistADef]['id_milik']				= $valx2HistADef['id_milik'];
					$ArrBqDefaultHist[$val2HistADef]['id_bq']					= $valx2HistADef['id_bq'];
					$ArrBqDefaultHist[$val2HistADef]['product_parent']			= $valx2HistADef['product_parent'];
					$ArrBqDefaultHist[$val2HistADef]['kd_cust']					= $valx2HistADef['kd_cust'];
					$ArrBqDefaultHist[$val2HistADef]['customer']				= $valx2HistADef['customer'];
					$ArrBqDefaultHist[$val2HistADef]['standart_code']			= $valx2HistADef['standart_code'];
					$ArrBqDefaultHist[$val2HistADef]['diameter']				= $valx2HistADef['diameter'];
					$ArrBqDefaultHist[$val2HistADef]['diameter2']				= $valx2HistADef['diameter2'];
					$ArrBqDefaultHist[$val2HistADef]['liner']					= $valx2HistADef['liner'];
					$ArrBqDefaultHist[$val2HistADef]['pn']						= $valx2HistADef['pn'];
					$ArrBqDefaultHist[$val2HistADef]['overlap']					= $valx2HistADef['overlap'];
					$ArrBqDefaultHist[$val2HistADef]['waste']					= $valx2HistADef['waste'];
					$ArrBqDefaultHist[$val2HistADef]['waste_n1']				= $valx2HistADef['waste_n1'];
					$ArrBqDefaultHist[$val2HistADef]['waste_n2']				= $valx2HistADef['waste_n2'];
					$ArrBqDefaultHist[$val2HistADef]['max']						= $valx2HistADef['max'];
					$ArrBqDefaultHist[$val2HistADef]['min']						= $valx2HistADef['min'];
					$ArrBqDefaultHist[$val2HistADef]['plastic_film']			= $valx2HistADef['plastic_film'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil_a']		= $valx2HistADef['lin_resin_veil_a'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil_b']		= $valx2HistADef['lin_resin_veil_b'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil']			= $valx2HistADef['lin_resin_veil'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil_add_a']	= $valx2HistADef['lin_resin_veil_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil_add_b']	= $valx2HistADef['lin_resin_veil_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil_add']		= $valx2HistADef['lin_resin_veil_add'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm_a']			= $valx2HistADef['lin_resin_csm_a'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm_b']			= $valx2HistADef['lin_resin_csm_b'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm']			= $valx2HistADef['lin_resin_csm'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm_add_a']		= $valx2HistADef['lin_resin_csm_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm_add_b']		= $valx2HistADef['lin_resin_csm_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm_add']		= $valx2HistADef['lin_resin_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['lin_faktor_veil']			= $valx2HistADef['lin_faktor_veil'];
					$ArrBqDefaultHist[$val2HistADef]['lin_faktor_veil_add']		= $valx2HistADef['lin_faktor_veil_add'];
					$ArrBqDefaultHist[$val2HistADef]['lin_faktor_csm']			= $valx2HistADef['lin_faktor_csm'];
					$ArrBqDefaultHist[$val2HistADef]['lin_faktor_csm_add']		= $valx2HistADef['lin_faktor_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin']				= $valx2HistADef['lin_resin'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_thickness']		= $valx2HistADef['lin_resin_thickness'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm_a']			= $valx2HistADef['str_resin_csm_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm_b']			= $valx2HistADef['str_resin_csm_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm']			= $valx2HistADef['str_resin_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm_add_a']		= $valx2HistADef['str_resin_csm_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm_add_b']		= $valx2HistADef['str_resin_csm_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm_add']		= $valx2HistADef['str_resin_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr_a']			= $valx2HistADef['str_resin_wr_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr_b']			= $valx2HistADef['str_resin_wr_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr']			= $valx2HistADef['str_resin_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr_add_a']		= $valx2HistADef['str_resin_wr_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr_add_b']		= $valx2HistADef['str_resin_wr_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr_add']		= $valx2HistADef['str_resin_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv_a']			= $valx2HistADef['str_resin_rv_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv_b']			= $valx2HistADef['str_resin_rv_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv']			= $valx2HistADef['str_resin_rv'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv_add_a']		= $valx2HistADef['str_resin_rv_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv_add_b']		= $valx2HistADef['str_resin_rv_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv_add']		= $valx2HistADef['str_resin_rv_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_csm']			= $valx2HistADef['str_faktor_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_csm_add']		= $valx2HistADef['str_faktor_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_wr']			= $valx2HistADef['str_faktor_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_wr_add']		= $valx2HistADef['str_faktor_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv']			= $valx2HistADef['str_faktor_rv'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv_bw']		= $valx2HistADef['str_faktor_rv_bw'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv_jb']		= $valx2HistADef['str_faktor_rv_jb'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv_add']		= $valx2HistADef['str_faktor_rv_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv_add_bw']	= $valx2HistADef['str_faktor_rv_add_bw'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv_add_jb']	= $valx2HistADef['str_faktor_rv_add_jb'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin']				= $valx2HistADef['str_resin'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_thickness']		= $valx2HistADef['str_resin_thickness'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil_a']		= $valx2HistADef['eks_resin_veil_a'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil_b']		= $valx2HistADef['eks_resin_veil_b'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil']			= $valx2HistADef['eks_resin_veil'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil_add_a']	= $valx2HistADef['eks_resin_veil_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil_add_b']	= $valx2HistADef['eks_resin_veil_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil_add']		= $valx2HistADef['eks_resin_veil_add'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm_a']			= $valx2HistADef['eks_resin_csm_a'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm_b']			= $valx2HistADef['eks_resin_csm_b'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm']			= $valx2HistADef['eks_resin_csm'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm_add_a']		= $valx2HistADef['eks_resin_csm_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm_add_b']		= $valx2HistADef['eks_resin_csm_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm_add']		= $valx2HistADef['eks_resin_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['eks_faktor_veil']			= $valx2HistADef['eks_faktor_veil'];
					$ArrBqDefaultHist[$val2HistADef]['eks_faktor_veil_add']		= $valx2HistADef['eks_faktor_veil_add'];
					$ArrBqDefaultHist[$val2HistADef]['eks_faktor_csm']			= $valx2HistADef['eks_faktor_csm'];
					$ArrBqDefaultHist[$val2HistADef]['eks_faktor_csm_add']		= $valx2HistADef['eks_faktor_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin']				= $valx2HistADef['eks_resin'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_thickness']		= $valx2HistADef['eks_resin_thickness'];
					$ArrBqDefaultHist[$val2HistADef]['topcoat_resin']			= $valx2HistADef['topcoat_resin'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm_a']		= $valx2HistADef['str_n1_resin_csm_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm_b']		= $valx2HistADef['str_n1_resin_csm_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm']		= $valx2HistADef['str_n1_resin_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm_add_a']	= $valx2HistADef['str_n1_resin_csm_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm_add_b']	= $valx2HistADef['str_n1_resin_csm_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm_add']	= $valx2HistADef['str_n1_resin_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr_a']		= $valx2HistADef['str_n1_resin_wr_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr_b']		= $valx2HistADef['str_n1_resin_wr_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr']			= $valx2HistADef['str_n1_resin_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr_add_a']	= $valx2HistADef['str_n1_resin_wr_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr_add_b']	= $valx2HistADef['str_n1_resin_wr_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr_add']		= $valx2HistADef['str_n1_resin_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv_a']		= $valx2HistADef['str_n1_resin_rv_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv_b']		= $valx2HistADef['str_n1_resin_rv_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv']			= $valx2HistADef['str_n1_resin_rv'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv_add_a']	= $valx2HistADef['str_n1_resin_rv_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv_add_b']	= $valx2HistADef['str_n1_resin_rv_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv_add']		= $valx2HistADef['str_n1_resin_rv_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_csm']		= $valx2HistADef['str_n1_faktor_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_csm_add']	= $valx2HistADef['str_n1_faktor_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_wr']		= $valx2HistADef['str_n1_faktor_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_wr_add']	= $valx2HistADef['str_n1_faktor_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv']		= $valx2HistADef['str_n1_faktor_rv'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv_bw']		= $valx2HistADef['str_n1_faktor_rv_bw'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv_jb']		= $valx2HistADef['str_n1_faktor_rv_jb'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv_add']	= $valx2HistADef['str_n1_faktor_rv_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv_add_bw']	= $valx2HistADef['str_n1_faktor_rv_add_bw'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv_add_jb']	= $valx2HistADef['str_n1_faktor_rv_add_jb'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin']			= $valx2HistADef['str_n1_resin'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_thickness']	= $valx2HistADef['str_n1_resin_thickness'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm_a']		= $valx2HistADef['str_n2_resin_csm_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm_b']		= $valx2HistADef['str_n2_resin_csm_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm']		= $valx2HistADef['str_n2_resin_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm_add_a']	= $valx2HistADef['str_n2_resin_csm_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm_add_b']	= $valx2HistADef['str_n2_resin_csm_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm_add']	= $valx2HistADef['str_n2_resin_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr_a']		= $valx2HistADef['str_n2_resin_wr_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr_b']		= $valx2HistADef['str_n2_resin_wr_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr']			= $valx2HistADef['str_n2_resin_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr_add_a']	= $valx2HistADef['str_n2_resin_wr_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr_add_b']	= $valx2HistADef['str_n2_resin_wr_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr_add']		= $valx2HistADef['str_n2_resin_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_faktor_csm']		= $valx2HistADef['str_n2_faktor_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_faktor_csm_add']	= $valx2HistADef['str_n2_faktor_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_faktor_wr']		= $valx2HistADef['str_n2_faktor_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_faktor_wr_add']	= $valx2HistADef['str_n2_faktor_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin']			= $valx2HistADef['str_n2_resin'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_thickness']	= $valx2HistADef['str_n2_resin_thickness'];
					$ArrBqDefaultHist[$val2HistADef]['created_by']				= $valx2HistADef['created_by'];
					$ArrBqDefaultHist[$val2HistADef]['created_date']			= $valx2HistADef['created_date'];
					$ArrBqDefaultHist[$val2HistADef]['modified_by']				= $valx2HistADef['modified_by'];
					$ArrBqDefaultHist[$val2HistADef]['modified_date']			= $valx2HistADef['modified_date'];
					$ArrBqDefaultHist[$val2HistADef]['hist_by']					= $this->session->userdata['ORI_User']['username'];
					$ArrBqDefaultHist[$val2HistADef]['hist_date']				= date('Y-m-d H:i:s');
					
					
				}
			}
			//================================================================================================================
			//================================================================================================================
			//================================================================================================================
			
			//Insert Component Header To Hist
			$qHeaderHist	= $this->db->query("SELECT * FROM so_component_header WHERE id_bq='".$id_bq."' ")->result_array();
			$qHeaderHistNum	= $this->db->query("SELECT * FROM so_component_header WHERE id_bq='".$id_bq."' ")->num_rows();
			if($qHeaderHistNum > 0){
				foreach($qHeaderHist AS $val2HistA => $valx2HistA){
					$ArrBqHeaderHist[$val2HistA]['id_product']			= $valx2HistA['id_product'];
					$ArrBqHeaderHist[$val2HistA]['id_milik']			= $valx2HistA['id_milik'];
					$ArrBqHeaderHist[$val2HistA]['id_bq']				= $valx2HistA['id_bq'];
					$ArrBqHeaderHist[$val2HistA]['parent_product']		= $valx2HistA['parent_product'];
					$ArrBqHeaderHist[$val2HistA]['nm_product']			= $valx2HistA['nm_product'];
					$ArrBqHeaderHist[$val2HistA]['series']				= $valx2HistA['series'];
					$ArrBqHeaderHist[$val2HistA]['resin_sistem']		= $valx2HistA['resin_sistem'];
					$ArrBqHeaderHist[$val2HistA]['pressure']			= $valx2HistA['pressure'];
					$ArrBqHeaderHist[$val2HistA]['diameter']			= $valx2HistA['diameter'];
					$ArrBqHeaderHist[$val2HistA]['liner']				= $valx2HistA['liner'];
					$ArrBqHeaderHist[$val2HistA]['aplikasi_product']	= $valx2HistA['aplikasi_product'];
					$ArrBqHeaderHist[$val2HistA]['criminal_barier']		= $valx2HistA['criminal_barier'];
					$ArrBqHeaderHist[$val2HistA]['vacum_rate']			= $valx2HistA['vacum_rate'];
					$ArrBqHeaderHist[$val2HistA]['stiffness']			= $valx2HistA['stiffness'];
					$ArrBqHeaderHist[$val2HistA]['design_life']			= $valx2HistA['design_life'];
					$ArrBqHeaderHist[$val2HistA]['standart_by']			= $valx2HistA['standart_by'];
					$ArrBqHeaderHist[$val2HistA]['standart_toleransi']	= $valx2HistA['standart_toleransi'];
					$ArrBqHeaderHist[$val2HistA]['diameter2']			= $valx2HistA['diameter2'];
					$ArrBqHeaderHist[$val2HistA]['panjang']				= $valx2HistA['panjang'];
					$ArrBqHeaderHist[$val2HistA]['radius']				= $valx2HistA['radius'];
					$ArrBqHeaderHist[$val2HistA]['type_elbow']			= $valx2HistA['type_elbow'];
					$ArrBqHeaderHist[$val2HistA]['angle']				= $valx2HistA['angle'];
					$ArrBqHeaderHist[$val2HistA]['design']				= $valx2HistA['design'];
					$ArrBqHeaderHist[$val2HistA]['est']					= $valx2HistA['est'];
					$ArrBqHeaderHist[$val2HistA]['min_toleransi']		= $valx2HistA['min_toleransi'];
					$ArrBqHeaderHist[$val2HistA]['max_toleransi']		= $valx2HistA['max_toleransi'];
					$ArrBqHeaderHist[$val2HistA]['waste']				= $valx2HistA['waste'];
					$ArrBqHeaderHist[$val2HistA]['area']				= $valx2HistA['area'];
					$ArrBqHeaderHist[$val2HistA]['wrap_length']			= $valx2HistA['wrap_length'];
					$ArrBqHeaderHist[$val2HistA]['wrap_length2']		= $valx2HistA['wrap_length2'];
					$ArrBqHeaderHist[$val2HistA]['high']				= $valx2HistA['high'];
					$ArrBqHeaderHist[$val2HistA]['area2']				= $valx2HistA['area2'];
					$ArrBqHeaderHist[$val2HistA]['panjang_neck_1']		= $valx2HistA['panjang_neck_1'];
					$ArrBqHeaderHist[$val2HistA]['panjang_neck_2']		= $valx2HistA['panjang_neck_2'];
					$ArrBqHeaderHist[$val2HistA]['design_neck_1']		= $valx2HistA['design_neck_1'];
					$ArrBqHeaderHist[$val2HistA]['design_neck_2']		= $valx2HistA['design_neck_2'];
					$ArrBqHeaderHist[$val2HistA]['est_neck_1']			= $valx2HistA['est_neck_1'];
					$ArrBqHeaderHist[$val2HistA]['est_neck_2']			= $valx2HistA['est_neck_2'];
					$ArrBqHeaderHist[$val2HistA]['area_neck_1']			= $valx2HistA['area_neck_1'];
					$ArrBqHeaderHist[$val2HistA]['area_neck_2']			= $valx2HistA['area_neck_2'];
					$ArrBqHeaderHist[$val2HistA]['flange_od']			= $valx2HistA['flange_od'];
					$ArrBqHeaderHist[$val2HistA]['flange_bcd']			= $valx2HistA['flange_bcd'];
					$ArrBqHeaderHist[$val2HistA]['flange_n']			= $valx2HistA['flange_n'];
					$ArrBqHeaderHist[$val2HistA]['flange_oh']			= $valx2HistA['flange_oh'];
					$ArrBqHeaderHist[$val2HistA]['rev']					= $valx2HistA['rev'];
					$ArrBqHeaderHist[$val2HistA]['status']				= $valx2HistA['status'];
					$ArrBqHeaderHist[$val2HistA]['approve_by']			= $valx2HistA['approve_by'];
					$ArrBqHeaderHist[$val2HistA]['approve_date']		= $valx2HistA['approve_date'];
					$ArrBqHeaderHist[$val2HistA]['approve_reason']		= $valx2HistA['approve_reason'];
					$ArrBqHeaderHist[$val2HistA]['sts_price']			= $valx2HistA['sts_price'];
					$ArrBqHeaderHist[$val2HistA]['sts_price_by']		= $valx2HistA['sts_price_by'];
					$ArrBqHeaderHist[$val2HistA]['sts_price_date']		= $valx2HistA['sts_price_date'];
					$ArrBqHeaderHist[$val2HistA]['sts_price_reason']	= $valx2HistA['sts_price_reason'];
					$ArrBqHeaderHist[$val2HistA]['created_by']			= $valx2HistA['created_by'];
					$ArrBqHeaderHist[$val2HistA]['created_date']		= $valx2HistA['created_date'];
					$ArrBqHeaderHist[$val2HistA]['deleted']				= $valx2HistA['deleted'];
					$ArrBqHeaderHist[$val2HistA]['deleted_by']			= $valx2HistA['deleted_by'];
					$ArrBqHeaderHist[$val2HistA]['deleted_date']		= $valx2HistA['deleted_date'];
					$ArrBqHeaderHist[$val2HistA]['hist_by']				= $this->session->userdata['ORI_User']['username'];
					$ArrBqHeaderHist[$val2HistA]['hist_date']			= date('Y-m-d H:i:s');
					
				}
			}

			//Component Detail
			$qDetail	= $this->db->query("SELECT a.* FROM bq_component_detail a WHERE a.id_product='".$valx['id_product']."' AND a.id_milik='".$valx['id_milik']."' ")->result_array();
			foreach($qDetail AS $val2 => $valx2){
				$LoopDetail++;
				$ArrBqDetail[$LoopDetail]['id_product']		= $valx['id_product'];
				$ArrBqDetail[$LoopDetail]['id_bq']			= $id_bq;
				$ArrBqDetail[$LoopDetail]['id_milik']		= $valx['id'];
				$ArrBqDetail[$LoopDetail]['detail_name']	= $valx2['detail_name'];
				$ArrBqDetail[$LoopDetail]['acuhan']			= $valx2['acuhan'];
				$ArrBqDetail[$LoopDetail]['id_ori']			= $valx2['id_ori'];
				$ArrBqDetail[$LoopDetail]['id_ori2']		= $valx2['id_ori2'];
				$ArrBqDetail[$LoopDetail]['id_category']	= $valx2['id_category'];
				$ArrBqDetail[$LoopDetail]['nm_category']	= $valx2['nm_category'];
				$ArrBqDetail[$LoopDetail]['id_material']	= $valx2['id_material'];
				$ArrBqDetail[$LoopDetail]['nm_material']	= $valx2['nm_material'];
				$ArrBqDetail[$LoopDetail]['value']			= $valx2['value'];
				$ArrBqDetail[$LoopDetail]['thickness']		= $valx2['thickness'];
				$ArrBqDetail[$LoopDetail]['fak_pengali']	= $valx2['fak_pengali'];
				$ArrBqDetail[$LoopDetail]['bw']				= $valx2['bw'];
				$ArrBqDetail[$LoopDetail]['jumlah']			= $valx2['jumlah'];
				$ArrBqDetail[$LoopDetail]['layer']			= $valx2['layer'];
				$ArrBqDetail[$LoopDetail]['containing']		= $valx2['containing'];
				$ArrBqDetail[$LoopDetail]['total_thickness']	= $valx2['total_thickness'];
				if ($qHeader[0]->parent_product == 'branch joint' OR $qHeader[0]->parent_product == 'field joint' OR $qHeader[0]->parent_product == 'shop joint') {
					$ArrBqDetail[$LoopDetail]['last_cost']	= $valx2['material_weight'];
				}
				else{
					$ArrBqDetail[$LoopDetail]['last_cost']	= $valx2['last_cost'];
				}
				$ArrBqDetail[$LoopDetail]['rev']				= $qHeader[0]->rev;
				//
				$ArrBqDetail[$LoopDetail]['area_weight']		= $valx2['area_weight'];
				$ArrBqDetail[$LoopDetail]['material_weight']	= $valx2['material_weight'];
				$ArrBqDetail[$LoopDetail]['percentage']			= $valx2['percentage'];
				$ArrBqDetail[$LoopDetail]['resin_content']		= $valx2['resin_content'];

				$ArrBqDetail[$LoopDetail]['price_mat']		= $valx2['price_mat'];
			}

			//Component Lamination
			$qDetailLam	= $this->db->query("SELECT * FROM bq_component_lamination WHERE id_product='".$valx['id_product']."' AND id_milik='".$valx['id_milik']."' ")->result_array();
			foreach($qDetailLam AS $val2 => $valx2){
				$LoopDetailLam++;
				$ArrBqDetailLam[$LoopDetailLam]['id_product']		= $valx['id_product'];
				$ArrBqDetailLam[$LoopDetailLam]['id_bq']				= $id_bq;
				$ArrBqDetailLam[$LoopDetailLam]['id_milik']			= $valx['id'];
				$ArrBqDetailLam[$LoopDetailLam]['detail_name']		= $valx2['detail_name'];
				$ArrBqDetailLam[$LoopDetailLam]['lapisan']			= $valx2['lapisan'];
				$ArrBqDetailLam[$LoopDetailLam]['std_glass']			= $valx2['std_glass'];
				$ArrBqDetailLam[$LoopDetailLam]['width']			= $valx2['width'];
				$ArrBqDetailLam[$LoopDetailLam]['stage']		= $valx2['stage'];
				$ArrBqDetailLam[$LoopDetailLam]['glass']		= $valx2['glass'];
				$ArrBqDetailLam[$LoopDetailLam]['thickness_1']		= $valx2['thickness_1'];
				$ArrBqDetailLam[$LoopDetailLam]['thickness_2']		= $valx2['thickness_2'];
				$ArrBqDetailLam[$LoopDetailLam]['glass_length']			= $valx2['glass_length'];
				$ArrBqDetailLam[$LoopDetailLam]['weight_veil']		= $valx2['weight_veil'];
				$ArrBqDetailLam[$LoopDetailLam]['weight_csm']		= $valx2['weight_csm'];
				$ArrBqDetailLam[$LoopDetailLam]['weight_wr']				= $valx2['weight_wr'];
			}

			//Insert Component Detail To Hist
			$qDetailHist	= $this->db->query("SELECT * FROM so_component_detail WHERE id_bq='".$id_bq."' ")->result_array();
			$qDetailHistNum	= $this->db->query("SELECT * FROM so_component_detail WHERE id_bq='".$id_bq."' ")->num_rows();
			if($qDetailHistNum > 0){
				foreach($qDetailHist AS $val2Hist => $valx2Hist){
					$ArrBqDetailHist[$val2Hist]['id_product']		= $valx2Hist['id_product'];
					$ArrBqDetailHist[$val2Hist]['id_bq']			= $valx2Hist['id_bq'];
					$ArrBqDetailHist[$val2Hist]['id_milik']			= $valx2Hist['id_milik'];
					$ArrBqDetailHist[$val2Hist]['detail_name']		= $valx2Hist['detail_name'];
					$ArrBqDetailHist[$val2Hist]['acuhan']			= $valx2Hist['acuhan'];
					$ArrBqDetailHist[$val2Hist]['id_ori']			= $valx2Hist['id_ori'];
					$ArrBqDetailHist[$val2Hist]['id_ori2']			= $valx2Hist['id_ori2'];
					$ArrBqDetailHist[$val2Hist]['id_category']		= $valx2Hist['id_category'];
					$ArrBqDetailHist[$val2Hist]['nm_category']		= $valx2Hist['nm_category'];
					$ArrBqDetailHist[$val2Hist]['id_material']		= $valx2Hist['id_material'];
					$ArrBqDetailHist[$val2Hist]['nm_material']		= $valx2Hist['nm_material'];
					$ArrBqDetailHist[$val2Hist]['value']			= $valx2Hist['value'];
					$ArrBqDetailHist[$val2Hist]['thickness']		= $valx2Hist['thickness'];
					$ArrBqDetailHist[$val2Hist]['fak_pengali']		= $valx2Hist['fak_pengali'];
					$ArrBqDetailHist[$val2Hist]['bw']				= $valx2Hist['bw'];
					$ArrBqDetailHist[$val2Hist]['jumlah']			= $valx2Hist['jumlah'];
					$ArrBqDetailHist[$val2Hist]['layer']			= $valx2Hist['layer'];
					$ArrBqDetailHist[$val2Hist]['containing']		= $valx2Hist['containing'];
					$ArrBqDetailHist[$val2Hist]['total_thickness']	= $valx2Hist['total_thickness'];
					$ArrBqDetailHist[$val2Hist]['last_cost']		= $valx2Hist['last_cost'];
					$ArrBqDetailHist[$val2Hist]['rev']				= $valx2Hist['rev'];
					$ArrBqDetailHist[$val2Hist]['price_mat']		= $valx2Hist['price_mat'];
					$ArrBqDetailHist[$val2Hist]['hist_by']			= $this->session->userdata['ORI_User']['username'];
					$ArrBqDetailHist[$val2Hist]['hist_date']		= date('Y-m-d H:i:s');
				}
			}

			//Component Detail Plus
			$qDetailPlus	= $this->db->query("SELECT a.* FROM bq_component_detail_plus a WHERE a.id_product='".$valx['id_product']."' AND a.id_milik='".$valx['id_milik']."' ")->result_array();
			foreach($qDetailPlus AS $val3 => $valx3){
				$LoopDetailPlus++;
				$ArrBqDetailPlus[$LoopDetailPlus]['id_product']		= $valx['id_product'];
				$ArrBqDetailPlus[$LoopDetailPlus]['id_bq']			= $id_bq;
				$ArrBqDetailPlus[$LoopDetailPlus]['id_milik']			= $valx['id'];
				$ArrBqDetailPlus[$LoopDetailPlus]['detail_name']		= $valx3['detail_name'];
				$ArrBqDetailPlus[$LoopDetailPlus]['id_ori']			= $valx3['id_ori'];
				$ArrBqDetailPlus[$LoopDetailPlus]['id_ori2']			= $valx3['id_ori2'];
				$ArrBqDetailPlus[$LoopDetailPlus]['id_category']		= $valx3['id_category'];
				$ArrBqDetailPlus[$LoopDetailPlus]['nm_category']		= $valx3['nm_category'];
				$ArrBqDetailPlus[$LoopDetailPlus]['id_material']		= $valx3['id_material'];
				$ArrBqDetailPlus[$LoopDetailPlus]['nm_material']		= $valx3['nm_material'];
				$ArrBqDetailPlus[$LoopDetailPlus]['containing']		= $valx3['containing'];
				$ArrBqDetailPlus[$LoopDetailPlus]['perse']			= $valx3['perse'];
				$ArrBqDetailPlus[$LoopDetailPlus]['last_full']	= $valx3['last_full'];
				$ArrBqDetailPlus[$LoopDetailPlus]['last_cost']	= $valx3['last_cost'];
				$ArrBqDetailPlus[$LoopDetailPlus]['rev']				= $qHeader[0]->rev;
				$ArrBqDetailPlus[$LoopDetailPlus]['price_mat']		= $valx3['price_mat'];
			}

			//Insert Component Detail Plus To Hist
			$qDetailPlusHist	= $this->db->query("SELECT * FROM so_component_detail_plus WHERE id_bq='".$id_bq."' ")->result_array();
			$qDetailPlusHistNum	= $this->db->query("SELECT * FROM so_component_detail_plus WHERE id_bq='".$id_bq."' ")->num_rows();
			if($qDetailPlusHistNum > 0){
				foreach($qDetailPlusHist AS $val3Hist => $valx3Hist){
					$ArrBqDetailPlusHist[$val3Hist]['id_product']	= $valx3Hist['id_product'];
					$ArrBqDetailPlusHist[$val3Hist]['id_bq']		= $valx3Hist['id_bq'];
					$ArrBqDetailPlusHist[$val3Hist]['id_milik']		= $valx3Hist['id_milik'];
					$ArrBqDetailPlusHist[$val3Hist]['detail_name']	= $valx3Hist['detail_name'];
					$ArrBqDetailPlusHist[$val3Hist]['id_ori']		= $valx3Hist['id_ori'];
					$ArrBqDetailPlusHist[$val3Hist]['id_ori2']		= $valx3Hist['id_ori2'];
					$ArrBqDetailPlusHist[$val3Hist]['id_category']	= $valx3Hist['id_category'];
					$ArrBqDetailPlusHist[$val3Hist]['nm_category']	= $valx3Hist['nm_category'];
					$ArrBqDetailPlusHist[$val3Hist]['id_material']	= $valx3Hist['id_material'];
					$ArrBqDetailPlusHist[$val3Hist]['nm_material']	= $valx3Hist['nm_material'];
					$ArrBqDetailPlusHist[$val3Hist]['containing']	= $valx3Hist['containing'];
					$ArrBqDetailPlusHist[$val3Hist]['perse']		= $valx3Hist['perse'];
					$ArrBqDetailPlusHist[$val3Hist]['last_full']	= $valx3Hist['last_full'];
					$ArrBqDetailPlusHist[$val3Hist]['last_cost']	= $valx3Hist['last_cost'];
					$ArrBqDetailPlusHist[$val3Hist]['rev']			= $valx3Hist['rev'];
					$ArrBqDetailPlusHist[$val3Hist]['hist_by']		= $this->session->userdata['ORI_User']['username'];
					$ArrBqDetailPlusHist[$val3Hist]['hist_date']	= date('Y-m-d H:i:s');
					$ArrBqDetailPlusHist[$val3Hist]['price_mat']		= $valx3Hist['price_mat'];
				}
			}

			//Component Detail Add
			$qDetailAdd		= $this->db->query("SELECT a.* FROM bq_component_detail_add a WHERE a.id_product='".$valx['id_product']."' AND a.id_milik='".$valx['id_milik']."' ")->result_array();
			$qDetailAddNum	= $this->db->query("SELECT * FROM bq_component_detail_add WHERE id_product='".$valx['id_product']."' AND id_milik='".$valx['id_milik']."' ")->num_rows();
			if($qDetailAddNum > 0){
				foreach($qDetailAdd AS $val4 => $valx4){
					$LoopDetailAdd++;
					$ArrBqDetailAdd[$LoopDetailAdd]['id_product']		= $valx['id_product'];
					$ArrBqDetailAdd[$LoopDetailAdd]['id_bq']				= $id_bq;
					$ArrBqDetailAdd[$LoopDetailAdd]['id_milik']			= $valx['id'];
					$ArrBqDetailAdd[$LoopDetailAdd]['detail_name']		= $valx4['detail_name'];
					$ArrBqDetailAdd[$LoopDetailAdd]['id_category']		= $valx4['id_category'];
					$ArrBqDetailAdd[$LoopDetailAdd]['nm_category']		= $valx4['nm_category'];
					$ArrBqDetailAdd[$LoopDetailAdd]['id_material']		= $valx4['id_material'];
					$ArrBqDetailAdd[$LoopDetailAdd]['nm_material']		= $valx4['nm_material'];
					$ArrBqDetailAdd[$LoopDetailAdd]['containing']		= $valx4['containing'];
					$ArrBqDetailAdd[$LoopDetailAdd]['perse']			= $valx4['perse'];
					$ArrBqDetailAdd[$LoopDetailAdd]['last_full']		= $valx4['last_full'];
					$ArrBqDetailAdd[$LoopDetailAdd]['last_cost']		= $valx4['last_cost'];
					$ArrBqDetailAdd[$LoopDetailAdd]['rev']				= $qHeader[0]->rev;
					$ArrBqDetailAdd[$LoopDetailAdd]['price_mat']		= $valx4['price_mat'];
				}
			}

			//Insert Component Detail Add To Hist
			$qDetailAddHist		= $this->db->query("SELECT * FROM so_component_detail_add WHERE id_bq='".$id_bq."' ")->result_array();
			$qDetailAddNumHist	= $this->db->query("SELECT * FROM so_component_detail_add WHERE id_bq='".$id_bq."' ")->num_rows();
			if($qDetailAddNumHist > 0){
				foreach($qDetailAddHist AS $val4Hist => $valx4Hist){
					$ArrBqDetailAddHist[$val4Hist]['id_product']	= $valx4Hist['id_product'];
					$ArrBqDetailAddHist[$val4Hist]['id_bq']			= $valx4Hist['id_bq'];
					$ArrBqDetailAddHist[$val4Hist]['id_milik']		= $valx4Hist['id_milik'];
					$ArrBqDetailAddHist[$val4Hist]['detail_name']	= $valx4Hist['detail_name'];
					$ArrBqDetailAddHist[$val4Hist]['id_category']	= $valx4Hist['id_category'];
					$ArrBqDetailAddHist[$val4Hist]['nm_category']	= $valx4Hist['nm_category'];
					$ArrBqDetailAddHist[$val4Hist]['id_material']	= $valx4Hist['id_material'];
					$ArrBqDetailAddHist[$val4Hist]['nm_material']	= $valx4Hist['nm_material'];
					$ArrBqDetailAddHist[$val4Hist]['containing']	= $valx4Hist['containing'];
					$ArrBqDetailAddHist[$val4Hist]['perse']			= $valx4Hist['perse'];
					$ArrBqDetailAddHist[$val4Hist]['last_full']		= $valx4Hist['last_full'];
					$ArrBqDetailAddHist[$val4Hist]['last_cost']		= $valx4Hist['last_cost'];
					$ArrBqDetailAddHist[$val4Hist]['rev']			= $valx4Hist['rev'];
					$ArrBqDetailAddHist[$val4Hist]['hist_by']		= $this->session->userdata['ORI_User']['username'];
					$ArrBqDetailAddHist[$val4Hist]['hist_date']		= date('Y-m-d H:i:s');
					$ArrBqDetailAddHist[$val4Hist]['price_mat']		= $valx4Hist['price_mat'];
				}
			}

			//Component Footer
			$qDetailFooter	= $this->db->query("SELECT * FROM bq_component_footer WHERE id_product='".$valx['id_product']."' AND id_milik='".$valx['id_milik']."' ")->result_array();
			if (count($qDetailFooter)>0)
			{
				foreach($qDetailFooter AS $val5 => $valx5){
					$LoopFooter++;
					$ArrBqFooter[$LoopFooter]['id_product']	= $valx['id_product'];
					$ArrBqFooter[$LoopFooter]['id_bq']		= $id_bq;
					$ArrBqFooter[$LoopFooter]['id_milik']		= $valx['id'];
					$ArrBqFooter[$LoopFooter]['detail_name']	= $valx5['detail_name'];
					$ArrBqFooter[$LoopFooter]['total']		= $valx5['total'];
					$ArrBqFooter[$LoopFooter]['min']			= $valx5['min'];
					$ArrBqFooter[$LoopFooter]['max']			= $valx5['max'];
					$ArrBqFooter[$LoopFooter]['hasil']		= $valx5['hasil'];
					$ArrBqFooter[$LoopFooter]['rev']			= $qHeader[0]->rev;
				}
			}
			//Insert Component Footer To Hist
			$qDetailFooterHist		= $this->db->query("SELECT * FROM so_component_footer WHERE id_bq='".$id_bq."' ")->result_array();
			$qDetailFooterHistNum	= $this->db->query("SELECT * FROM so_component_footer WHERE id_bq='".$id_bq."' ")->num_rows();
			if($qDetailFooterHistNum > 0){
				foreach($qDetailFooterHist AS $val5Hist => $valx5Hist){
					$ArrBqFooterHist[$val5Hist]['id_product']	= $valx5Hist['id_product'];
					$ArrBqFooterHist[$val5Hist]['id_bq']		= $valx5Hist['id_bq'];
					$ArrBqFooterHist[$val5Hist]['id_milik']		= $valx5Hist['id_milik'];
					$ArrBqFooterHist[$val5Hist]['detail_name']	= $valx5Hist['detail_name'];
					$ArrBqFooterHist[$val5Hist]['total']		= $valx5Hist['total'];
					$ArrBqFooterHist[$val5Hist]['min']			= $valx5Hist['min'];
					$ArrBqFooterHist[$val5Hist]['max']			= $valx5Hist['max'];
					$ArrBqFooterHist[$val5Hist]['hasil']		= $valx5Hist['hasil'];
					$ArrBqFooterHist[$val5Hist]['rev']			= $valx5Hist['rev'];
					$ArrBqFooterHist[$val5Hist]['hist_by']		= $this->session->userdata['ORI_User']['username'];
					$ArrBqFooterHist[$val5Hist]['hist_date']	= date('Y-m-d H:i:s');
				}
			}

			$qDetailHeaderNum2			= $this->db->query("SELECT * FROM so_component_header WHERE id_bq='".$id_bq."' ")->num_rows();
			$qDetailDetailNum2			= $this->db->query("SELECT * FROM so_component_detail WHERE id_bq='".$id_bq."' ")->num_rows();
			$qDetailDetailPlusNum2		= $this->db->query("SELECT * FROM so_component_detail_plus WHERE id_bq='".$id_bq."' ")->num_rows();
			$qDetailDetailAddNum2		= $this->db->query("SELECT * FROM so_component_detail_add WHERE id_bq='".$id_bq."' ")->num_rows();
			$qDetailDetailFooterNum2	= $this->db->query("SELECT * FROM so_component_footer WHERE id_bq='".$id_bq."' ")->num_rows();
			// echo $qDetailHeaderNum2;
			
		} 

		// print_r($ArrBqDefault);
		// print_r($ArrBqDetail);
		// print_r($ArrBqDetailPlus);
		// print_r($ArrBqDetailAdd);
		// print_r($ArrBqFooter);
		// echo $qDetailAddNum2;
		// echo $qDetailHeaderNum2;
		// echo $qDetailDetailNum2;
		// echo $qDetailDetailPlusNum2;
		// echo $qDetailDetailAddNum2;
		// echo $qDetailDetailFooterNum2;
		// echo "</pre>";
		// exit;

		$UpdateBQ	= array(
			'estimasi'	=> 'Y',
			'est_by'	=> $this->session->userdata['ORI_User']['username'],
			'est_date'	=> date('Y-m-d H:i:s')
		);

		$this->db->trans_start();
			$this->db->update_batch('so_detail_header', $ArrDetBq2, 'id');

			//Insert Batch Histories
			if(!empty($ArrBqHeaderHist)){
				$this->db->insert_batch('hist_so_component_header', $ArrBqHeaderHist);
			}
			if(!empty($ArrBqDetailHist)){
				$this->db->insert_batch('hist_so_component_detail', $ArrBqDetailHist);
			}
			if(!empty($ArrBqDetailPlusHist)){
				$this->db->insert_batch('hist_so_component_detail_plus', $ArrBqDetailPlusHist);
			}
			if(!empty($ArrBqDetailAddHist)){
				$this->db->insert_batch('hist_so_component_detail_add', $ArrBqDetailAddHist);
			}
			if(count($ArrBqFooterHist)>0){
				$this->db->insert_batch('hist_so_component_footer', $ArrBqFooterHist);
			}
			if(!empty($ArrBqDefaultHist)){
				$this->db->insert_batch('hist_so_component_default', $ArrBqDefaultHist);
			}

			//Delete BQ Component
			foreach($dtListArray AS $val => $valx){ 
				$this->db->delete('so_component_header', array('id_bq' => $id_bq, 'id_milik' => $valx['id']));
				$this->db->delete('so_component_detail', array('id_bq' => $id_bq, 'id_milik' => $valx['id']));
				$this->db->delete('so_component_lamination', array('id_bq' => $id_bq, 'id_milik' => $valx['id']));
				$this->db->delete('so_component_detail_plus', array('id_bq' => $id_bq, 'id_milik' => $valx['id']));
				$this->db->delete('so_component_detail_add', array('id_bq' => $id_bq, 'id_milik' => $valx['id']));
				$this->db->delete('so_component_footer', array('id_bq' => $id_bq, 'id_milik' => $valx['id']));
				$this->db->delete('so_component_default', array('id_bq' => $id_bq, 'id_milik' => $valx['id']));
			}
			
			// $this->db->delete('so_component_header', array('id_bq' => $id_bq));
			// $this->db->delete('so_component_detail', array('id_bq' => $id_bq));
			// $this->db->delete('so_component_lamination', array('id_bq' => $id_bq));
			// $this->db->delete('so_component_detail_plus', array('id_bq' => $id_bq));
			// $this->db->delete('so_component_detail_add', array('id_bq' => $id_bq));
			// $this->db->delete('so_component_footer', array('id_bq' => $id_bq));
			// $this->db->delete('so_component_default', array('id_bq' => $id_bq));

			//Insert BQ Component
			if(!empty($ArrBqHeader)){
				$this->db->insert_batch('so_component_header', $ArrBqHeader);
			}
			if(!empty($ArrBqDetail)){
				$this->db->insert_batch('so_component_detail', $ArrBqDetail);
			}
			if(!empty($ArrBqDetailLam)){
				$this->db->insert_batch('so_component_lamination', $ArrBqDetailLam);
			}
			if(!empty($ArrBqDetailPlus)){
				$this->db->insert_batch('so_component_detail_plus', $ArrBqDetailPlus);
			}
			if(!empty($ArrBqDetailAdd)){
				$this->db->insert_batch('so_component_detail_add', $ArrBqDetailAdd);
			}
			if(!empty($ArrBqFooter)){
				$this->db->insert_batch('so_component_footer', $ArrBqFooter);
			}
			if(!empty($ArrBqDefault)){
				$this->db->insert_batch('so_component_default', $ArrBqDefault);
			}

			$this->db->where('id_bq', $id_bq);
			$this->db->update('so_header', $UpdateBQ);

		$this->db->trans_complete();

		if($this->db->trans_status() === FALSE){
			$this->db->trans_rollback();
			$Arr_Kembali	= array(
				'pesan'		=>'Estimation structure bq data failed. Please try again later ...',
				'status'	=> 0
			);
		}
		else{
			$this->db->trans_commit();
			$Arr_Kembali	= array(
				'id_bqx'	=> $id_bq,
				'pembeda'	=> $pembeda,
				'pesan'		=>'Estimation structure bq data success. Thanks ...',
				'status'	=> 1
			);
			history('Estimation Structure BQ (tarik bq) in Final Drawing with code : '.$id_bq.'/'.$no_ipp);
		}

		echo json_encode($Arr_Kembali);
	}

	//APPROVE FINAL Drawing
	public function approve(){
		$controller			= ucfirst(strtolower($this->uri->segment(1).'/'.$this->uri->segment(2)));
		$Arr_Akses			= getAcccesmenu($controller);
		if($Arr_Akses['read'] !='1'){
			$this->session->set_flashdata("alert_data", "<div class=\"alert alert-warning\" id=\"flash-message\">You Don't Have Right To Access This Page, Please Contact Your Administrator....</div>");
			redirect(site_url('dashboard'));
		}
		
		

		$data_Group			= $this->master_model->getArray('groups',array(),'id','name');
		$getBy				= "SELECT `user_id`, created FROM histories WHERE `description`='Success insert final drawing table' ORDER BY created DESC LIMIT 1";
		$restgetBy			= $this->db->query($getBy)->result_array();
		$data = array(
			'title'			=> 'Approved Estimasi Final Drawing',
			'action'		=> 'index',
			'row_group'		=> $data_Group,
			'akses_menu'	=> $Arr_Akses,
			'get_by'		=> $restgetBy
		);
		history('View Data Approved Est Final Drawing');
		$this->load->view('FinalDrawing/approve',$data);
	}
	
	public function modalDetailKomponent(){
		$this->load->view('FinalDrawing/modalDetail');
	}
	
	public function updateEstSatuan(){
		$Arr_Kembali	= array();
		$data			= $this->input->post();
	
		$id_bq			= $this->uri->segment(3);
		$id_milik		= $this->uri->segment(4);
		$panjang		= $this->uri->segment(5);
		$product		= $this->uri->segment(6);
		
		// echo $id_bq."<br>";
		// echo $id_milik."<br>";
		// echo $panjang."<br>";
		// echo $product."<br>";
		// exit;

		$ArrBqHeader			= array();
		$ArrBqDetail			= array();
		$ArrBqDetailPlus		= array();
		$ArrBqDetailAdd			= array();
		$ArrBqFooter			= array();
		$ArrBqHeaderHist		= array();
		$ArrBqDetailHist		= array();
		$ArrBqDetailPlusHist	= array();
		$ArrBqDetailAddHist		= array();
		$ArrBqFooterHist		= array();
		$ArrBqDefault			= array();
		$ArrBqDefaultHist		= array();

		$LoopDetail = 0;
		$LoopDetailLam = 0;
		$LoopDetailPlus = 0;
		$LoopDetailAdd = 0;
		$LoopFooter = 0;
		
			//Component Header
			$qHeader	= $this->db->query("SELECT * FROM component_header WHERE id_product='".$product."' LIMIT 1 ")->result();
			$ArrBqHeader['id_product']			= $product;
			$ArrBqHeader['id_bq']					= $id_bq;
			$ArrBqHeader['id_milik']				= $id_milik;
			$ArrBqHeader['parent_product']		= $qHeader[0]->parent_product;
			$ArrBqHeader['nm_product']			= $qHeader[0]->nm_product;
			$ArrBqHeader['standart_code']			= $qHeader[0]->standart_code;
			$ArrBqHeader['series']				= $qHeader[0]->series;
			$ArrBqHeader['resin_sistem']			= $qHeader[0]->resin_sistem;
			$ArrBqHeader['pressure']				= $qHeader[0]->pressure;
			$ArrBqHeader['diameter']				= $qHeader[0]->diameter;
			$ArrBqHeader['liner']					= $qHeader[0]->liner;
			$ArrBqHeader['aplikasi_product']		= $qHeader[0]->aplikasi_product;
			$ArrBqHeader['criminal_barier']		= $qHeader[0]->criminal_barier;
			$ArrBqHeader['vacum_rate']			= $qHeader[0]->vacum_rate;
			$ArrBqHeader['stiffness']				= $qHeader[0]->stiffness;
			$ArrBqHeader['design_life']			= $qHeader[0]->design_life; 
			$ArrBqHeader['standart_by']			= $qHeader[0]->standart_by;
			$ArrBqHeader['standart_toleransi']	= $qHeader[0]->standart_toleransi;
			$ArrBqHeader['diameter2']				= $qHeader[0]->diameter2;
			if($qHeader[0]->parent_product == 'pipe' OR $qHeader[0]->parent_product == 'pipe slongsong'){
				$ArrBqHeader['panjang']			= floatval($panjang) + 400;
			}
			else{
				$ArrBqHeader['panjang']			= $qHeader[0]->panjang;
			}
			$ArrBqHeader['radius']				= $qHeader[0]->radius;
			$ArrBqHeader['type_elbow']			= $qHeader[0]->type_elbow;
			$ArrBqHeader['angle']					= $qHeader[0]->angle;
			$ArrBqHeader['design']				= $qHeader[0]->design;
			$ArrBqHeader['est']					= $qHeader[0]->est;
			$ArrBqHeader['min_toleransi']			= $qHeader[0]->min_toleransi;
			$ArrBqHeader['max_toleransi']			= $qHeader[0]->max_toleransi;
			$ArrBqHeader['waste']					= $qHeader[0]->waste;
			if($qHeader[0]->parent_product == 'pipe' OR $qHeader[0]->parent_product == 'pipe slongsong'){
				$ArrBqHeader['area']				= (floatval($qHeader[0]->area) / floatval($qHeader[0]->panjang)) * (floatval($panjang) + 400);
			}
			else{
				$ArrBqHeader['area']				= $qHeader[0]->area;
			}
			$ArrBqHeader['wrap_length']		= $qHeader[0]->wrap_length;
			$ArrBqHeader['wrap_length2']		= $qHeader[0]->wrap_length2;
			$ArrBqHeader['high']				= $qHeader[0]->high;
			$ArrBqHeader['area2']				= $qHeader[0]->area2;
			$ArrBqHeader['panjang_neck_1']	= $qHeader[0]->panjang_neck_1;
			$ArrBqHeader['panjang_neck_2']	= $qHeader[0]->panjang_neck_2;
			$ArrBqHeader['design_neck_1']		= $qHeader[0]->design_neck_1;
			$ArrBqHeader['design_neck_2']		= $qHeader[0]->design_neck_2;
			$ArrBqHeader['est_neck_1']		= $qHeader[0]->est_neck_1;
			$ArrBqHeader['est_neck_2']		= $qHeader[0]->est_neck_2;
			$ArrBqHeader['area_neck_1']		= $qHeader[0]->area_neck_1;
			$ArrBqHeader['area_neck_2']		= $qHeader[0]->area_neck_2;
			$ArrBqHeader['flange_od']			= $qHeader[0]->flange_od;
			$ArrBqHeader['flange_bcd']		= $qHeader[0]->flange_bcd;
			$ArrBqHeader['flange_n']			= $qHeader[0]->flange_n;
			$ArrBqHeader['flange_oh']			= $qHeader[0]->flange_oh;
			$ArrBqHeader['rev']				= $qHeader[0]->rev;
			$ArrBqHeader['status']			= $qHeader[0]->status;
			$ArrBqHeader['approve_by']		= $qHeader[0]->approve_by;
			$ArrBqHeader['approve_date']		= $qHeader[0]->approve_date;
			$ArrBqHeader['approve_reason']	= $qHeader[0]->approve_reason;
			$ArrBqHeader['sts_price']			= $qHeader[0]->sts_price;
			$ArrBqHeader['sts_price_by']		= $qHeader[0]->sts_price_by;
			$ArrBqHeader['sts_price_date']	= $qHeader[0]->sts_price_date;
			$ArrBqHeader['sts_price_reason']	= $qHeader[0]->sts_price_reason;
			$ArrBqHeader['created_by']		= $qHeader[0]->created_by;
			$ArrBqHeader['created_date']		= $qHeader[0]->created_date;
			$ArrBqHeader['deleted']			= $qHeader[0]->deleted;
			$ArrBqHeader['deleted_by']		= $qHeader[0]->deleted_by;
			$ArrBqHeader['deleted_date']		= $qHeader[0]->deleted_date;
			//
			$ArrBqHeader['pipe_thickness']	= $qHeader[0]->pipe_thickness;
			$ArrBqHeader['joint_thickness']	= $qHeader[0]->joint_thickness;
			$ArrBqHeader['factor_thickness']	= $qHeader[0]->factor_thickness;
			$ArrBqHeader['factor']			= $qHeader[0]->factor;
			
			// print_r($ArrBqHeader);
			// exit;
			//================================================================================================================
			//============================================DEFAULT BY ARWANT===================================================
			//================================================================================================================
			if(!empty($qHeader[0]->standart_code)){
				$plusSQL = "";
				if($qHeader[0]->parent_product == 'concentric reducer' OR $qHeader[0]->parent_product == 'reducer tee mould' OR $qHeader[0]->parent_product == 'eccentric reducer' OR $qHeader[0]->parent_product == 'reducer tee slongsong' OR $qHeader[0]->parent_product == 'branch joint'){
					$plusSQL = " AND diameter2='".$qHeader[0]->diameter2."'";
				}
				$getDefVal		= $this->db->query("SELECT * FROM help_default WHERE product_parent='".$qHeader[0]->parent_product."' AND standart_code='".$qHeader[0]->standart_code."' AND diameter='".$qHeader[0]->diameter."' ".$plusSQL." LIMIT 1 ")->result();
				$getDefValNum	= $this->db->query("SELECT * FROM help_default WHERE product_parent='".$qHeader[0]->parent_product."' AND standart_code='".$qHeader[0]->standart_code."' AND diameter='".$qHeader[0]->diameter."' ".$plusSQL." LIMIT 1 ")->num_rows();
				if($getDefValNum > 0){
					$ArrBqDefault['id_product']				= $product;
					$ArrBqDefault['id_bq']					= $id_bq;
					$ArrBqDefault['id_milik']					= $id_milik;
					$ArrBqDefault['product_parent']			= $getDefVal[0]->product_parent;
					$ArrBqDefault['kd_cust']					= $getDefVal[0]->kd_cust;
					$ArrBqDefault['customer']					= $getDefVal[0]->customer;
					$ArrBqDefault['standart_code']			= $getDefVal[0]->standart_code;
					$ArrBqDefault['diameter']					= $getDefVal[0]->diameter;
					$ArrBqDefault['diameter2']				= $getDefVal[0]->diameter2;
					$ArrBqDefault['liner']					= $getDefVal[0]->liner;
					$ArrBqDefault['pn']						= $getDefVal[0]->pn;
					$ArrBqDefault['overlap']					= $getDefVal[0]->overlap;
					$ArrBqDefault['waste']					= $getDefVal[0]->waste;
					$ArrBqDefault['waste_n1']					= $getDefVal[0]->waste_n1;
					$ArrBqDefault['waste_n2']					= $getDefVal[0]->waste_n2;
					$ArrBqDefault['max']						= $getDefVal[0]->max;
					$ArrBqDefault['min']						= $getDefVal[0]->min;
					$ArrBqDefault['plastic_film']				= $getDefVal[0]->plastic_film;
					$ArrBqDefault['lin_resin_veil_a']			= $getDefVal[0]->lin_resin_veil_a;
					$ArrBqDefault['lin_resin_veil_b']			= $getDefVal[0]->lin_resin_veil_b;
					$ArrBqDefault['lin_resin_veil']			= $getDefVal[0]->lin_resin_veil;
					$ArrBqDefault['lin_resin_veil_add_a']		= $getDefVal[0]->lin_resin_veil_add_a;
					$ArrBqDefault['lin_resin_veil_add_b']		= $getDefVal[0]->lin_resin_veil_add_b;
					$ArrBqDefault['lin_resin_veil_add']		= $getDefVal[0]->lin_resin_veil_add;
					$ArrBqDefault['lin_resin_csm_a']			= $getDefVal[0]->lin_resin_csm_a;
					$ArrBqDefault['lin_resin_csm_b']			= $getDefVal[0]->lin_resin_csm_b;
					$ArrBqDefault['lin_resin_csm']			= $getDefVal[0]->lin_resin_csm;
					$ArrBqDefault['lin_resin_csm_add_a']		= $getDefVal[0]->lin_resin_csm_add_a;
					$ArrBqDefault['lin_resin_csm_add_b']		= $getDefVal[0]->lin_resin_csm_add_b;
					$ArrBqDefault['lin_resin_csm_add']		= $getDefVal[0]->lin_resin_csm_add;
					$ArrBqDefault['lin_faktor_veil']			= $getDefVal[0]->lin_faktor_veil;
					$ArrBqDefault['lin_faktor_veil_add']		= $getDefVal[0]->lin_faktor_veil_add;
					$ArrBqDefault['lin_faktor_csm']			= $getDefVal[0]->lin_faktor_csm;
					$ArrBqDefault['lin_faktor_csm_add']		= $getDefVal[0]->lin_faktor_csm_add;
					$ArrBqDefault['lin_resin']				= $getDefVal[0]->lin_resin;
					$ArrBqDefault['lin_resin_thickness']		= $getDefVal[0]->lin_resin_thickness;
					$ArrBqDefault['str_resin_csm_a']			= $getDefVal[0]->str_resin_csm_a;
					$ArrBqDefault['str_resin_csm_b']			= $getDefVal[0]->str_resin_csm_b;
					$ArrBqDefault['str_resin_csm']			= $getDefVal[0]->str_resin_csm;
					$ArrBqDefault['str_resin_csm_add_a']		= $getDefVal[0]->str_resin_csm_add_a;
					$ArrBqDefault['str_resin_csm_add_b']		= $getDefVal[0]->str_resin_csm_add_b;
					$ArrBqDefault['str_resin_csm_add']		= $getDefVal[0]->str_resin_csm_add;
					$ArrBqDefault['str_resin_wr_a']			= $getDefVal[0]->str_resin_wr_a;
					$ArrBqDefault['str_resin_wr_b']			= $getDefVal[0]->str_resin_wr_b;
					$ArrBqDefault['str_resin_wr']				= $getDefVal[0]->str_resin_wr;
					$ArrBqDefault['str_resin_wr_add_a']		= $getDefVal[0]->str_resin_wr_add_a;
					$ArrBqDefault['str_resin_wr_add_b']		= $getDefVal[0]->str_resin_wr_add_b;
					$ArrBqDefault['str_resin_wr_add']			= $getDefVal[0]->str_resin_wr_add;
					$ArrBqDefault['str_resin_rv_a']			= $getDefVal[0]->str_resin_rv_a;
					$ArrBqDefault['str_resin_rv_b']			= $getDefVal[0]->str_resin_rv_b;
					$ArrBqDefault['str_resin_rv']				= $getDefVal[0]->str_resin_rv;
					$ArrBqDefault['str_resin_rv_add_a']		= $getDefVal[0]->str_resin_rv_add_a;
					$ArrBqDefault['str_resin_rv_add_b']		= $getDefVal[0]->str_resin_rv_add_b;
					$ArrBqDefault['str_resin_rv_add']			= $getDefVal[0]->str_resin_rv_add;
					$ArrBqDefault['str_faktor_csm']			= $getDefVal[0]->str_faktor_csm;
					$ArrBqDefault['str_faktor_csm_add']		= $getDefVal[0]->str_faktor_csm_add;
					$ArrBqDefault['str_faktor_wr']			= $getDefVal[0]->str_faktor_wr;
					$ArrBqDefault['str_faktor_wr_add']		= $getDefVal[0]->str_faktor_wr_add;
					$ArrBqDefault['str_faktor_rv']			= $getDefVal[0]->str_faktor_rv;
					$ArrBqDefault['str_faktor_rv_bw']			= $getDefVal[0]->str_faktor_rv_bw;
					$ArrBqDefault['str_faktor_rv_jb']			= $getDefVal[0]->str_faktor_rv_jb;
					$ArrBqDefault['str_faktor_rv_add']		= $getDefVal[0]->str_faktor_rv_add;
					$ArrBqDefault['str_faktor_rv_add_bw']		= $getDefVal[0]->str_faktor_rv_add_bw;
					$ArrBqDefault['str_faktor_rv_add_jb']		= $getDefVal[0]->str_faktor_rv_add_jb;
					$ArrBqDefault['str_resin']				= $getDefVal[0]->str_resin;
					$ArrBqDefault['str_resin_thickness']		= $getDefVal[0]->str_resin_thickness;
					$ArrBqDefault['eks_resin_veil_a']			= $getDefVal[0]->eks_resin_veil_a;
					$ArrBqDefault['eks_resin_veil_b']			= $getDefVal[0]->eks_resin_veil_b;
					$ArrBqDefault['eks_resin_veil']			= $getDefVal[0]->eks_resin_veil;
					$ArrBqDefault['eks_resin_veil_add_a']		= $getDefVal[0]->eks_resin_veil_add_a;
					$ArrBqDefault['eks_resin_veil_add_b']		= $getDefVal[0]->eks_resin_veil_add_b;
					$ArrBqDefault['eks_resin_veil_add']		= $getDefVal[0]->eks_resin_veil_add;
					$ArrBqDefault['eks_resin_csm_a']			= $getDefVal[0]->eks_resin_csm_a;
					$ArrBqDefault['eks_resin_csm_b']			= $getDefVal[0]->eks_resin_csm_b;
					$ArrBqDefault['eks_resin_csm']			= $getDefVal[0]->eks_resin_csm;
					$ArrBqDefault['eks_resin_csm_add_a']		= $getDefVal[0]->eks_resin_csm_add_a;
					$ArrBqDefault['eks_resin_csm_add_b']		= $getDefVal[0]->eks_resin_csm_add_b;
					$ArrBqDefault['eks_resin_csm_add']		= $getDefVal[0]->eks_resin_csm_add;
					$ArrBqDefault['eks_faktor_veil']			= $getDefVal[0]->eks_faktor_veil;
					$ArrBqDefault['eks_faktor_veil_add']		= $getDefVal[0]->eks_faktor_veil_add;
					$ArrBqDefault['eks_faktor_csm']			= $getDefVal[0]->eks_faktor_csm;
					$ArrBqDefault['eks_faktor_csm_add']		= $getDefVal[0]->eks_faktor_csm_add;
					$ArrBqDefault['eks_resin']				= $getDefVal[0]->eks_resin;
					$ArrBqDefault['eks_resin_thickness']		= $getDefVal[0]->eks_resin_thickness;
					$ArrBqDefault['topcoat_resin']			= $getDefVal[0]->topcoat_resin;
					$ArrBqDefault['str_n1_resin_csm_a']		= $getDefVal[0]->str_n1_resin_csm_a;
					$ArrBqDefault['str_n1_resin_csm_b']		= $getDefVal[0]->str_n1_resin_csm_b;
					$ArrBqDefault['str_n1_resin_csm']			= $getDefVal[0]->str_n1_resin_csm;
					$ArrBqDefault['str_n1_resin_csm_add_a']	= $getDefVal[0]->str_n1_resin_csm_add_a;
					$ArrBqDefault['str_n1_resin_csm_add_b']	= $getDefVal[0]->str_n1_resin_csm_add_b;
					$ArrBqDefault['str_n1_resin_csm_add']		= $getDefVal[0]->str_n1_resin_csm_add;
					$ArrBqDefault['str_n1_resin_wr_a']		= $getDefVal[0]->str_n1_resin_wr_a;
					$ArrBqDefault['str_n1_resin_wr_b']		= $getDefVal[0]->str_n1_resin_wr_b;
					$ArrBqDefault['str_n1_resin_wr']			= $getDefVal[0]->str_n1_resin_wr;
					$ArrBqDefault['str_n1_resin_wr_add_a']	= $getDefVal[0]->str_n1_resin_wr_add_a;
					$ArrBqDefault['str_n1_resin_wr_add_b']	= $getDefVal[0]->str_n1_resin_wr_add_b;
					$ArrBqDefault['str_n1_resin_wr_add']		= $getDefVal[0]->str_n1_resin_wr_add;
					$ArrBqDefault['str_n1_resin_rv_a']		= $getDefVal[0]->str_n1_resin_rv_a;
					$ArrBqDefault['str_n1_resin_rv_b']		= $getDefVal[0]->str_n1_resin_rv_b;
					$ArrBqDefault['str_n1_resin_rv']			= $getDefVal[0]->str_n1_resin_rv;
					$ArrBqDefault['str_n1_resin_rv_add_a']	= $getDefVal[0]->str_n1_resin_rv_add_a;
					$ArrBqDefault['str_n1_resin_rv_add_b']	= $getDefVal[0]->str_n1_resin_rv_add_b;
					$ArrBqDefault['str_n1_resin_rv_add']		= $getDefVal[0]->str_n1_resin_rv_add;
					$ArrBqDefault['str_n1_faktor_csm']		= $getDefVal[0]->str_n1_faktor_csm;
					$ArrBqDefault['str_n1_faktor_csm_add']	= $getDefVal[0]->str_n1_faktor_csm_add;
					$ArrBqDefault['str_n1_faktor_wr']			= $getDefVal[0]->str_n1_faktor_wr;
					$ArrBqDefault['str_n1_faktor_wr_add']		= $getDefVal[0]->str_n1_faktor_wr_add;
					$ArrBqDefault['str_n1_faktor_rv']			= $getDefVal[0]->str_n1_faktor_rv;
					$ArrBqDefault['str_n1_faktor_rv_bw']		= $getDefVal[0]->str_n1_faktor_rv_bw;
					$ArrBqDefault['str_n1_faktor_rv_jb']		= $getDefVal[0]->str_n1_faktor_rv_jb;
					$ArrBqDefault['str_n1_faktor_rv_add']		= $getDefVal[0]->str_n1_faktor_rv_add;
					$ArrBqDefault['str_n1_faktor_rv_add_bw']	= $getDefVal[0]->str_n1_faktor_rv_add_bw;
					$ArrBqDefault['str_n1_faktor_rv_add_jb']	= $getDefVal[0]->str_n1_faktor_rv_add_jb;
					$ArrBqDefault['str_n1_resin']				= $getDefVal[0]->str_n1_resin;
					$ArrBqDefault['str_n1_resin_thickness']	= $getDefVal[0]->str_n1_resin_thickness;
					$ArrBqDefault['str_n2_resin_csm_a']		= $getDefVal[0]->str_n2_resin_csm_a;
					$ArrBqDefault['str_n2_resin_csm_b']		= $getDefVal[0]->str_n2_resin_csm_b;
					$ArrBqDefault['str_n2_resin_csm']			= $getDefVal[0]->str_n2_resin_csm;
					$ArrBqDefault['str_n2_resin_csm_add_a']	= $getDefVal[0]->str_n2_resin_csm_add_a;
					$ArrBqDefault['str_n2_resin_csm_add_b']	= $getDefVal[0]->str_n2_resin_csm_add_b;
					$ArrBqDefault['str_n2_resin_csm_add']		= $getDefVal[0]->str_n2_resin_csm_add;
					$ArrBqDefault['str_n2_resin_wr_a']		= $getDefVal[0]->str_n2_resin_wr_a;
					$ArrBqDefault['str_n2_resin_wr_b']		= $getDefVal[0]->str_n2_resin_wr_b;
					$ArrBqDefault['str_n2_resin_wr']			= $getDefVal[0]->str_n2_resin_wr;
					$ArrBqDefault['str_n2_resin_wr_add_a']	= $getDefVal[0]->str_n2_resin_wr_add_a;
					$ArrBqDefault['str_n2_resin_wr_add_b']	= $getDefVal[0]->str_n2_resin_wr_add_b;
					$ArrBqDefault['str_n2_resin_wr_add']		= $getDefVal[0]->str_n2_resin_wr_add;
					$ArrBqDefault['str_n2_faktor_csm']		= $getDefVal[0]->str_n2_faktor_csm;
					$ArrBqDefault['str_n2_faktor_csm_add']	= $getDefVal[0]->str_n2_faktor_csm_add;
					$ArrBqDefault['str_n2_faktor_wr']			= $getDefVal[0]->str_n2_faktor_wr;
					$ArrBqDefault['str_n2_faktor_wr_add']		= $getDefVal[0]->str_n2_faktor_wr_add;
					$ArrBqDefault['str_n2_resin']				= $getDefVal[0]->str_n2_resin;
					$ArrBqDefault['str_n2_resin_thickness']	= $getDefVal[0]->str_n2_resin_thickness;
					$ArrBqDefault['created_by']				= $this->session->userdata['ORI_User']['username'];
					$ArrBqDefault['created_date']				= date('Y-m-d H:i:s');
				}
			}
			
			//Insert Component Header To Hist
			$qHeaderHistDef		= $this->db->query("SELECT * FROM so_component_default WHERE id_bq='".$id_bq."' AND id_milik='".$id_milik."' ")->result_array();
			if(!empty($qHeaderHistDef)){
				foreach($qHeaderHistDef AS $val2HistADef => $valx2HistADef){
					$ArrBqDefaultHist[$val2HistADef]['id_product']				= $valx2HistADef['id_product'];
					$ArrBqDefaultHist[$val2HistADef]['id_milik']				= $valx2HistADef['id_milik'];
					$ArrBqDefaultHist[$val2HistADef]['id_bq']					= $valx2HistADef['id_bq'];
					$ArrBqDefaultHist[$val2HistADef]['product_parent']			= $valx2HistADef['product_parent'];
					$ArrBqDefaultHist[$val2HistADef]['kd_cust']					= $valx2HistADef['kd_cust'];
					$ArrBqDefaultHist[$val2HistADef]['customer']				= $valx2HistADef['customer'];
					$ArrBqDefaultHist[$val2HistADef]['standart_code']			= $valx2HistADef['standart_code'];
					$ArrBqDefaultHist[$val2HistADef]['diameter']				= $valx2HistADef['diameter'];
					$ArrBqDefaultHist[$val2HistADef]['diameter2']				= $valx2HistADef['diameter2'];
					$ArrBqDefaultHist[$val2HistADef]['liner']					= $valx2HistADef['liner'];
					$ArrBqDefaultHist[$val2HistADef]['pn']						= $valx2HistADef['pn'];
					$ArrBqDefaultHist[$val2HistADef]['overlap']					= $valx2HistADef['overlap'];
					$ArrBqDefaultHist[$val2HistADef]['waste']					= $valx2HistADef['waste'];
					$ArrBqDefaultHist[$val2HistADef]['waste_n1']				= $valx2HistADef['waste_n1'];
					$ArrBqDefaultHist[$val2HistADef]['waste_n2']				= $valx2HistADef['waste_n2'];
					$ArrBqDefaultHist[$val2HistADef]['max']						= $valx2HistADef['max'];
					$ArrBqDefaultHist[$val2HistADef]['min']						= $valx2HistADef['min'];
					$ArrBqDefaultHist[$val2HistADef]['plastic_film']			= $valx2HistADef['plastic_film'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil_a']		= $valx2HistADef['lin_resin_veil_a'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil_b']		= $valx2HistADef['lin_resin_veil_b'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil']			= $valx2HistADef['lin_resin_veil'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil_add_a']	= $valx2HistADef['lin_resin_veil_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil_add_b']	= $valx2HistADef['lin_resin_veil_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil_add']		= $valx2HistADef['lin_resin_veil_add'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm_a']			= $valx2HistADef['lin_resin_csm_a'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm_b']			= $valx2HistADef['lin_resin_csm_b'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm']			= $valx2HistADef['lin_resin_csm'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm_add_a']		= $valx2HistADef['lin_resin_csm_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm_add_b']		= $valx2HistADef['lin_resin_csm_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm_add']		= $valx2HistADef['lin_resin_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['lin_faktor_veil']			= $valx2HistADef['lin_faktor_veil'];
					$ArrBqDefaultHist[$val2HistADef]['lin_faktor_veil_add']		= $valx2HistADef['lin_faktor_veil_add'];
					$ArrBqDefaultHist[$val2HistADef]['lin_faktor_csm']			= $valx2HistADef['lin_faktor_csm'];
					$ArrBqDefaultHist[$val2HistADef]['lin_faktor_csm_add']		= $valx2HistADef['lin_faktor_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin']				= $valx2HistADef['lin_resin'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_thickness']		= $valx2HistADef['lin_resin_thickness'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm_a']			= $valx2HistADef['str_resin_csm_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm_b']			= $valx2HistADef['str_resin_csm_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm']			= $valx2HistADef['str_resin_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm_add_a']		= $valx2HistADef['str_resin_csm_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm_add_b']		= $valx2HistADef['str_resin_csm_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm_add']		= $valx2HistADef['str_resin_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr_a']			= $valx2HistADef['str_resin_wr_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr_b']			= $valx2HistADef['str_resin_wr_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr']			= $valx2HistADef['str_resin_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr_add_a']		= $valx2HistADef['str_resin_wr_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr_add_b']		= $valx2HistADef['str_resin_wr_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr_add']		= $valx2HistADef['str_resin_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv_a']			= $valx2HistADef['str_resin_rv_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv_b']			= $valx2HistADef['str_resin_rv_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv']			= $valx2HistADef['str_resin_rv'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv_add_a']		= $valx2HistADef['str_resin_rv_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv_add_b']		= $valx2HistADef['str_resin_rv_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv_add']		= $valx2HistADef['str_resin_rv_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_csm']			= $valx2HistADef['str_faktor_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_csm_add']		= $valx2HistADef['str_faktor_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_wr']			= $valx2HistADef['str_faktor_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_wr_add']		= $valx2HistADef['str_faktor_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv']			= $valx2HistADef['str_faktor_rv'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv_bw']		= $valx2HistADef['str_faktor_rv_bw'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv_jb']		= $valx2HistADef['str_faktor_rv_jb'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv_add']		= $valx2HistADef['str_faktor_rv_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv_add_bw']	= $valx2HistADef['str_faktor_rv_add_bw'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv_add_jb']	= $valx2HistADef['str_faktor_rv_add_jb'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin']				= $valx2HistADef['str_resin'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_thickness']		= $valx2HistADef['str_resin_thickness'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil_a']		= $valx2HistADef['eks_resin_veil_a'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil_b']		= $valx2HistADef['eks_resin_veil_b'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil']			= $valx2HistADef['eks_resin_veil'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil_add_a']	= $valx2HistADef['eks_resin_veil_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil_add_b']	= $valx2HistADef['eks_resin_veil_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil_add']		= $valx2HistADef['eks_resin_veil_add'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm_a']			= $valx2HistADef['eks_resin_csm_a'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm_b']			= $valx2HistADef['eks_resin_csm_b'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm']			= $valx2HistADef['eks_resin_csm'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm_add_a']		= $valx2HistADef['eks_resin_csm_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm_add_b']		= $valx2HistADef['eks_resin_csm_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm_add']		= $valx2HistADef['eks_resin_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['eks_faktor_veil']			= $valx2HistADef['eks_faktor_veil'];
					$ArrBqDefaultHist[$val2HistADef]['eks_faktor_veil_add']		= $valx2HistADef['eks_faktor_veil_add'];
					$ArrBqDefaultHist[$val2HistADef]['eks_faktor_csm']			= $valx2HistADef['eks_faktor_csm'];
					$ArrBqDefaultHist[$val2HistADef]['eks_faktor_csm_add']		= $valx2HistADef['eks_faktor_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin']				= $valx2HistADef['eks_resin'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_thickness']		= $valx2HistADef['eks_resin_thickness'];
					$ArrBqDefaultHist[$val2HistADef]['topcoat_resin']			= $valx2HistADef['topcoat_resin'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm_a']		= $valx2HistADef['str_n1_resin_csm_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm_b']		= $valx2HistADef['str_n1_resin_csm_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm']		= $valx2HistADef['str_n1_resin_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm_add_a']	= $valx2HistADef['str_n1_resin_csm_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm_add_b']	= $valx2HistADef['str_n1_resin_csm_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm_add']	= $valx2HistADef['str_n1_resin_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr_a']		= $valx2HistADef['str_n1_resin_wr_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr_b']		= $valx2HistADef['str_n1_resin_wr_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr']			= $valx2HistADef['str_n1_resin_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr_add_a']	= $valx2HistADef['str_n1_resin_wr_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr_add_b']	= $valx2HistADef['str_n1_resin_wr_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr_add']		= $valx2HistADef['str_n1_resin_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv_a']		= $valx2HistADef['str_n1_resin_rv_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv_b']		= $valx2HistADef['str_n1_resin_rv_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv']			= $valx2HistADef['str_n1_resin_rv'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv_add_a']	= $valx2HistADef['str_n1_resin_rv_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv_add_b']	= $valx2HistADef['str_n1_resin_rv_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv_add']		= $valx2HistADef['str_n1_resin_rv_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_csm']		= $valx2HistADef['str_n1_faktor_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_csm_add']	= $valx2HistADef['str_n1_faktor_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_wr']		= $valx2HistADef['str_n1_faktor_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_wr_add']	= $valx2HistADef['str_n1_faktor_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv']		= $valx2HistADef['str_n1_faktor_rv'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv_bw']		= $valx2HistADef['str_n1_faktor_rv_bw'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv_jb']		= $valx2HistADef['str_n1_faktor_rv_jb'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv_add']	= $valx2HistADef['str_n1_faktor_rv_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv_add_bw']	= $valx2HistADef['str_n1_faktor_rv_add_bw'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv_add_jb']	= $valx2HistADef['str_n1_faktor_rv_add_jb'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin']			= $valx2HistADef['str_n1_resin'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_thickness']	= $valx2HistADef['str_n1_resin_thickness'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm_a']		= $valx2HistADef['str_n2_resin_csm_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm_b']		= $valx2HistADef['str_n2_resin_csm_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm']		= $valx2HistADef['str_n2_resin_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm_add_a']	= $valx2HistADef['str_n2_resin_csm_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm_add_b']	= $valx2HistADef['str_n2_resin_csm_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm_add']	= $valx2HistADef['str_n2_resin_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr_a']		= $valx2HistADef['str_n2_resin_wr_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr_b']		= $valx2HistADef['str_n2_resin_wr_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr']			= $valx2HistADef['str_n2_resin_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr_add_a']	= $valx2HistADef['str_n2_resin_wr_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr_add_b']	= $valx2HistADef['str_n2_resin_wr_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr_add']		= $valx2HistADef['str_n2_resin_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_faktor_csm']		= $valx2HistADef['str_n2_faktor_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_faktor_csm_add']	= $valx2HistADef['str_n2_faktor_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_faktor_wr']		= $valx2HistADef['str_n2_faktor_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_faktor_wr_add']	= $valx2HistADef['str_n2_faktor_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin']			= $valx2HistADef['str_n2_resin'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_thickness']	= $valx2HistADef['str_n2_resin_thickness'];
					$ArrBqDefaultHist[$val2HistADef]['created_by']				= $valx2HistADef['created_by'];
					$ArrBqDefaultHist[$val2HistADef]['created_date']			= $valx2HistADef['created_date'];
					$ArrBqDefaultHist[$val2HistADef]['modified_by']				= $valx2HistADef['modified_by'];
					$ArrBqDefaultHist[$val2HistADef]['modified_date']			= $valx2HistADef['modified_date'];
					$ArrBqDefaultHist[$val2HistADef]['hist_by']					= $this->session->userdata['ORI_User']['username'];
					$ArrBqDefaultHist[$val2HistADef]['hist_date']				= date('Y-m-d H:i:s');
					
					
				}
			}
			//================================================================================================================
			//================================================================================================================
			//================================================================================================================
			
			//Insert Component Header To Hist
			$qHeaderHist	= $this->db->query("SELECT * FROM so_component_header WHERE id_bq='".$id_bq."' AND id_milik='".$id_milik."' ")->result_array();
			if(!empty($qHeaderHist)){
				foreach($qHeaderHist AS $val2HistA => $valx2HistA){
					$ArrBqHeaderHist[$val2HistA]['id_product']			= $valx2HistA['id_product'];
					$ArrBqHeaderHist[$val2HistA]['id_milik']			= $valx2HistA['id_milik'];
					$ArrBqHeaderHist[$val2HistA]['id_bq']				= $valx2HistA['id_bq'];
					$ArrBqHeaderHist[$val2HistA]['parent_product']		= $valx2HistA['parent_product'];
					$ArrBqHeaderHist[$val2HistA]['nm_product']			= $valx2HistA['nm_product'];
					$ArrBqHeaderHist[$val2HistA]['series']				= $valx2HistA['series'];
					$ArrBqHeaderHist[$val2HistA]['resin_sistem']		= $valx2HistA['resin_sistem'];
					$ArrBqHeaderHist[$val2HistA]['pressure']			= $valx2HistA['pressure'];
					$ArrBqHeaderHist[$val2HistA]['diameter']			= $valx2HistA['diameter'];
					$ArrBqHeaderHist[$val2HistA]['liner']				= $valx2HistA['liner'];
					$ArrBqHeaderHist[$val2HistA]['aplikasi_product']	= $valx2HistA['aplikasi_product'];
					$ArrBqHeaderHist[$val2HistA]['criminal_barier']		= $valx2HistA['criminal_barier'];
					$ArrBqHeaderHist[$val2HistA]['vacum_rate']			= $valx2HistA['vacum_rate'];
					$ArrBqHeaderHist[$val2HistA]['stiffness']			= $valx2HistA['stiffness'];
					$ArrBqHeaderHist[$val2HistA]['design_life']			= $valx2HistA['design_life'];
					$ArrBqHeaderHist[$val2HistA]['standart_by']			= $valx2HistA['standart_by'];
					$ArrBqHeaderHist[$val2HistA]['standart_toleransi']	= $valx2HistA['standart_toleransi'];
					$ArrBqHeaderHist[$val2HistA]['diameter2']			= $valx2HistA['diameter2'];
					$ArrBqHeaderHist[$val2HistA]['panjang']				= $valx2HistA['panjang'];
					$ArrBqHeaderHist[$val2HistA]['radius']				= $valx2HistA['radius'];
					$ArrBqHeaderHist[$val2HistA]['type_elbow']			= $valx2HistA['type_elbow'];
					$ArrBqHeaderHist[$val2HistA]['angle']				= $valx2HistA['angle'];
					$ArrBqHeaderHist[$val2HistA]['design']				= $valx2HistA['design'];
					$ArrBqHeaderHist[$val2HistA]['est']					= $valx2HistA['est'];
					$ArrBqHeaderHist[$val2HistA]['min_toleransi']		= $valx2HistA['min_toleransi'];
					$ArrBqHeaderHist[$val2HistA]['max_toleransi']		= $valx2HistA['max_toleransi'];
					$ArrBqHeaderHist[$val2HistA]['waste']				= $valx2HistA['waste'];
					$ArrBqHeaderHist[$val2HistA]['area']				= $valx2HistA['area'];
					$ArrBqHeaderHist[$val2HistA]['wrap_length']			= $valx2HistA['wrap_length'];
					$ArrBqHeaderHist[$val2HistA]['wrap_length2']		= $valx2HistA['wrap_length2'];
					$ArrBqHeaderHist[$val2HistA]['high']				= $valx2HistA['high'];
					$ArrBqHeaderHist[$val2HistA]['area2']				= $valx2HistA['area2'];
					$ArrBqHeaderHist[$val2HistA]['panjang_neck_1']		= $valx2HistA['panjang_neck_1'];
					$ArrBqHeaderHist[$val2HistA]['panjang_neck_2']		= $valx2HistA['panjang_neck_2'];
					$ArrBqHeaderHist[$val2HistA]['design_neck_1']		= $valx2HistA['design_neck_1'];
					$ArrBqHeaderHist[$val2HistA]['design_neck_2']		= $valx2HistA['design_neck_2'];
					$ArrBqHeaderHist[$val2HistA]['est_neck_1']			= $valx2HistA['est_neck_1'];
					$ArrBqHeaderHist[$val2HistA]['est_neck_2']			= $valx2HistA['est_neck_2'];
					$ArrBqHeaderHist[$val2HistA]['area_neck_1']			= $valx2HistA['area_neck_1'];
					$ArrBqHeaderHist[$val2HistA]['area_neck_2']			= $valx2HistA['area_neck_2'];
					$ArrBqHeaderHist[$val2HistA]['flange_od']			= $valx2HistA['flange_od'];
					$ArrBqHeaderHist[$val2HistA]['flange_bcd']			= $valx2HistA['flange_bcd'];
					$ArrBqHeaderHist[$val2HistA]['flange_n']			= $valx2HistA['flange_n'];
					$ArrBqHeaderHist[$val2HistA]['flange_oh']			= $valx2HistA['flange_oh'];
					$ArrBqHeaderHist[$val2HistA]['rev']					= $valx2HistA['rev'];
					$ArrBqHeaderHist[$val2HistA]['status']				= $valx2HistA['status'];
					$ArrBqHeaderHist[$val2HistA]['approve_by']			= $valx2HistA['approve_by'];
					$ArrBqHeaderHist[$val2HistA]['approve_date']		= $valx2HistA['approve_date'];
					$ArrBqHeaderHist[$val2HistA]['approve_reason']		= $valx2HistA['approve_reason'];
					$ArrBqHeaderHist[$val2HistA]['sts_price']			= $valx2HistA['sts_price'];
					$ArrBqHeaderHist[$val2HistA]['sts_price_by']		= $valx2HistA['sts_price_by'];
					$ArrBqHeaderHist[$val2HistA]['sts_price_date']		= $valx2HistA['sts_price_date'];
					$ArrBqHeaderHist[$val2HistA]['sts_price_reason']	= $valx2HistA['sts_price_reason'];
					$ArrBqHeaderHist[$val2HistA]['created_by']			= $valx2HistA['created_by'];
					$ArrBqHeaderHist[$val2HistA]['created_date']		= $valx2HistA['created_date'];
					$ArrBqHeaderHist[$val2HistA]['deleted']				= $valx2HistA['deleted'];
					$ArrBqHeaderHist[$val2HistA]['deleted_by']			= $valx2HistA['deleted_by'];
					$ArrBqHeaderHist[$val2HistA]['deleted_date']		= $valx2HistA['deleted_date'];
					$ArrBqHeaderHist[$val2HistA]['hist_by']				= $this->session->userdata['ORI_User']['username'];
					$ArrBqHeaderHist[$val2HistA]['hist_date']			= date('Y-m-d H:i:s');
					
				}
			}

			//Component Detail
			$qDetail	= $this->db->query("SELECT a.*, b.panjang FROM component_detail a LEFT JOIN component_header b ON a.id_product = b.id_product WHERE a.id_product='".$product."' ")->result_array();
			foreach($qDetail AS $val2 => $valx2){
				$LoopDetail++;
				// $sqlPrice = "SELECT price_ref_estimation FROM raw_materials WHERE id_material='".$valx2['id_material']."' LIMIT 1";
				// $restPrice = $this->db->query($sqlPrice)->result();
				$ArrBqDetail[$LoopDetail]['id_product']		= $product;
				$ArrBqDetail[$LoopDetail]['id_bq']			= $id_bq;
				$ArrBqDetail[$LoopDetail]['id_milik']		= $id_milik;
				$ArrBqDetail[$LoopDetail]['detail_name']	= $valx2['detail_name'];
				$ArrBqDetail[$LoopDetail]['acuhan']			= $valx2['acuhan'];
				$ArrBqDetail[$LoopDetail]['id_ori']			= $valx2['id_ori'];
				$ArrBqDetail[$LoopDetail]['id_ori2']		= $valx2['id_ori2'];
				$ArrBqDetail[$LoopDetail]['id_category']	= $valx2['id_category'];
				$ArrBqDetail[$LoopDetail]['nm_category']	= $valx2['nm_category'];
				$ArrBqDetail[$LoopDetail]['id_material']	= $valx2['id_material'];
				$ArrBqDetail[$LoopDetail]['nm_material']	= $valx2['nm_material'];
				$ArrBqDetail[$LoopDetail]['value']			= $valx2['value'];
				$ArrBqDetail[$LoopDetail]['thickness']		= $valx2['thickness'];
				$ArrBqDetail[$LoopDetail]['fak_pengali']	= $valx2['fak_pengali'];
				$ArrBqDetail[$LoopDetail]['bw']				= $valx2['bw'];
				$ArrBqDetail[$LoopDetail]['jumlah']			= $valx2['jumlah'];
				$ArrBqDetail[$LoopDetail]['layer']			= $valx2['layer'];
				$ArrBqDetail[$LoopDetail]['containing']		= $valx2['containing'];
				$ArrBqDetail[$LoopDetail]['total_thickness']	= $valx2['total_thickness'];
				if($qHeader[0]->parent_product == 'pipe' OR $qHeader[0]->parent_product == 'pipe slongsong'){
					$ArrBqDetail[$LoopDetail]['last_cost']	= (floatval($valx2['last_cost']) / floatval($valx2['panjang']))* (floatval($panjang) + 400);
				}
				elseif ($qHeader[0]->parent_product == 'branch joint' OR $qHeader[0]->parent_product == 'field joint' OR $qHeader[0]->parent_product == 'shop joint') {
					$ArrBqDetail[$LoopDetail]['last_cost']	= $valx2['material_weight'];
				}
				else{
					$ArrBqDetail[$LoopDetail]['last_cost']	= $valx2['last_cost'];
				}
				$ArrBqDetail[$LoopDetail]['rev']				= $qHeader[0]->rev;
				//
				$ArrBqDetail[$LoopDetail]['area_weight']		= $valx2['area_weight'];
				$ArrBqDetail[$LoopDetail]['material_weight']	= $valx2['material_weight'];
				$ArrBqDetail[$LoopDetail]['percentage']			= $valx2['percentage'];
				$ArrBqDetail[$LoopDetail]['resin_content']		= $valx2['resin_content'];

				$ArrBqDetail[$LoopDetail]['price_mat']				= get_price_ref($valx2['id_material']);
			}

			//Component Lamination
			$qDetailLam	= $this->db->query("SELECT * FROM component_lamination WHERE id_product='".$product."' ")->result_array();
			foreach($qDetailLam AS $val2 => $valx2){
				$LoopDetailLam++;
				$ArrBqDetailLam[$LoopDetailLam]['id_product']	= $product;
				$ArrBqDetailLam[$LoopDetailLam]['id_bq']		= $id_bq;
				$ArrBqDetailLam[$LoopDetailLam]['id_milik']		= $id_milik;
				$ArrBqDetailLam[$LoopDetailLam]['detail_name']	= $valx2['detail_name'];
				$ArrBqDetailLam[$LoopDetailLam]['lapisan']		= $valx2['lapisan'];
				$ArrBqDetailLam[$LoopDetailLam]['std_glass']	= $valx2['std_glass'];
				$ArrBqDetailLam[$LoopDetailLam]['width']		= $valx2['width'];
				$ArrBqDetailLam[$LoopDetailLam]['stage']		= $valx2['stage'];
				$ArrBqDetailLam[$LoopDetailLam]['glass']		= $valx2['glass'];
				$ArrBqDetailLam[$LoopDetailLam]['thickness_1']	= $valx2['thickness_1'];
				$ArrBqDetailLam[$LoopDetailLam]['thickness_2']	= $valx2['thickness_2'];
				$ArrBqDetailLam[$LoopDetailLam]['glass_length']	= $valx2['glass_length'];
				$ArrBqDetailLam[$LoopDetailLam]['weight_veil']	= $valx2['weight_veil'];
				$ArrBqDetailLam[$LoopDetailLam]['weight_csm']	= $valx2['weight_csm'];
				$ArrBqDetailLam[$LoopDetailLam]['weight_wr']	= $valx2['weight_wr'];
			}

			//Insert Component Detail To Hist
			$qDetailHist	= $this->db->query("SELECT * FROM so_component_detail WHERE id_bq='".$id_bq."' AND id_milik='".$id_milik."' ")->result_array();
			if(!empty($qDetailHist)){
				foreach($qDetailHist AS $val2Hist => $valx2Hist){
					$ArrBqDetailHist[$val2Hist]['id_product']		= $valx2Hist['id_product'];
					$ArrBqDetailHist[$val2Hist]['id_bq']			= $valx2Hist['id_bq'];
					$ArrBqDetailHist[$val2Hist]['id_milik']			= $valx2Hist['id_milik'];
					$ArrBqDetailHist[$val2Hist]['detail_name']		= $valx2Hist['detail_name'];
					$ArrBqDetailHist[$val2Hist]['acuhan']			= $valx2Hist['acuhan'];
					$ArrBqDetailHist[$val2Hist]['id_ori']			= $valx2Hist['id_ori'];
					$ArrBqDetailHist[$val2Hist]['id_ori2']			= $valx2Hist['id_ori2'];
					$ArrBqDetailHist[$val2Hist]['id_category']		= $valx2Hist['id_category'];
					$ArrBqDetailHist[$val2Hist]['nm_category']		= $valx2Hist['nm_category'];
					$ArrBqDetailHist[$val2Hist]['id_material']		= $valx2Hist['id_material'];
					$ArrBqDetailHist[$val2Hist]['nm_material']		= $valx2Hist['nm_material'];
					$ArrBqDetailHist[$val2Hist]['value']			= $valx2Hist['value'];
					$ArrBqDetailHist[$val2Hist]['thickness']		= $valx2Hist['thickness'];
					$ArrBqDetailHist[$val2Hist]['fak_pengali']		= $valx2Hist['fak_pengali'];
					$ArrBqDetailHist[$val2Hist]['bw']				= $valx2Hist['bw'];
					$ArrBqDetailHist[$val2Hist]['jumlah']			= $valx2Hist['jumlah'];
					$ArrBqDetailHist[$val2Hist]['layer']			= $valx2Hist['layer'];
					$ArrBqDetailHist[$val2Hist]['containing']		= $valx2Hist['containing'];
					$ArrBqDetailHist[$val2Hist]['total_thickness']	= $valx2Hist['total_thickness'];
					$ArrBqDetailHist[$val2Hist]['last_cost']		= $valx2Hist['last_cost'];
					$ArrBqDetailHist[$val2Hist]['rev']				= $valx2Hist['rev'];
					$ArrBqDetailHist[$val2Hist]['price_mat']		= $valx2Hist['price_mat'];
					$ArrBqDetailHist[$val2Hist]['hist_by']			= $this->session->userdata['ORI_User']['username'];
					$ArrBqDetailHist[$val2Hist]['hist_date']		= date('Y-m-d H:i:s');
				}
			}

			//Component Detail Plus
			$qDetailPlus	= $this->db->query("SELECT a.*, b.panjang FROM component_detail_plus a LEFT JOIN component_header b ON a.id_product = b.id_product WHERE a.id_product='".$product."' ")->result_array();
			foreach($qDetailPlus AS $val3 => $valx3){
				$LoopDetailPlus++;
				// $sqlPrice = "SELECT price_ref_estimation FROM raw_materials WHERE id_material='".$valx2['id_material']."' LIMIT 1";
				// $restPrice = $this->db->query($sqlPrice)->result();
				$ArrBqDetailPlus[$LoopDetailPlus]['id_product']		= $product;
				$ArrBqDetailPlus[$LoopDetailPlus]['id_bq']			= $id_bq;
				$ArrBqDetailPlus[$LoopDetailPlus]['id_milik']		= $id_milik;
				$ArrBqDetailPlus[$LoopDetailPlus]['detail_name']	= $valx3['detail_name'];
				$ArrBqDetailPlus[$LoopDetailPlus]['id_ori']			= $valx3['id_ori'];
				$ArrBqDetailPlus[$LoopDetailPlus]['id_ori2']		= $valx3['id_ori2'];
				$ArrBqDetailPlus[$LoopDetailPlus]['id_category']	= $valx3['id_category'];
				$ArrBqDetailPlus[$LoopDetailPlus]['nm_category']	= $valx3['nm_category'];
				$ArrBqDetailPlus[$LoopDetailPlus]['id_material']	= $valx3['id_material'];
				$ArrBqDetailPlus[$LoopDetailPlus]['nm_material']	= $valx3['nm_material'];
				$ArrBqDetailPlus[$LoopDetailPlus]['containing']		= $valx3['containing'];
				$ArrBqDetailPlus[$LoopDetailPlus]['perse']			= $valx3['perse'];
				if($qHeader[0]->parent_product == 'pipe' OR $qHeader[0]->parent_product == 'pipe slongsong'){
					$ArrBqDetailPlus[$LoopDetailPlus]['last_full']	= (floatval($valx3['last_full']) / floatval($valx3['panjang'])) * (floatval($panjang) + 400);
					$ArrBqDetailPlus[$LoopDetailPlus]['last_cost']	= (floatval($valx3['last_cost']) / floatval($valx3['panjang'])) * (floatval($panjang) + 400);
				}
				else{
					$ArrBqDetailPlus[$LoopDetailPlus]['last_full']	= $valx3['last_full'];
					$ArrBqDetailPlus[$LoopDetailPlus]['last_cost']	= $valx3['last_cost'];
				}
				$ArrBqDetailPlus[$LoopDetailPlus]['rev']			= $qHeader[0]->rev;
				$ArrBqDetailPlus[$LoopDetailPlus]['price_mat']			= get_price_ref($valx3['id_material']);
			}

			//Insert Component Detail Plus To Hist
			$qDetailPlusHist	= $this->db->query("SELECT * FROM so_component_detail_plus WHERE id_bq='".$id_bq."' AND id_milik='".$id_milik."' ")->result_array();
			if(!empty($qDetailPlusHist)){
				foreach($qDetailPlusHist AS $val3Hist => $valx3Hist){
					$ArrBqDetailPlusHist[$val3Hist]['id_product']	= $valx3Hist['id_product'];
					$ArrBqDetailPlusHist[$val3Hist]['id_bq']		= $valx3Hist['id_bq'];
					$ArrBqDetailPlusHist[$val3Hist]['id_milik']		= $valx3Hist['id_milik'];
					$ArrBqDetailPlusHist[$val3Hist]['detail_name']	= $valx3Hist['detail_name'];
					$ArrBqDetailPlusHist[$val3Hist]['id_ori']		= $valx3Hist['id_ori'];
					$ArrBqDetailPlusHist[$val3Hist]['id_ori2']		= $valx3Hist['id_ori2'];
					$ArrBqDetailPlusHist[$val3Hist]['id_category']	= $valx3Hist['id_category'];
					$ArrBqDetailPlusHist[$val3Hist]['nm_category']	= $valx3Hist['nm_category'];
					$ArrBqDetailPlusHist[$val3Hist]['id_material']	= $valx3Hist['id_material'];
					$ArrBqDetailPlusHist[$val3Hist]['nm_material']	= $valx3Hist['nm_material'];
					$ArrBqDetailPlusHist[$val3Hist]['containing']	= $valx3Hist['containing'];
					$ArrBqDetailPlusHist[$val3Hist]['perse']		= $valx3Hist['perse'];
					$ArrBqDetailPlusHist[$val3Hist]['last_full']	= $valx3Hist['last_full'];
					$ArrBqDetailPlusHist[$val3Hist]['last_cost']	= $valx3Hist['last_cost'];
					$ArrBqDetailPlusHist[$val3Hist]['rev']			= $valx3Hist['rev'];
					$ArrBqDetailPlusHist[$val3Hist]['price_mat']	= $valx3Hist['price_mat'];
					$ArrBqDetailPlusHist[$val3Hist]['hist_by']		= $this->session->userdata['ORI_User']['username'];
					$ArrBqDetailPlusHist[$val3Hist]['hist_date']	= date('Y-m-d H:i:s');
				}
			}

			//Component Detail Add
			$qDetailAdd		= $this->db->query("SELECT a.*, b.panjang FROM component_detail_add a LEFT JOIN component_header b ON a.id_product = b.id_product WHERE a.id_product='".$product."' ")->result_array();
			if(!empty($qDetailAdd)){
				foreach($qDetailAdd AS $val4 => $valx4){
					$LoopDetailAdd++;
					// $sqlPrice = "SELECT price_ref_estimation FROM raw_materials WHERE id_material='".$valx2['id_material']."' LIMIT 1";
					// $restPrice = $this->db->query($sqlPrice)->result();
					$ArrBqDetailAdd[$LoopDetailAdd]['id_product']		= $product;
					$ArrBqDetailAdd[$LoopDetailAdd]['id_bq']			= $id_bq;
					$ArrBqDetailAdd[$LoopDetailAdd]['id_milik']			= $id_milik;
					$ArrBqDetailAdd[$LoopDetailAdd]['detail_name']		= $valx4['detail_name'];
					$ArrBqDetailAdd[$LoopDetailAdd]['id_category']		= $valx4['id_category'];
					$ArrBqDetailAdd[$LoopDetailAdd]['nm_category']		= $valx4['nm_category'];
					$ArrBqDetailAdd[$LoopDetailAdd]['id_material']		= $valx4['id_material'];
					$ArrBqDetailAdd[$LoopDetailAdd]['nm_material']		= $valx4['nm_material'];
					$ArrBqDetailAdd[$LoopDetailAdd]['containing']		= $valx4['containing'];
					$ArrBqDetailAdd[$LoopDetailAdd]['perse']			= $valx4['perse'];
					if($qHeader[0]->parent_product == 'pipe' OR $qHeader[0]->parent_product == 'pipe slongsong'){
						$ArrBqDetailAdd[$LoopDetailAdd]['last_full']	= (floatval($valx4['last_full']) / floatval($valx4['panjang'])) * (floatval($panjang) + 400);
						$ArrBqDetailAdd[$LoopDetailAdd]['last_cost']	= (floatval($valx4['last_cost']) / floatval($valx4['panjang'])) * (floatval($panjang) + 400);
					}
					else{
						$ArrBqDetailAdd[$LoopDetailAdd]['last_full']	= $valx4['last_full'];
						$ArrBqDetailAdd[$LoopDetailAdd]['last_cost']	= $valx4['last_cost'];
					}
					$ArrBqDetailAdd[$LoopDetailAdd]['rev']				= $qHeader[0]->rev;
					$ArrBqDetailAdd[$LoopDetailAdd]['price_mat']		= get_price_ref($valx4['id_material']);
				}
			}

			//Insert Component Detail Add To Hist
			$qDetailAddHist		= $this->db->query("SELECT * FROM so_component_detail_add WHERE id_bq='".$id_bq."' AND id_milik='".$id_milik."' ")->result_array();
			if(!empty($qDetailAddHist)){
				foreach($qDetailAddHist AS $val4Hist => $valx4Hist){
					$ArrBqDetailAddHist[$val4Hist]['id_product']	= $valx4Hist['id_product'];
					$ArrBqDetailAddHist[$val4Hist]['id_bq']			= $valx4Hist['id_bq'];
					$ArrBqDetailAddHist[$val4Hist]['id_milik']		= $valx4Hist['id_milik'];
					$ArrBqDetailAddHist[$val4Hist]['detail_name']	= $valx4Hist['detail_name'];
					$ArrBqDetailAddHist[$val4Hist]['id_category']	= $valx4Hist['id_category'];
					$ArrBqDetailAddHist[$val4Hist]['nm_category']	= $valx4Hist['nm_category'];
					$ArrBqDetailAddHist[$val4Hist]['id_material']	= $valx4Hist['id_material'];
					$ArrBqDetailAddHist[$val4Hist]['nm_material']	= $valx4Hist['nm_material'];
					$ArrBqDetailAddHist[$val4Hist]['containing']	= $valx4Hist['containing'];
					$ArrBqDetailAddHist[$val4Hist]['perse']			= $valx4Hist['perse'];
					$ArrBqDetailAddHist[$val4Hist]['last_full']		= $valx4Hist['last_full'];
					$ArrBqDetailAddHist[$val4Hist]['last_cost']		= $valx4Hist['last_cost'];
					$ArrBqDetailAddHist[$val4Hist]['rev']			= $valx4Hist['rev'];
					$ArrBqDetailAddHist[$val4Hist]['price_mat']		= $valx4Hist['price_mat'];
					$ArrBqDetailAddHist[$val4Hist]['hist_by']		= $this->session->userdata['ORI_User']['username'];
					$ArrBqDetailAddHist[$val4Hist]['hist_date']		= date('Y-m-d H:i:s');
				}
			}

			//Component Footer
			$qDetailFooter	= $this->db->query("SELECT * FROM component_footer WHERE id_product='".$product."' ")->result_array();
			if (count($qDetailFooter)>0)
			{
				foreach($qDetailFooter AS $val5 => $valx5){
					$LoopFooter++;
					$ArrBqFooter[$LoopFooter]['id_product']		= $product;
					$ArrBqFooter[$LoopFooter]['id_bq']			= $id_bq;
					$ArrBqFooter[$LoopFooter]['id_milik']		= $id_milik;
					$ArrBqFooter[$LoopFooter]['detail_name']	= $valx5['detail_name'];
					$ArrBqFooter[$LoopFooter]['total']			= $valx5['total'];
					$ArrBqFooter[$LoopFooter]['min']			= $valx5['min'];
					$ArrBqFooter[$LoopFooter]['max']			= $valx5['max'];
					$ArrBqFooter[$LoopFooter]['hasil']			= $valx5['hasil'];
					$ArrBqFooter[$LoopFooter]['rev']			= $qHeader[0]->rev;
				}
			}
			//Insert Component Footer To Hist
			$qDetailFooterHist		= $this->db->query("SELECT * FROM so_component_footer WHERE id_bq='".$id_bq."' AND id_milik='".$id_milik."' ")->result_array();
			if(!empty($qDetailFooterHist)){
				foreach($qDetailFooterHist AS $val5Hist => $valx5Hist){
					$ArrBqFooterHist[$val5Hist]['id_product']	= $valx5Hist['id_product'];
					$ArrBqFooterHist[$val5Hist]['id_bq']		= $valx5Hist['id_bq'];
					$ArrBqFooterHist[$val5Hist]['id_milik']		= $valx5Hist['id_milik'];
					$ArrBqFooterHist[$val5Hist]['detail_name']	= $valx5Hist['detail_name'];
					$ArrBqFooterHist[$val5Hist]['total']		= $valx5Hist['total'];
					$ArrBqFooterHist[$val5Hist]['min']			= $valx5Hist['min'];
					$ArrBqFooterHist[$val5Hist]['max']			= $valx5Hist['max'];
					$ArrBqFooterHist[$val5Hist]['hasil']		= $valx5Hist['hasil'];
					$ArrBqFooterHist[$val5Hist]['rev']			= $valx5Hist['rev'];
					$ArrBqFooterHist[$val5Hist]['hist_by']		= $this->session->userdata['ORI_User']['username'];
					$ArrBqFooterHist[$val5Hist]['hist_date']	= date('Y-m-d H:i:s');
				}
			}
		

		// print_r($ArrBqHeader);
		// print_r($ArrBqDefault);
		// echo "</pre>";
		// exit;

		$UpdateBQ	= array(
			'estimasi'	=> 'Y',
			'est_by'	=> $this->session->userdata['ORI_User']['username'],
			'est_date'	=> date('Y-m-d H:i:s')
		);
		
		$ArrDetBq2	= array(
			'id_product'	=> $product
		);

		$this->db->trans_start();
			$this->db->where('id', $id_milik);
			$this->db->update('so_detail_header', $ArrDetBq2);

			//Insert Batch Histories
			if(!empty($ArrBqHeaderHist)){
				$this->db->insert_batch('hist_so_component_header', $ArrBqHeaderHist);
			}
			if(!empty($ArrBqDetailHist)){
				$this->db->insert_batch('hist_so_component_detail', $ArrBqDetailHist);
			}
			if(!empty($ArrBqDetailPlusHist)){
				$this->db->insert_batch('hist_so_component_detail_plus', $ArrBqDetailPlusHist);
			}
			if(!empty($ArrBqDetailAddHist)){
				$this->db->insert_batch('hist_so_component_detail_add', $ArrBqDetailAddHist);
			}
			if(count($ArrBqFooterHist)>0){
				$this->db->insert_batch('hist_so_component_footer', $ArrBqFooterHist);
			}
			if(!empty($ArrBqDefaultHist)){
				$this->db->insert_batch('hist_so_component_default', $ArrBqDefaultHist);
			}

			//Delete BQ Component
			$this->db->delete('so_component_header', array('id_bq' => $id_bq, 'id_milik' => $id_milik));
			$this->db->delete('so_component_detail', array('id_bq' => $id_bq, 'id_milik' => $id_milik));
			$this->db->delete('so_component_lamination', array('id_bq' => $id_bq, 'id_milik' => $id_milik));
			$this->db->delete('so_component_detail_plus', array('id_bq' => $id_bq, 'id_milik' => $id_milik));
			$this->db->delete('so_component_detail_add', array('id_bq' => $id_bq, 'id_milik' => $id_milik));
			$this->db->delete('so_component_footer', array('id_bq' => $id_bq, 'id_milik' => $id_milik));
			$this->db->delete('so_component_default', array('id_bq' => $id_bq, 'id_milik' => $id_milik));

			//Insert BQ Component
			if(!empty($ArrBqHeader)){
				$this->db->insert('so_component_header', $ArrBqHeader);
			}
			if(!empty($ArrBqDetail)){
				$this->db->insert_batch('so_component_detail', $ArrBqDetail);
			}
			if(!empty($ArrBqDetailLam)){
				$this->db->insert_batch('so_component_lamination', $ArrBqDetailLam);
			}
			if(!empty($ArrBqDetailPlus)){
				$this->db->insert_batch('so_component_detail_plus', $ArrBqDetailPlus);
			}
			if(!empty($ArrBqDetailAdd)){
				$this->db->insert_batch('so_component_detail_add', $ArrBqDetailAdd);
			}
			if(!empty($ArrBqFooter)){
				$this->db->insert_batch('so_component_footer', $ArrBqFooter);
			}
			if(!empty($ArrBqDefault)){
				$this->db->insert('so_component_default', $ArrBqDefault);
			}

			$this->db->where('id_bq', $id_bq);
			$this->db->update('so_header', $UpdateBQ);

		$this->db->trans_complete();

		if($this->db->trans_status() === FALSE){
			$this->db->trans_rollback();
			$Arr_Kembali	= array(
				'pesan'		=>'Estimation structure bq data failed. Please try again later ...',
				'status'	=> 0
			);
		}
		else{
			$this->db->trans_commit();
			$Arr_Kembali	= array(
				'id_bqx'	=> $id_bq,
				'pesan'		=>'Estimation structure bq data success. Thanks ...',
				'status'	=> 1
			);
			history('Estimation Sebagian Structure BQ in Final Drawing with code : '.$id_bq.' / '.$id_milik.' / '.$product);
		}

		echo json_encode($Arr_Kembali);
	}

	public function updateEstSatuan_BQ(){
		$Arr_Kembali	= array();
		$data			= $this->input->post();
	
		$id_bq			= $this->uri->segment(3);
		$id_milik		= $this->uri->segment(4);
		$panjang		= $this->uri->segment(5);
		$product		= $this->uri->segment(6);
		$id_milik_bq	= $this->uri->segment(7);
		
		// echo $id_bq."<br>";
		// echo $id_milik."<br>";
		// echo $panjang."<br>";
		// echo $product."<br>";
		// echo $id_milik_bq."<br>";
		// exit;

		$ArrBqHeader			= array();
		$ArrBqDetail			= array();
		$ArrBqDetailPlus		= array();
		$ArrBqDetailAdd			= array();
		$ArrBqFooter			= array();
		$ArrBqHeaderHist		= array();
		$ArrBqDetailHist		= array();
		$ArrBqDetailPlusHist	= array();
		$ArrBqDetailAddHist		= array();
		$ArrBqFooterHist		= array();
		$ArrBqDefault			= array();
		$ArrBqDefaultHist		= array();

		$LoopDetail = 0;
		$LoopDetailLam = 0;
		$LoopDetailPlus = 0;
		$LoopDetailAdd = 0;
		$LoopFooter = 0;
			// echo "SELECT * FROM bq_component_header WHERE id_product='".$product."' AND id_milik='".$id_milik_bq."' LIMIT 1 "; exit;
			//Component Header
			$qHeader	= $this->db->query("SELECT * FROM bq_component_header WHERE id_product='".$product."' AND id_milik='".$id_milik_bq."' LIMIT 1 ")->result();
			$ArrBqHeader['id_product']			= $product;
			$ArrBqHeader['id_bq']					= $id_bq;
			$ArrBqHeader['id_milik']				= $id_milik;
			$ArrBqHeader['parent_product']		= $qHeader[0]->parent_product;
			$ArrBqHeader['nm_product']			= $qHeader[0]->nm_product;
			$ArrBqHeader['standart_code']			= $qHeader[0]->standart_code;
			$ArrBqHeader['series']				= $qHeader[0]->series;
			$ArrBqHeader['resin_sistem']			= $qHeader[0]->resin_sistem;
			$ArrBqHeader['pressure']				= $qHeader[0]->pressure;
			$ArrBqHeader['diameter']				= $qHeader[0]->diameter;
			$ArrBqHeader['liner']					= $qHeader[0]->liner;
			$ArrBqHeader['aplikasi_product']		= $qHeader[0]->aplikasi_product;
			$ArrBqHeader['criminal_barier']		= $qHeader[0]->criminal_barier;
			$ArrBqHeader['vacum_rate']			= $qHeader[0]->vacum_rate;
			$ArrBqHeader['stiffness']				= $qHeader[0]->stiffness;
			$ArrBqHeader['design_life']			= $qHeader[0]->design_life; 
			$ArrBqHeader['standart_by']			= $qHeader[0]->standart_by;
			$ArrBqHeader['standart_toleransi']	= $qHeader[0]->standart_toleransi;
			$ArrBqHeader['diameter2']				= $qHeader[0]->diameter2;
			$ArrBqHeader['panjang']				= $qHeader[0]->panjang;
			$ArrBqHeader['radius']				= $qHeader[0]->radius;
			$ArrBqHeader['type_elbow']			= $qHeader[0]->type_elbow;
			$ArrBqHeader['angle']				= $qHeader[0]->angle;
			$ArrBqHeader['design']				= $qHeader[0]->design;
			$ArrBqHeader['est']					= $qHeader[0]->est;
			$ArrBqHeader['min_toleransi']		= $qHeader[0]->min_toleransi;
			$ArrBqHeader['max_toleransi']		= $qHeader[0]->max_toleransi;
			$ArrBqHeader['waste']				= $qHeader[0]->waste;
			$ArrBqHeader['area']				= $qHeader[0]->area;
			$ArrBqHeader['wrap_length']		= $qHeader[0]->wrap_length;
			$ArrBqHeader['wrap_length2']		= $qHeader[0]->wrap_length2;
			$ArrBqHeader['high']				= $qHeader[0]->high;
			$ArrBqHeader['area2']				= $qHeader[0]->area2;
			$ArrBqHeader['panjang_neck_1']	= $qHeader[0]->panjang_neck_1;
			$ArrBqHeader['panjang_neck_2']	= $qHeader[0]->panjang_neck_2;
			$ArrBqHeader['design_neck_1']		= $qHeader[0]->design_neck_1;
			$ArrBqHeader['design_neck_2']		= $qHeader[0]->design_neck_2;
			$ArrBqHeader['est_neck_1']		= $qHeader[0]->est_neck_1;
			$ArrBqHeader['est_neck_2']		= $qHeader[0]->est_neck_2;
			$ArrBqHeader['area_neck_1']		= $qHeader[0]->area_neck_1;
			$ArrBqHeader['area_neck_2']		= $qHeader[0]->area_neck_2;
			$ArrBqHeader['flange_od']			= $qHeader[0]->flange_od;
			$ArrBqHeader['flange_bcd']		= $qHeader[0]->flange_bcd;
			$ArrBqHeader['flange_n']			= $qHeader[0]->flange_n;
			$ArrBqHeader['flange_oh']			= $qHeader[0]->flange_oh;
			$ArrBqHeader['rev']				= $qHeader[0]->rev;
			$ArrBqHeader['status']			= $qHeader[0]->status;
			$ArrBqHeader['approve_by']		= $qHeader[0]->approve_by;
			$ArrBqHeader['approve_date']		= $qHeader[0]->approve_date;
			$ArrBqHeader['approve_reason']	= $qHeader[0]->approve_reason;
			$ArrBqHeader['sts_price']			= $qHeader[0]->sts_price;
			$ArrBqHeader['sts_price_by']		= $qHeader[0]->sts_price_by;
			$ArrBqHeader['sts_price_date']	= $qHeader[0]->sts_price_date;
			$ArrBqHeader['sts_price_reason']	= $qHeader[0]->sts_price_reason;
			$ArrBqHeader['created_by']		= $qHeader[0]->created_by;
			$ArrBqHeader['created_date']		= $qHeader[0]->created_date;
			$ArrBqHeader['deleted']			= $qHeader[0]->deleted;
			$ArrBqHeader['deleted_by']		= $qHeader[0]->deleted_by;
			$ArrBqHeader['deleted_date']		= $qHeader[0]->deleted_date;
			//
			$ArrBqHeader['pipe_thickness']	= $qHeader[0]->pipe_thickness;
			$ArrBqHeader['joint_thickness']	= $qHeader[0]->joint_thickness;
			$ArrBqHeader['factor_thickness']	= $qHeader[0]->factor_thickness;
			$ArrBqHeader['factor']			= $qHeader[0]->factor;
			
			// print_r($ArrBqHeader);
			// exit;
			//================================================================================================================
			//============================================DEFAULT BY ARWANT===================================================
			//================================================================================================================
			if(!empty($qHeader[0]->standart_code)){
				$plusSQL = "";
				if($qHeader[0]->parent_product == 'concentric reducer' OR $qHeader[0]->parent_product == 'reducer tee mould' OR $qHeader[0]->parent_product == 'eccentric reducer' OR $qHeader[0]->parent_product == 'reducer tee slongsong' OR $qHeader[0]->parent_product == 'branch joint'){
					$plusSQL = " AND diameter2='".$qHeader[0]->diameter2."'";
				}
				$getDefVal		= $this->db->query("SELECT * FROM bq_component_default WHERE product_parent='".$qHeader[0]->parent_product."' AND standart_code='".$qHeader[0]->standart_code."' AND diameter='".$qHeader[0]->diameter."' ".$plusSQL." AND id_milik='".$id_milik_bq."' LIMIT 1 ")->result();
				$getDefValNum	= $this->db->query("SELECT * FROM bq_component_default WHERE product_parent='".$qHeader[0]->parent_product."' AND standart_code='".$qHeader[0]->standart_code."' AND diameter='".$qHeader[0]->diameter."' ".$plusSQL." AND id_milik='".$id_milik_bq."' LIMIT 1 ")->num_rows();
				if($getDefValNum > 0){
					$ArrBqDefault['id_product']				= $product;
					$ArrBqDefault['id_bq']					= $id_bq;
					$ArrBqDefault['id_milik']					= $id_milik;
					$ArrBqDefault['product_parent']			= $getDefVal[0]->product_parent;
					$ArrBqDefault['kd_cust']					= $getDefVal[0]->kd_cust;
					$ArrBqDefault['customer']					= $getDefVal[0]->customer;
					$ArrBqDefault['standart_code']			= $getDefVal[0]->standart_code;
					$ArrBqDefault['diameter']					= $getDefVal[0]->diameter;
					$ArrBqDefault['diameter2']				= $getDefVal[0]->diameter2;
					$ArrBqDefault['liner']					= $getDefVal[0]->liner;
					$ArrBqDefault['pn']						= $getDefVal[0]->pn;
					$ArrBqDefault['overlap']					= $getDefVal[0]->overlap;
					$ArrBqDefault['waste']					= $getDefVal[0]->waste;
					$ArrBqDefault['waste_n1']					= $getDefVal[0]->waste_n1;
					$ArrBqDefault['waste_n2']					= $getDefVal[0]->waste_n2;
					$ArrBqDefault['max']						= $getDefVal[0]->max;
					$ArrBqDefault['min']						= $getDefVal[0]->min;
					$ArrBqDefault['plastic_film']				= $getDefVal[0]->plastic_film;
					$ArrBqDefault['lin_resin_veil_a']			= $getDefVal[0]->lin_resin_veil_a;
					$ArrBqDefault['lin_resin_veil_b']			= $getDefVal[0]->lin_resin_veil_b;
					$ArrBqDefault['lin_resin_veil']			= $getDefVal[0]->lin_resin_veil;
					$ArrBqDefault['lin_resin_veil_add_a']		= $getDefVal[0]->lin_resin_veil_add_a;
					$ArrBqDefault['lin_resin_veil_add_b']		= $getDefVal[0]->lin_resin_veil_add_b;
					$ArrBqDefault['lin_resin_veil_add']		= $getDefVal[0]->lin_resin_veil_add;
					$ArrBqDefault['lin_resin_csm_a']			= $getDefVal[0]->lin_resin_csm_a;
					$ArrBqDefault['lin_resin_csm_b']			= $getDefVal[0]->lin_resin_csm_b;
					$ArrBqDefault['lin_resin_csm']			= $getDefVal[0]->lin_resin_csm;
					$ArrBqDefault['lin_resin_csm_add_a']		= $getDefVal[0]->lin_resin_csm_add_a;
					$ArrBqDefault['lin_resin_csm_add_b']		= $getDefVal[0]->lin_resin_csm_add_b;
					$ArrBqDefault['lin_resin_csm_add']		= $getDefVal[0]->lin_resin_csm_add;
					$ArrBqDefault['lin_faktor_veil']			= $getDefVal[0]->lin_faktor_veil;
					$ArrBqDefault['lin_faktor_veil_add']		= $getDefVal[0]->lin_faktor_veil_add;
					$ArrBqDefault['lin_faktor_csm']			= $getDefVal[0]->lin_faktor_csm;
					$ArrBqDefault['lin_faktor_csm_add']		= $getDefVal[0]->lin_faktor_csm_add;
					$ArrBqDefault['lin_resin']				= $getDefVal[0]->lin_resin;
					$ArrBqDefault['lin_resin_thickness']		= $getDefVal[0]->lin_resin_thickness;
					$ArrBqDefault['str_resin_csm_a']			= $getDefVal[0]->str_resin_csm_a;
					$ArrBqDefault['str_resin_csm_b']			= $getDefVal[0]->str_resin_csm_b;
					$ArrBqDefault['str_resin_csm']			= $getDefVal[0]->str_resin_csm;
					$ArrBqDefault['str_resin_csm_add_a']		= $getDefVal[0]->str_resin_csm_add_a;
					$ArrBqDefault['str_resin_csm_add_b']		= $getDefVal[0]->str_resin_csm_add_b;
					$ArrBqDefault['str_resin_csm_add']		= $getDefVal[0]->str_resin_csm_add;
					$ArrBqDefault['str_resin_wr_a']			= $getDefVal[0]->str_resin_wr_a;
					$ArrBqDefault['str_resin_wr_b']			= $getDefVal[0]->str_resin_wr_b;
					$ArrBqDefault['str_resin_wr']				= $getDefVal[0]->str_resin_wr;
					$ArrBqDefault['str_resin_wr_add_a']		= $getDefVal[0]->str_resin_wr_add_a;
					$ArrBqDefault['str_resin_wr_add_b']		= $getDefVal[0]->str_resin_wr_add_b;
					$ArrBqDefault['str_resin_wr_add']			= $getDefVal[0]->str_resin_wr_add;
					$ArrBqDefault['str_resin_rv_a']			= $getDefVal[0]->str_resin_rv_a;
					$ArrBqDefault['str_resin_rv_b']			= $getDefVal[0]->str_resin_rv_b;
					$ArrBqDefault['str_resin_rv']				= $getDefVal[0]->str_resin_rv;
					$ArrBqDefault['str_resin_rv_add_a']		= $getDefVal[0]->str_resin_rv_add_a;
					$ArrBqDefault['str_resin_rv_add_b']		= $getDefVal[0]->str_resin_rv_add_b;
					$ArrBqDefault['str_resin_rv_add']			= $getDefVal[0]->str_resin_rv_add;
					$ArrBqDefault['str_faktor_csm']			= $getDefVal[0]->str_faktor_csm;
					$ArrBqDefault['str_faktor_csm_add']		= $getDefVal[0]->str_faktor_csm_add;
					$ArrBqDefault['str_faktor_wr']			= $getDefVal[0]->str_faktor_wr;
					$ArrBqDefault['str_faktor_wr_add']		= $getDefVal[0]->str_faktor_wr_add;
					$ArrBqDefault['str_faktor_rv']			= $getDefVal[0]->str_faktor_rv;
					$ArrBqDefault['str_faktor_rv_bw']			= $getDefVal[0]->str_faktor_rv_bw;
					$ArrBqDefault['str_faktor_rv_jb']			= $getDefVal[0]->str_faktor_rv_jb;
					$ArrBqDefault['str_faktor_rv_add']		= $getDefVal[0]->str_faktor_rv_add;
					$ArrBqDefault['str_faktor_rv_add_bw']		= $getDefVal[0]->str_faktor_rv_add_bw;
					$ArrBqDefault['str_faktor_rv_add_jb']		= $getDefVal[0]->str_faktor_rv_add_jb;
					$ArrBqDefault['str_resin']				= $getDefVal[0]->str_resin;
					$ArrBqDefault['str_resin_thickness']		= $getDefVal[0]->str_resin_thickness;
					$ArrBqDefault['eks_resin_veil_a']			= $getDefVal[0]->eks_resin_veil_a;
					$ArrBqDefault['eks_resin_veil_b']			= $getDefVal[0]->eks_resin_veil_b;
					$ArrBqDefault['eks_resin_veil']			= $getDefVal[0]->eks_resin_veil;
					$ArrBqDefault['eks_resin_veil_add_a']		= $getDefVal[0]->eks_resin_veil_add_a;
					$ArrBqDefault['eks_resin_veil_add_b']		= $getDefVal[0]->eks_resin_veil_add_b;
					$ArrBqDefault['eks_resin_veil_add']		= $getDefVal[0]->eks_resin_veil_add;
					$ArrBqDefault['eks_resin_csm_a']			= $getDefVal[0]->eks_resin_csm_a;
					$ArrBqDefault['eks_resin_csm_b']			= $getDefVal[0]->eks_resin_csm_b;
					$ArrBqDefault['eks_resin_csm']			= $getDefVal[0]->eks_resin_csm;
					$ArrBqDefault['eks_resin_csm_add_a']		= $getDefVal[0]->eks_resin_csm_add_a;
					$ArrBqDefault['eks_resin_csm_add_b']		= $getDefVal[0]->eks_resin_csm_add_b;
					$ArrBqDefault['eks_resin_csm_add']		= $getDefVal[0]->eks_resin_csm_add;
					$ArrBqDefault['eks_faktor_veil']			= $getDefVal[0]->eks_faktor_veil;
					$ArrBqDefault['eks_faktor_veil_add']		= $getDefVal[0]->eks_faktor_veil_add;
					$ArrBqDefault['eks_faktor_csm']			= $getDefVal[0]->eks_faktor_csm;
					$ArrBqDefault['eks_faktor_csm_add']		= $getDefVal[0]->eks_faktor_csm_add;
					$ArrBqDefault['eks_resin']				= $getDefVal[0]->eks_resin;
					$ArrBqDefault['eks_resin_thickness']		= $getDefVal[0]->eks_resin_thickness;
					$ArrBqDefault['topcoat_resin']			= $getDefVal[0]->topcoat_resin;
					$ArrBqDefault['str_n1_resin_csm_a']		= $getDefVal[0]->str_n1_resin_csm_a;
					$ArrBqDefault['str_n1_resin_csm_b']		= $getDefVal[0]->str_n1_resin_csm_b;
					$ArrBqDefault['str_n1_resin_csm']			= $getDefVal[0]->str_n1_resin_csm;
					$ArrBqDefault['str_n1_resin_csm_add_a']	= $getDefVal[0]->str_n1_resin_csm_add_a;
					$ArrBqDefault['str_n1_resin_csm_add_b']	= $getDefVal[0]->str_n1_resin_csm_add_b;
					$ArrBqDefault['str_n1_resin_csm_add']		= $getDefVal[0]->str_n1_resin_csm_add;
					$ArrBqDefault['str_n1_resin_wr_a']		= $getDefVal[0]->str_n1_resin_wr_a;
					$ArrBqDefault['str_n1_resin_wr_b']		= $getDefVal[0]->str_n1_resin_wr_b;
					$ArrBqDefault['str_n1_resin_wr']			= $getDefVal[0]->str_n1_resin_wr;
					$ArrBqDefault['str_n1_resin_wr_add_a']	= $getDefVal[0]->str_n1_resin_wr_add_a;
					$ArrBqDefault['str_n1_resin_wr_add_b']	= $getDefVal[0]->str_n1_resin_wr_add_b;
					$ArrBqDefault['str_n1_resin_wr_add']		= $getDefVal[0]->str_n1_resin_wr_add;
					$ArrBqDefault['str_n1_resin_rv_a']		= $getDefVal[0]->str_n1_resin_rv_a;
					$ArrBqDefault['str_n1_resin_rv_b']		= $getDefVal[0]->str_n1_resin_rv_b;
					$ArrBqDefault['str_n1_resin_rv']			= $getDefVal[0]->str_n1_resin_rv;
					$ArrBqDefault['str_n1_resin_rv_add_a']	= $getDefVal[0]->str_n1_resin_rv_add_a;
					$ArrBqDefault['str_n1_resin_rv_add_b']	= $getDefVal[0]->str_n1_resin_rv_add_b;
					$ArrBqDefault['str_n1_resin_rv_add']		= $getDefVal[0]->str_n1_resin_rv_add;
					$ArrBqDefault['str_n1_faktor_csm']		= $getDefVal[0]->str_n1_faktor_csm;
					$ArrBqDefault['str_n1_faktor_csm_add']	= $getDefVal[0]->str_n1_faktor_csm_add;
					$ArrBqDefault['str_n1_faktor_wr']			= $getDefVal[0]->str_n1_faktor_wr;
					$ArrBqDefault['str_n1_faktor_wr_add']		= $getDefVal[0]->str_n1_faktor_wr_add;
					$ArrBqDefault['str_n1_faktor_rv']			= $getDefVal[0]->str_n1_faktor_rv;
					$ArrBqDefault['str_n1_faktor_rv_bw']		= $getDefVal[0]->str_n1_faktor_rv_bw;
					$ArrBqDefault['str_n1_faktor_rv_jb']		= $getDefVal[0]->str_n1_faktor_rv_jb;
					$ArrBqDefault['str_n1_faktor_rv_add']		= $getDefVal[0]->str_n1_faktor_rv_add;
					$ArrBqDefault['str_n1_faktor_rv_add_bw']	= $getDefVal[0]->str_n1_faktor_rv_add_bw;
					$ArrBqDefault['str_n1_faktor_rv_add_jb']	= $getDefVal[0]->str_n1_faktor_rv_add_jb;
					$ArrBqDefault['str_n1_resin']				= $getDefVal[0]->str_n1_resin;
					$ArrBqDefault['str_n1_resin_thickness']	= $getDefVal[0]->str_n1_resin_thickness;
					$ArrBqDefault['str_n2_resin_csm_a']		= $getDefVal[0]->str_n2_resin_csm_a;
					$ArrBqDefault['str_n2_resin_csm_b']		= $getDefVal[0]->str_n2_resin_csm_b;
					$ArrBqDefault['str_n2_resin_csm']			= $getDefVal[0]->str_n2_resin_csm;
					$ArrBqDefault['str_n2_resin_csm_add_a']	= $getDefVal[0]->str_n2_resin_csm_add_a;
					$ArrBqDefault['str_n2_resin_csm_add_b']	= $getDefVal[0]->str_n2_resin_csm_add_b;
					$ArrBqDefault['str_n2_resin_csm_add']		= $getDefVal[0]->str_n2_resin_csm_add;
					$ArrBqDefault['str_n2_resin_wr_a']		= $getDefVal[0]->str_n2_resin_wr_a;
					$ArrBqDefault['str_n2_resin_wr_b']		= $getDefVal[0]->str_n2_resin_wr_b;
					$ArrBqDefault['str_n2_resin_wr']			= $getDefVal[0]->str_n2_resin_wr;
					$ArrBqDefault['str_n2_resin_wr_add_a']	= $getDefVal[0]->str_n2_resin_wr_add_a;
					$ArrBqDefault['str_n2_resin_wr_add_b']	= $getDefVal[0]->str_n2_resin_wr_add_b;
					$ArrBqDefault['str_n2_resin_wr_add']		= $getDefVal[0]->str_n2_resin_wr_add;
					$ArrBqDefault['str_n2_faktor_csm']		= $getDefVal[0]->str_n2_faktor_csm;
					$ArrBqDefault['str_n2_faktor_csm_add']	= $getDefVal[0]->str_n2_faktor_csm_add;
					$ArrBqDefault['str_n2_faktor_wr']			= $getDefVal[0]->str_n2_faktor_wr;
					$ArrBqDefault['str_n2_faktor_wr_add']		= $getDefVal[0]->str_n2_faktor_wr_add;
					$ArrBqDefault['str_n2_resin']				= $getDefVal[0]->str_n2_resin;
					$ArrBqDefault['str_n2_resin_thickness']	= $getDefVal[0]->str_n2_resin_thickness;
					$ArrBqDefault['created_by']				= $this->session->userdata['ORI_User']['username'];
					$ArrBqDefault['created_date']				= date('Y-m-d H:i:s');
				}
			}
			
			//Insert Component Header To Hist
			$qHeaderHistDef		= $this->db->query("SELECT * FROM so_component_default WHERE id_bq='".$id_bq."' AND id_milik='".$id_milik."' ")->result_array();
			if(!empty($qHeaderHistDef)){
				foreach($qHeaderHistDef AS $val2HistADef => $valx2HistADef){
					$ArrBqDefaultHist[$val2HistADef]['id_product']				= $valx2HistADef['id_product'];
					$ArrBqDefaultHist[$val2HistADef]['id_milik']				= $valx2HistADef['id_milik'];
					$ArrBqDefaultHist[$val2HistADef]['id_bq']					= $valx2HistADef['id_bq'];
					$ArrBqDefaultHist[$val2HistADef]['product_parent']			= $valx2HistADef['product_parent'];
					$ArrBqDefaultHist[$val2HistADef]['kd_cust']					= $valx2HistADef['kd_cust'];
					$ArrBqDefaultHist[$val2HistADef]['customer']				= $valx2HistADef['customer'];
					$ArrBqDefaultHist[$val2HistADef]['standart_code']			= $valx2HistADef['standart_code'];
					$ArrBqDefaultHist[$val2HistADef]['diameter']				= $valx2HistADef['diameter'];
					$ArrBqDefaultHist[$val2HistADef]['diameter2']				= $valx2HistADef['diameter2'];
					$ArrBqDefaultHist[$val2HistADef]['liner']					= $valx2HistADef['liner'];
					$ArrBqDefaultHist[$val2HistADef]['pn']						= $valx2HistADef['pn'];
					$ArrBqDefaultHist[$val2HistADef]['overlap']					= $valx2HistADef['overlap'];
					$ArrBqDefaultHist[$val2HistADef]['waste']					= $valx2HistADef['waste'];
					$ArrBqDefaultHist[$val2HistADef]['waste_n1']				= $valx2HistADef['waste_n1'];
					$ArrBqDefaultHist[$val2HistADef]['waste_n2']				= $valx2HistADef['waste_n2'];
					$ArrBqDefaultHist[$val2HistADef]['max']						= $valx2HistADef['max'];
					$ArrBqDefaultHist[$val2HistADef]['min']						= $valx2HistADef['min'];
					$ArrBqDefaultHist[$val2HistADef]['plastic_film']			= $valx2HistADef['plastic_film'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil_a']		= $valx2HistADef['lin_resin_veil_a'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil_b']		= $valx2HistADef['lin_resin_veil_b'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil']			= $valx2HistADef['lin_resin_veil'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil_add_a']	= $valx2HistADef['lin_resin_veil_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil_add_b']	= $valx2HistADef['lin_resin_veil_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_veil_add']		= $valx2HistADef['lin_resin_veil_add'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm_a']			= $valx2HistADef['lin_resin_csm_a'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm_b']			= $valx2HistADef['lin_resin_csm_b'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm']			= $valx2HistADef['lin_resin_csm'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm_add_a']		= $valx2HistADef['lin_resin_csm_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm_add_b']		= $valx2HistADef['lin_resin_csm_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_csm_add']		= $valx2HistADef['lin_resin_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['lin_faktor_veil']			= $valx2HistADef['lin_faktor_veil'];
					$ArrBqDefaultHist[$val2HistADef]['lin_faktor_veil_add']		= $valx2HistADef['lin_faktor_veil_add'];
					$ArrBqDefaultHist[$val2HistADef]['lin_faktor_csm']			= $valx2HistADef['lin_faktor_csm'];
					$ArrBqDefaultHist[$val2HistADef]['lin_faktor_csm_add']		= $valx2HistADef['lin_faktor_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin']				= $valx2HistADef['lin_resin'];
					$ArrBqDefaultHist[$val2HistADef]['lin_resin_thickness']		= $valx2HistADef['lin_resin_thickness'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm_a']			= $valx2HistADef['str_resin_csm_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm_b']			= $valx2HistADef['str_resin_csm_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm']			= $valx2HistADef['str_resin_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm_add_a']		= $valx2HistADef['str_resin_csm_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm_add_b']		= $valx2HistADef['str_resin_csm_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_csm_add']		= $valx2HistADef['str_resin_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr_a']			= $valx2HistADef['str_resin_wr_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr_b']			= $valx2HistADef['str_resin_wr_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr']			= $valx2HistADef['str_resin_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr_add_a']		= $valx2HistADef['str_resin_wr_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr_add_b']		= $valx2HistADef['str_resin_wr_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_wr_add']		= $valx2HistADef['str_resin_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv_a']			= $valx2HistADef['str_resin_rv_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv_b']			= $valx2HistADef['str_resin_rv_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv']			= $valx2HistADef['str_resin_rv'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv_add_a']		= $valx2HistADef['str_resin_rv_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv_add_b']		= $valx2HistADef['str_resin_rv_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_rv_add']		= $valx2HistADef['str_resin_rv_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_csm']			= $valx2HistADef['str_faktor_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_csm_add']		= $valx2HistADef['str_faktor_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_wr']			= $valx2HistADef['str_faktor_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_wr_add']		= $valx2HistADef['str_faktor_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv']			= $valx2HistADef['str_faktor_rv'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv_bw']		= $valx2HistADef['str_faktor_rv_bw'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv_jb']		= $valx2HistADef['str_faktor_rv_jb'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv_add']		= $valx2HistADef['str_faktor_rv_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv_add_bw']	= $valx2HistADef['str_faktor_rv_add_bw'];
					$ArrBqDefaultHist[$val2HistADef]['str_faktor_rv_add_jb']	= $valx2HistADef['str_faktor_rv_add_jb'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin']				= $valx2HistADef['str_resin'];
					$ArrBqDefaultHist[$val2HistADef]['str_resin_thickness']		= $valx2HistADef['str_resin_thickness'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil_a']		= $valx2HistADef['eks_resin_veil_a'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil_b']		= $valx2HistADef['eks_resin_veil_b'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil']			= $valx2HistADef['eks_resin_veil'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil_add_a']	= $valx2HistADef['eks_resin_veil_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil_add_b']	= $valx2HistADef['eks_resin_veil_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_veil_add']		= $valx2HistADef['eks_resin_veil_add'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm_a']			= $valx2HistADef['eks_resin_csm_a'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm_b']			= $valx2HistADef['eks_resin_csm_b'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm']			= $valx2HistADef['eks_resin_csm'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm_add_a']		= $valx2HistADef['eks_resin_csm_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm_add_b']		= $valx2HistADef['eks_resin_csm_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_csm_add']		= $valx2HistADef['eks_resin_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['eks_faktor_veil']			= $valx2HistADef['eks_faktor_veil'];
					$ArrBqDefaultHist[$val2HistADef]['eks_faktor_veil_add']		= $valx2HistADef['eks_faktor_veil_add'];
					$ArrBqDefaultHist[$val2HistADef]['eks_faktor_csm']			= $valx2HistADef['eks_faktor_csm'];
					$ArrBqDefaultHist[$val2HistADef]['eks_faktor_csm_add']		= $valx2HistADef['eks_faktor_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin']				= $valx2HistADef['eks_resin'];
					$ArrBqDefaultHist[$val2HistADef]['eks_resin_thickness']		= $valx2HistADef['eks_resin_thickness'];
					$ArrBqDefaultHist[$val2HistADef]['topcoat_resin']			= $valx2HistADef['topcoat_resin'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm_a']		= $valx2HistADef['str_n1_resin_csm_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm_b']		= $valx2HistADef['str_n1_resin_csm_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm']		= $valx2HistADef['str_n1_resin_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm_add_a']	= $valx2HistADef['str_n1_resin_csm_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm_add_b']	= $valx2HistADef['str_n1_resin_csm_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_csm_add']	= $valx2HistADef['str_n1_resin_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr_a']		= $valx2HistADef['str_n1_resin_wr_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr_b']		= $valx2HistADef['str_n1_resin_wr_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr']			= $valx2HistADef['str_n1_resin_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr_add_a']	= $valx2HistADef['str_n1_resin_wr_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr_add_b']	= $valx2HistADef['str_n1_resin_wr_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_wr_add']		= $valx2HistADef['str_n1_resin_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv_a']		= $valx2HistADef['str_n1_resin_rv_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv_b']		= $valx2HistADef['str_n1_resin_rv_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv']			= $valx2HistADef['str_n1_resin_rv'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv_add_a']	= $valx2HistADef['str_n1_resin_rv_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv_add_b']	= $valx2HistADef['str_n1_resin_rv_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_rv_add']		= $valx2HistADef['str_n1_resin_rv_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_csm']		= $valx2HistADef['str_n1_faktor_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_csm_add']	= $valx2HistADef['str_n1_faktor_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_wr']		= $valx2HistADef['str_n1_faktor_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_wr_add']	= $valx2HistADef['str_n1_faktor_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv']		= $valx2HistADef['str_n1_faktor_rv'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv_bw']		= $valx2HistADef['str_n1_faktor_rv_bw'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv_jb']		= $valx2HistADef['str_n1_faktor_rv_jb'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv_add']	= $valx2HistADef['str_n1_faktor_rv_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv_add_bw']	= $valx2HistADef['str_n1_faktor_rv_add_bw'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_faktor_rv_add_jb']	= $valx2HistADef['str_n1_faktor_rv_add_jb'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin']			= $valx2HistADef['str_n1_resin'];
					$ArrBqDefaultHist[$val2HistADef]['str_n1_resin_thickness']	= $valx2HistADef['str_n1_resin_thickness'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm_a']		= $valx2HistADef['str_n2_resin_csm_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm_b']		= $valx2HistADef['str_n2_resin_csm_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm']		= $valx2HistADef['str_n2_resin_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm_add_a']	= $valx2HistADef['str_n2_resin_csm_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm_add_b']	= $valx2HistADef['str_n2_resin_csm_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_csm_add']	= $valx2HistADef['str_n2_resin_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr_a']		= $valx2HistADef['str_n2_resin_wr_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr_b']		= $valx2HistADef['str_n2_resin_wr_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr']			= $valx2HistADef['str_n2_resin_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr_add_a']	= $valx2HistADef['str_n2_resin_wr_add_a'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr_add_b']	= $valx2HistADef['str_n2_resin_wr_add_b'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_wr_add']		= $valx2HistADef['str_n2_resin_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_faktor_csm']		= $valx2HistADef['str_n2_faktor_csm'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_faktor_csm_add']	= $valx2HistADef['str_n2_faktor_csm_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_faktor_wr']		= $valx2HistADef['str_n2_faktor_wr'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_faktor_wr_add']	= $valx2HistADef['str_n2_faktor_wr_add'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin']			= $valx2HistADef['str_n2_resin'];
					$ArrBqDefaultHist[$val2HistADef]['str_n2_resin_thickness']	= $valx2HistADef['str_n2_resin_thickness'];
					$ArrBqDefaultHist[$val2HistADef]['created_by']				= $valx2HistADef['created_by'];
					$ArrBqDefaultHist[$val2HistADef]['created_date']			= $valx2HistADef['created_date'];
					$ArrBqDefaultHist[$val2HistADef]['modified_by']				= $valx2HistADef['modified_by'];
					$ArrBqDefaultHist[$val2HistADef]['modified_date']			= $valx2HistADef['modified_date'];
					$ArrBqDefaultHist[$val2HistADef]['hist_by']					= $this->session->userdata['ORI_User']['username'];
					$ArrBqDefaultHist[$val2HistADef]['hist_date']				= date('Y-m-d H:i:s');
					
					
				}
			}
			//================================================================================================================
			//================================================================================================================
			//================================================================================================================
			
			//Insert Component Header To Hist
			$qHeaderHist	= $this->db->query("SELECT * FROM so_component_header WHERE id_bq='".$id_bq."' AND id_milik='".$id_milik."' ")->result_array();
			if(!empty($qHeaderHist)){
				foreach($qHeaderHist AS $val2HistA => $valx2HistA){
					$ArrBqHeaderHist[$val2HistA]['id_product']			= $valx2HistA['id_product'];
					$ArrBqHeaderHist[$val2HistA]['id_milik']			= $valx2HistA['id_milik'];
					$ArrBqHeaderHist[$val2HistA]['id_bq']				= $valx2HistA['id_bq'];
					$ArrBqHeaderHist[$val2HistA]['parent_product']		= $valx2HistA['parent_product'];
					$ArrBqHeaderHist[$val2HistA]['nm_product']			= $valx2HistA['nm_product'];
					$ArrBqHeaderHist[$val2HistA]['series']				= $valx2HistA['series'];
					$ArrBqHeaderHist[$val2HistA]['resin_sistem']		= $valx2HistA['resin_sistem'];
					$ArrBqHeaderHist[$val2HistA]['pressure']			= $valx2HistA['pressure'];
					$ArrBqHeaderHist[$val2HistA]['diameter']			= $valx2HistA['diameter'];
					$ArrBqHeaderHist[$val2HistA]['liner']				= $valx2HistA['liner'];
					$ArrBqHeaderHist[$val2HistA]['aplikasi_product']	= $valx2HistA['aplikasi_product'];
					$ArrBqHeaderHist[$val2HistA]['criminal_barier']		= $valx2HistA['criminal_barier'];
					$ArrBqHeaderHist[$val2HistA]['vacum_rate']			= $valx2HistA['vacum_rate'];
					$ArrBqHeaderHist[$val2HistA]['stiffness']			= $valx2HistA['stiffness'];
					$ArrBqHeaderHist[$val2HistA]['design_life']			= $valx2HistA['design_life'];
					$ArrBqHeaderHist[$val2HistA]['standart_by']			= $valx2HistA['standart_by'];
					$ArrBqHeaderHist[$val2HistA]['standart_toleransi']	= $valx2HistA['standart_toleransi'];
					$ArrBqHeaderHist[$val2HistA]['diameter2']			= $valx2HistA['diameter2'];
					$ArrBqHeaderHist[$val2HistA]['panjang']				= $valx2HistA['panjang'];
					$ArrBqHeaderHist[$val2HistA]['radius']				= $valx2HistA['radius'];
					$ArrBqHeaderHist[$val2HistA]['type_elbow']			= $valx2HistA['type_elbow'];
					$ArrBqHeaderHist[$val2HistA]['angle']				= $valx2HistA['angle'];
					$ArrBqHeaderHist[$val2HistA]['design']				= $valx2HistA['design'];
					$ArrBqHeaderHist[$val2HistA]['est']					= $valx2HistA['est'];
					$ArrBqHeaderHist[$val2HistA]['min_toleransi']		= $valx2HistA['min_toleransi'];
					$ArrBqHeaderHist[$val2HistA]['max_toleransi']		= $valx2HistA['max_toleransi'];
					$ArrBqHeaderHist[$val2HistA]['waste']				= $valx2HistA['waste'];
					$ArrBqHeaderHist[$val2HistA]['area']				= $valx2HistA['area'];
					$ArrBqHeaderHist[$val2HistA]['wrap_length']			= $valx2HistA['wrap_length'];
					$ArrBqHeaderHist[$val2HistA]['wrap_length2']		= $valx2HistA['wrap_length2'];
					$ArrBqHeaderHist[$val2HistA]['high']				= $valx2HistA['high'];
					$ArrBqHeaderHist[$val2HistA]['area2']				= $valx2HistA['area2'];
					$ArrBqHeaderHist[$val2HistA]['panjang_neck_1']		= $valx2HistA['panjang_neck_1'];
					$ArrBqHeaderHist[$val2HistA]['panjang_neck_2']		= $valx2HistA['panjang_neck_2'];
					$ArrBqHeaderHist[$val2HistA]['design_neck_1']		= $valx2HistA['design_neck_1'];
					$ArrBqHeaderHist[$val2HistA]['design_neck_2']		= $valx2HistA['design_neck_2'];
					$ArrBqHeaderHist[$val2HistA]['est_neck_1']			= $valx2HistA['est_neck_1'];
					$ArrBqHeaderHist[$val2HistA]['est_neck_2']			= $valx2HistA['est_neck_2'];
					$ArrBqHeaderHist[$val2HistA]['area_neck_1']			= $valx2HistA['area_neck_1'];
					$ArrBqHeaderHist[$val2HistA]['area_neck_2']			= $valx2HistA['area_neck_2'];
					$ArrBqHeaderHist[$val2HistA]['flange_od']			= $valx2HistA['flange_od'];
					$ArrBqHeaderHist[$val2HistA]['flange_bcd']			= $valx2HistA['flange_bcd'];
					$ArrBqHeaderHist[$val2HistA]['flange_n']			= $valx2HistA['flange_n'];
					$ArrBqHeaderHist[$val2HistA]['flange_oh']			= $valx2HistA['flange_oh'];
					$ArrBqHeaderHist[$val2HistA]['rev']					= $valx2HistA['rev'];
					$ArrBqHeaderHist[$val2HistA]['status']				= $valx2HistA['status'];
					$ArrBqHeaderHist[$val2HistA]['approve_by']			= $valx2HistA['approve_by'];
					$ArrBqHeaderHist[$val2HistA]['approve_date']		= $valx2HistA['approve_date'];
					$ArrBqHeaderHist[$val2HistA]['approve_reason']		= $valx2HistA['approve_reason'];
					$ArrBqHeaderHist[$val2HistA]['sts_price']			= $valx2HistA['sts_price'];
					$ArrBqHeaderHist[$val2HistA]['sts_price_by']		= $valx2HistA['sts_price_by'];
					$ArrBqHeaderHist[$val2HistA]['sts_price_date']		= $valx2HistA['sts_price_date'];
					$ArrBqHeaderHist[$val2HistA]['sts_price_reason']	= $valx2HistA['sts_price_reason'];
					$ArrBqHeaderHist[$val2HistA]['created_by']			= $valx2HistA['created_by'];
					$ArrBqHeaderHist[$val2HistA]['created_date']		= $valx2HistA['created_date'];
					$ArrBqHeaderHist[$val2HistA]['deleted']				= $valx2HistA['deleted'];
					$ArrBqHeaderHist[$val2HistA]['deleted_by']			= $valx2HistA['deleted_by'];
					$ArrBqHeaderHist[$val2HistA]['deleted_date']		= $valx2HistA['deleted_date'];
					$ArrBqHeaderHist[$val2HistA]['hist_by']				= $this->session->userdata['ORI_User']['username'];
					$ArrBqHeaderHist[$val2HistA]['hist_date']			= date('Y-m-d H:i:s');
					
				}
			}

			//Component Detail
			$qDetail	= $this->db->query("SELECT a.* FROM bq_component_detail a WHERE a.id_product='".$product."' AND a.id_milik='".$id_milik_bq."' ")->result_array();
			foreach($qDetail AS $val2 => $valx2){
				$LoopDetail++;
				$ArrBqDetail[$LoopDetail]['id_product']		= $product;
				$ArrBqDetail[$LoopDetail]['id_bq']			= $id_bq;
				$ArrBqDetail[$LoopDetail]['id_milik']		= $id_milik;
				$ArrBqDetail[$LoopDetail]['detail_name']	= $valx2['detail_name'];
				$ArrBqDetail[$LoopDetail]['acuhan']			= $valx2['acuhan'];
				$ArrBqDetail[$LoopDetail]['id_ori']			= $valx2['id_ori'];
				$ArrBqDetail[$LoopDetail]['id_ori2']		= $valx2['id_ori2'];
				$ArrBqDetail[$LoopDetail]['id_category']	= $valx2['id_category'];
				$ArrBqDetail[$LoopDetail]['nm_category']	= $valx2['nm_category'];
				$ArrBqDetail[$LoopDetail]['id_material']	= $valx2['id_material'];
				$ArrBqDetail[$LoopDetail]['nm_material']	= $valx2['nm_material'];
				$ArrBqDetail[$LoopDetail]['value']			= $valx2['value'];
				$ArrBqDetail[$LoopDetail]['thickness']		= $valx2['thickness'];
				$ArrBqDetail[$LoopDetail]['fak_pengali']	= $valx2['fak_pengali'];
				$ArrBqDetail[$LoopDetail]['bw']				= $valx2['bw'];
				$ArrBqDetail[$LoopDetail]['jumlah']			= $valx2['jumlah'];
				$ArrBqDetail[$LoopDetail]['layer']			= $valx2['layer'];
				$ArrBqDetail[$LoopDetail]['containing']		= $valx2['containing'];
				$ArrBqDetail[$LoopDetail]['total_thickness']	= $valx2['total_thickness'];
				if ($qHeader[0]->parent_product == 'branch joint' OR $qHeader[0]->parent_product == 'field joint' OR $qHeader[0]->parent_product == 'shop joint') {
					$ArrBqDetail[$LoopDetail]['last_cost']	= $valx2['material_weight'];
				}
				else{
					$ArrBqDetail[$LoopDetail]['last_cost']	= $valx2['last_cost'];
				}
				$ArrBqDetail[$LoopDetail]['rev']				= $qHeader[0]->rev;
				//
				$ArrBqDetail[$LoopDetail]['area_weight']		= $valx2['area_weight'];
				$ArrBqDetail[$LoopDetail]['material_weight']	= $valx2['material_weight'];
				$ArrBqDetail[$LoopDetail]['percentage']			= $valx2['percentage'];
				$ArrBqDetail[$LoopDetail]['resin_content']		= $valx2['resin_content'];

				$ArrBqDetail[$LoopDetail]['price_mat']		= $valx2['price_mat'];
			}

			//Component Lamination
			$qDetailLam	= $this->db->query("SELECT * FROM bq_component_lamination WHERE id_product='".$product."' AND id_milik='".$id_milik_bq."' ")->result_array();
			foreach($qDetailLam AS $val2 => $valx2){
				$LoopDetailLam++;
				$ArrBqDetailLam[$LoopDetailLam]['id_product']	= $product;
				$ArrBqDetailLam[$LoopDetailLam]['id_bq']		= $id_bq;
				$ArrBqDetailLam[$LoopDetailLam]['id_milik']		= $id_milik;
				$ArrBqDetailLam[$LoopDetailLam]['detail_name']	= $valx2['detail_name'];
				$ArrBqDetailLam[$LoopDetailLam]['lapisan']		= $valx2['lapisan'];
				$ArrBqDetailLam[$LoopDetailLam]['std_glass']	= $valx2['std_glass'];
				$ArrBqDetailLam[$LoopDetailLam]['width']		= $valx2['width'];
				$ArrBqDetailLam[$LoopDetailLam]['stage']		= $valx2['stage'];
				$ArrBqDetailLam[$LoopDetailLam]['glass']		= $valx2['glass'];
				$ArrBqDetailLam[$LoopDetailLam]['thickness_1']	= $valx2['thickness_1'];
				$ArrBqDetailLam[$LoopDetailLam]['thickness_2']	= $valx2['thickness_2'];
				$ArrBqDetailLam[$LoopDetailLam]['glass_length']	= $valx2['glass_length'];
				$ArrBqDetailLam[$LoopDetailLam]['weight_veil']	= $valx2['weight_veil'];
				$ArrBqDetailLam[$LoopDetailLam]['weight_csm']	= $valx2['weight_csm'];
				$ArrBqDetailLam[$LoopDetailLam]['weight_wr']	= $valx2['weight_wr'];
			}

			//Insert Component Detail To Hist
			$qDetailHist	= $this->db->query("SELECT * FROM so_component_detail WHERE id_bq='".$id_bq."' AND id_milik='".$id_milik."' ")->result_array();
			if(!empty($qDetailHist)){
				foreach($qDetailHist AS $val2Hist => $valx2Hist){
					$ArrBqDetailHist[$val2Hist]['id_product']		= $valx2Hist['id_product'];
					$ArrBqDetailHist[$val2Hist]['id_bq']			= $valx2Hist['id_bq'];
					$ArrBqDetailHist[$val2Hist]['id_milik']			= $valx2Hist['id_milik'];
					$ArrBqDetailHist[$val2Hist]['detail_name']		= $valx2Hist['detail_name'];
					$ArrBqDetailHist[$val2Hist]['acuhan']			= $valx2Hist['acuhan'];
					$ArrBqDetailHist[$val2Hist]['id_ori']			= $valx2Hist['id_ori'];
					$ArrBqDetailHist[$val2Hist]['id_ori2']			= $valx2Hist['id_ori2'];
					$ArrBqDetailHist[$val2Hist]['id_category']		= $valx2Hist['id_category'];
					$ArrBqDetailHist[$val2Hist]['nm_category']		= $valx2Hist['nm_category'];
					$ArrBqDetailHist[$val2Hist]['id_material']		= $valx2Hist['id_material'];
					$ArrBqDetailHist[$val2Hist]['nm_material']		= $valx2Hist['nm_material'];
					$ArrBqDetailHist[$val2Hist]['value']			= $valx2Hist['value'];
					$ArrBqDetailHist[$val2Hist]['thickness']		= $valx2Hist['thickness'];
					$ArrBqDetailHist[$val2Hist]['fak_pengali']		= $valx2Hist['fak_pengali'];
					$ArrBqDetailHist[$val2Hist]['bw']				= $valx2Hist['bw'];
					$ArrBqDetailHist[$val2Hist]['jumlah']			= $valx2Hist['jumlah'];
					$ArrBqDetailHist[$val2Hist]['layer']			= $valx2Hist['layer'];
					$ArrBqDetailHist[$val2Hist]['containing']		= $valx2Hist['containing'];
					$ArrBqDetailHist[$val2Hist]['total_thickness']	= $valx2Hist['total_thickness'];
					$ArrBqDetailHist[$val2Hist]['last_cost']		= $valx2Hist['last_cost'];
					$ArrBqDetailHist[$val2Hist]['rev']				= $valx2Hist['rev'];
					$ArrBqDetailHist[$val2Hist]['price_mat']		= $valx2Hist['price_mat'];
					$ArrBqDetailHist[$val2Hist]['hist_by']			= $this->session->userdata['ORI_User']['username'];
					$ArrBqDetailHist[$val2Hist]['hist_date']		= date('Y-m-d H:i:s');
				}
			}

			//Component Detail Plus
			$qDetailPlus	= $this->db->query("SELECT a.* FROM bq_component_detail_plus a WHERE a.id_product='".$product."' AND a.id_milik='".$id_milik_bq."' ")->result_array();
			foreach($qDetailPlus AS $val3 => $valx3){
				$LoopDetailPlus++;
				$ArrBqDetailPlus[$LoopDetailPlus]['id_product']		= $product;
				$ArrBqDetailPlus[$LoopDetailPlus]['id_bq']			= $id_bq;
				$ArrBqDetailPlus[$LoopDetailPlus]['id_milik']		= $id_milik;
				$ArrBqDetailPlus[$LoopDetailPlus]['detail_name']	= $valx3['detail_name'];
				$ArrBqDetailPlus[$LoopDetailPlus]['id_ori']			= $valx3['id_ori'];
				$ArrBqDetailPlus[$LoopDetailPlus]['id_ori2']		= $valx3['id_ori2'];
				$ArrBqDetailPlus[$LoopDetailPlus]['id_category']	= $valx3['id_category'];
				$ArrBqDetailPlus[$LoopDetailPlus]['nm_category']	= $valx3['nm_category'];
				$ArrBqDetailPlus[$LoopDetailPlus]['id_material']	= $valx3['id_material'];
				$ArrBqDetailPlus[$LoopDetailPlus]['nm_material']	= $valx3['nm_material'];
				$ArrBqDetailPlus[$LoopDetailPlus]['containing']		= $valx3['containing'];
				$ArrBqDetailPlus[$LoopDetailPlus]['perse']			= $valx3['perse'];
				$ArrBqDetailPlus[$LoopDetailPlus]['last_full']		= $valx3['last_full'];
				$ArrBqDetailPlus[$LoopDetailPlus]['last_cost']		= $valx3['last_cost'];
				$ArrBqDetailPlus[$LoopDetailPlus]['rev']			= $qHeader[0]->rev;
				$ArrBqDetailPlus[$LoopDetailPlus]['price_mat']		= $valx3['price_mat'];
			}

			//Insert Component Detail Plus To Hist
			$qDetailPlusHist	= $this->db->query("SELECT * FROM so_component_detail_plus WHERE id_bq='".$id_bq."' AND id_milik='".$id_milik."' ")->result_array();
			if(!empty($qDetailPlusHist)){
				foreach($qDetailPlusHist AS $val3Hist => $valx3Hist){
					$ArrBqDetailPlusHist[$val3Hist]['id_product']	= $valx3Hist['id_product'];
					$ArrBqDetailPlusHist[$val3Hist]['id_bq']		= $valx3Hist['id_bq'];
					$ArrBqDetailPlusHist[$val3Hist]['id_milik']		= $valx3Hist['id_milik'];
					$ArrBqDetailPlusHist[$val3Hist]['detail_name']	= $valx3Hist['detail_name'];
					$ArrBqDetailPlusHist[$val3Hist]['id_ori']		= $valx3Hist['id_ori'];
					$ArrBqDetailPlusHist[$val3Hist]['id_ori2']		= $valx3Hist['id_ori2'];
					$ArrBqDetailPlusHist[$val3Hist]['id_category']	= $valx3Hist['id_category'];
					$ArrBqDetailPlusHist[$val3Hist]['nm_category']	= $valx3Hist['nm_category'];
					$ArrBqDetailPlusHist[$val3Hist]['id_material']	= $valx3Hist['id_material'];
					$ArrBqDetailPlusHist[$val3Hist]['nm_material']	= $valx3Hist['nm_material'];
					$ArrBqDetailPlusHist[$val3Hist]['containing']	= $valx3Hist['containing'];
					$ArrBqDetailPlusHist[$val3Hist]['perse']		= $valx3Hist['perse'];
					$ArrBqDetailPlusHist[$val3Hist]['last_full']	= $valx3Hist['last_full'];
					$ArrBqDetailPlusHist[$val3Hist]['last_cost']	= $valx3Hist['last_cost'];
					$ArrBqDetailPlusHist[$val3Hist]['rev']			= $valx3Hist['rev'];
					$ArrBqDetailPlusHist[$val3Hist]['price_mat']	= $valx3Hist['price_mat'];
					$ArrBqDetailPlusHist[$val3Hist]['hist_by']		= $this->session->userdata['ORI_User']['username'];
					$ArrBqDetailPlusHist[$val3Hist]['hist_date']	= date('Y-m-d H:i:s');
				}
			}

			//Component Detail Add
			$qDetailAdd		= $this->db->query("SELECT a.* FROM bq_component_detail_add a WHERE a.id_product='".$product."' AND a.id_milik='".$id_milik_bq."' ")->result_array();
			if(!empty($qDetailAdd)){
				foreach($qDetailAdd AS $val4 => $valx4){
					$LoopDetailAdd++;
					$ArrBqDetailAdd[$LoopDetailAdd]['id_product']		= $product;
					$ArrBqDetailAdd[$LoopDetailAdd]['id_bq']			= $id_bq;
					$ArrBqDetailAdd[$LoopDetailAdd]['id_milik']			= $id_milik;
					$ArrBqDetailAdd[$LoopDetailAdd]['detail_name']		= $valx4['detail_name'];
					$ArrBqDetailAdd[$LoopDetailAdd]['id_category']		= $valx4['id_category'];
					$ArrBqDetailAdd[$LoopDetailAdd]['nm_category']		= $valx4['nm_category'];
					$ArrBqDetailAdd[$LoopDetailAdd]['id_material']		= $valx4['id_material'];
					$ArrBqDetailAdd[$LoopDetailAdd]['nm_material']		= $valx4['nm_material'];
					$ArrBqDetailAdd[$LoopDetailAdd]['containing']		= $valx4['containing'];
					$ArrBqDetailAdd[$LoopDetailAdd]['perse']			= $valx4['perse'];
					$ArrBqDetailAdd[$LoopDetailAdd]['last_full']	= $valx4['last_full'];
					$ArrBqDetailAdd[$LoopDetailAdd]['last_cost']	= $valx4['last_cost'];
					$ArrBqDetailAdd[$LoopDetailAdd]['rev']				= $qHeader[0]->rev;
					$ArrBqDetailAdd[$LoopDetailAdd]['price_mat']	= $valx4['price_mat'];
				}
			}

			//Insert Component Detail Add To Hist
			$qDetailAddHist		= $this->db->query("SELECT * FROM so_component_detail_add WHERE id_bq='".$id_bq."' AND id_milik='".$id_milik."' ")->result_array();
			if(!empty($qDetailAddHist)){
				foreach($qDetailAddHist AS $val4Hist => $valx4Hist){
					$ArrBqDetailAddHist[$val4Hist]['id_product']	= $valx4Hist['id_product'];
					$ArrBqDetailAddHist[$val4Hist]['id_bq']			= $valx4Hist['id_bq'];
					$ArrBqDetailAddHist[$val4Hist]['id_milik']		= $valx4Hist['id_milik'];
					$ArrBqDetailAddHist[$val4Hist]['detail_name']	= $valx4Hist['detail_name'];
					$ArrBqDetailAddHist[$val4Hist]['id_category']	= $valx4Hist['id_category'];
					$ArrBqDetailAddHist[$val4Hist]['nm_category']	= $valx4Hist['nm_category'];
					$ArrBqDetailAddHist[$val4Hist]['id_material']	= $valx4Hist['id_material'];
					$ArrBqDetailAddHist[$val4Hist]['nm_material']	= $valx4Hist['nm_material'];
					$ArrBqDetailAddHist[$val4Hist]['containing']	= $valx4Hist['containing'];
					$ArrBqDetailAddHist[$val4Hist]['perse']			= $valx4Hist['perse'];
					$ArrBqDetailAddHist[$val4Hist]['last_full']		= $valx4Hist['last_full'];
					$ArrBqDetailAddHist[$val4Hist]['last_cost']		= $valx4Hist['last_cost'];
					$ArrBqDetailAddHist[$val4Hist]['rev']			= $valx4Hist['rev'];
					$ArrBqDetailAddHist[$val4Hist]['price_mat']		= $valx4Hist['price_mat'];
					$ArrBqDetailAddHist[$val4Hist]['hist_by']		= $this->session->userdata['ORI_User']['username'];
					$ArrBqDetailAddHist[$val4Hist]['hist_date']		= date('Y-m-d H:i:s');
				}
			}

			//Component Footer
			$qDetailFooter	= $this->db->query("SELECT * FROM bq_component_footer WHERE id_product='".$product."' AND id_milik='".$id_milik_bq."' ")->result_array();
			if (count($qDetailFooter)>0)
			{
				foreach($qDetailFooter AS $val5 => $valx5){
					$LoopFooter++;
					$ArrBqFooter[$LoopFooter]['id_product']		= $product;
					$ArrBqFooter[$LoopFooter]['id_bq']			= $id_bq;
					$ArrBqFooter[$LoopFooter]['id_milik']		= $id_milik;
					$ArrBqFooter[$LoopFooter]['detail_name']	= $valx5['detail_name'];
					$ArrBqFooter[$LoopFooter]['total']			= $valx5['total'];
					$ArrBqFooter[$LoopFooter]['min']			= $valx5['min'];
					$ArrBqFooter[$LoopFooter]['max']			= $valx5['max'];
					$ArrBqFooter[$LoopFooter]['hasil']			= $valx5['hasil'];
					$ArrBqFooter[$LoopFooter]['rev']			= $qHeader[0]->rev;
				}
			}
			//Insert Component Footer To Hist
			$qDetailFooterHist		= $this->db->query("SELECT * FROM so_component_footer WHERE id_bq='".$id_bq."' AND id_milik='".$id_milik."' ")->result_array();
			if(!empty($qDetailFooterHist)){
				foreach($qDetailFooterHist AS $val5Hist => $valx5Hist){
					$ArrBqFooterHist[$val5Hist]['id_product']	= $valx5Hist['id_product'];
					$ArrBqFooterHist[$val5Hist]['id_bq']		= $valx5Hist['id_bq'];
					$ArrBqFooterHist[$val5Hist]['id_milik']		= $valx5Hist['id_milik'];
					$ArrBqFooterHist[$val5Hist]['detail_name']	= $valx5Hist['detail_name'];
					$ArrBqFooterHist[$val5Hist]['total']		= $valx5Hist['total'];
					$ArrBqFooterHist[$val5Hist]['min']			= $valx5Hist['min'];
					$ArrBqFooterHist[$val5Hist]['max']			= $valx5Hist['max'];
					$ArrBqFooterHist[$val5Hist]['hasil']		= $valx5Hist['hasil'];
					$ArrBqFooterHist[$val5Hist]['rev']			= $valx5Hist['rev'];
					$ArrBqFooterHist[$val5Hist]['hist_by']		= $this->session->userdata['ORI_User']['username'];
					$ArrBqFooterHist[$val5Hist]['hist_date']	= date('Y-m-d H:i:s');
				}
			}
		

		// print_r($ArrBqHeader);
		// print_r($ArrBqDefault);
		// echo "</pre>";
		// exit;

		$UpdateBQ	= array(
			'estimasi'	=> 'Y',
			'est_by'	=> $this->session->userdata['ORI_User']['username'],
			'est_date'	=> date('Y-m-d H:i:s')
		);
		
		$ArrDetBq2	= array(
			'id_product'	=> $product
		);

		$this->db->trans_start();
			$this->db->where('id', $id_milik);
			$this->db->update('so_detail_header', $ArrDetBq2);

			//Insert Batch Histories
			if(!empty($ArrBqHeaderHist)){
				$this->db->insert_batch('hist_so_component_header', $ArrBqHeaderHist);
			}
			if(!empty($ArrBqDetailHist)){
				$this->db->insert_batch('hist_so_component_detail', $ArrBqDetailHist);
			}
			if(!empty($ArrBqDetailPlusHist)){
				$this->db->insert_batch('hist_so_component_detail_plus', $ArrBqDetailPlusHist);
			}
			if(!empty($ArrBqDetailAddHist)){
				$this->db->insert_batch('hist_so_component_detail_add', $ArrBqDetailAddHist);
			}
			if(count($ArrBqFooterHist)>0){
				$this->db->insert_batch('hist_so_component_footer', $ArrBqFooterHist);
			}
			if(!empty($ArrBqDefaultHist)){
				$this->db->insert_batch('hist_so_component_default', $ArrBqDefaultHist);
			}

			//Delete BQ Component
			$this->db->delete('so_component_header', array('id_bq' => $id_bq, 'id_milik' => $id_milik));
			$this->db->delete('so_component_detail', array('id_bq' => $id_bq, 'id_milik' => $id_milik));
			$this->db->delete('so_component_lamination', array('id_bq' => $id_bq, 'id_milik' => $id_milik));
			$this->db->delete('so_component_detail_plus', array('id_bq' => $id_bq, 'id_milik' => $id_milik));
			$this->db->delete('so_component_detail_add', array('id_bq' => $id_bq, 'id_milik' => $id_milik));
			$this->db->delete('so_component_footer', array('id_bq' => $id_bq, 'id_milik' => $id_milik));
			$this->db->delete('so_component_default', array('id_bq' => $id_bq, 'id_milik' => $id_milik));

			//Insert BQ Component
			if(!empty($ArrBqHeader)){
				$this->db->insert('so_component_header', $ArrBqHeader);
			}
			if(!empty($ArrBqDetail)){
				$this->db->insert_batch('so_component_detail', $ArrBqDetail);
			}
			if(!empty($ArrBqDetailLam)){
				$this->db->insert_batch('so_component_lamination', $ArrBqDetailLam);
			}
			if(!empty($ArrBqDetailPlus)){
				$this->db->insert_batch('so_component_detail_plus', $ArrBqDetailPlus);
			}
			if(!empty($ArrBqDetailAdd)){
				$this->db->insert_batch('so_component_detail_add', $ArrBqDetailAdd);
			}
			if(!empty($ArrBqFooter)){
				$this->db->insert_batch('so_component_footer', $ArrBqFooter);
			}
			if(!empty($ArrBqDefault)){
				$this->db->insert('so_component_default', $ArrBqDefault);
			}

			$this->db->where('id_bq', $id_bq);
			$this->db->update('so_header', $UpdateBQ);

		$this->db->trans_complete();

		if($this->db->trans_status() === FALSE){
			$this->db->trans_rollback();
			$Arr_Kembali	= array(
				'pesan'		=>'Estimation structure bq data failed. Please try again later ...',
				'status'	=> 0
			);
		}
		else{
			$this->db->trans_commit();
			$Arr_Kembali	= array(
				'id_bqx'	=> $id_bq,
				'pesan'		=>'Estimation structure bq data success. Thanks ...',
				'status'	=> 1
			);
			history('Estimation Sebagian Structure BQ (Tarik dari Est Sebelumnya) in Final Drawing with code : '.$id_bq.' / '.$id_milik.' / '.$product);
		}

		echo json_encode($Arr_Kembali);
	}
	
	public function ajukanAppFD(){
		$id_bq 		= $this->uri->segment(3);
		$Imp			= explode('-', $id_bq);
		$data_session	= $this->session->userdata;
		
		$Arr_Edit	= array(
			'aju_approved_est' => 'Y',
			'aju_approved_est_by' => $data_session['ORI_User']['username'],
			'aju_approved_est_date' => date('Y-m-d H:i:s')
		);
		
		$Arr_Edit2	= array(
			'status' => 'WAITING APPROVE FINAL DRAWING'
		);
		// print_r($ArrDetalHd); 
		// exit;
		$this->db->trans_start();
			$this->db->where('no_ipp', $Imp[1]);
			$this->db->update('production', $Arr_Edit2);
				
			$this->db->where('id_bq', $id_bq);
			$this->db->update('so_header', $Arr_Edit);
			
		$this->db->trans_complete();
		
		if($this->db->trans_status() === FALSE){
			$this->db->trans_rollback();
			$Arr_Data	= array(
				'pesan'		=>'Process failed. Please try again later ...',
				'status'	=> 0
			);			
		}
		else{
			$this->db->trans_commit();
			$Arr_Data	= array(
				'pesan'		=>'Process success. Thanks ...',
				'status'	=> 1
			);	
			history('Mengajukan Final Drawing : '.$id_bq);
			
		}
		echo json_encode($Arr_Data);
	}
	
	public function getDataJSONAppFD(){ 
		$controller			= ucfirst(strtolower($this->uri->segment(1)))."/approve";
		$Arr_Akses			= getAcccesmenu($controller);

		$requestData	= $_REQUEST;
		$fetch			= $this->queryDataJSONAppFD(
			$requestData['search']['value'],
			$requestData['order'][0]['column'],
			$requestData['order'][0]['dir'],
			$requestData['start'],
			$requestData['length']
		);
		$totalData		= $fetch['totalData'];
		$totalFiltered	= $fetch['totalFiltered'];
		$query			= $fetch['query'];

		$data	= array();
		$urut1  = 1;
        $urut2  = 0;
		foreach($query->result_array() as $row)
		{
			$total_data     = $totalData;
            $start_dari     = $requestData['start'];
            $asc_desc       = $requestData['order'][0]['dir'];
            if($asc_desc == 'asc')
            {
                $nomor = $urut1 + $start_dari;
            }
            if($asc_desc == 'desc')
            {
                $nomor = ($total_data - $start_dari) - $urut2;
            }

			$nestedData 	= array();
			$nestedData[]	= "<div align='center'>".$nomor."</div>";
			$nestedData[]	= "<div align='center'>".$row['id_bq']."</div>";
			$nestedData[]	= "<div align='left'>".$row['nm_customer']."</div>";
			$nestedData[]	= "<div align='left'>".strtoupper(strtolower($row['project']))."</div>";
				$ListBQipp		= $this->db->query("SELECT series  FROM bq_detail_header WHERE id_bq = '".$row['id_bq']."' GROUP BY series")->result_array();
				$dtListArray = array();
				foreach($ListBQipp AS $val => $valx){
					$dtListArray[$val] = $valx['series'];
				}
				$dtImplode	= "".implode(", ", $dtListArray)."";
			$nestedData[]	= "<div align='left'>".$dtImplode."</div>";
			$nestedData[]	= "<div align='center'><span class='badge bg-green'>".strtoupper(strtolower($row['rev']))."</span></div>";
			$nestedData[]	= "<div align='right' style='margin-right:15px;'>".number_format($row['sum_sales_order'],2)."</div>";
			$nestedData[]	= "<div align='right' style='margin-right:15px;'>".number_format($row['sum_final_drawing'],2)."</div>";
			
				$warna = Color_status($row['status']);
				
			$nestedData[]	= "<div align='left'><span class='badge' style='background-color:".$warna."'>".$row['status']."</span></div>";
					$ApprvX	= "";
					$Print	= "";
					if($row['status'] == 'WAITING APPROVE FINAL DRAWING'){
						if($Arr_Akses['approve']=='1'){
							$ApprvX	= "&nbsp;<button type='button' class='btn btn-sm btn-success AppFinalDrawing' title='Approve Final Drawing' data-id_bq='".$row['id_bq']."'><i class='fa fa-check'></i></button>";
						}
					}
					$Print	= "&nbsp;<button type='button' class='btn btn-sm btn-info download_excel' title='Download Data' data-id_bq='".$row['id_bq']."'><i class='fa fa-file-excel-o'></i></button>";
					

			$nestedData[]	= "<div align='left'>
									<button type='button' class='btn btn-sm btn-warning detailSO' title='Detail Sales Order' data-id_bq='".$row['id_bq']."'><i class='fa fa-eye'></i></button>
									&nbsp;<button type='button' class='btn btn-sm btn-primary detailFD' title='Detail Final Drawing' data-id_bq='".$row['id_bq']."'><i class='fa fa-eye'></i></button>
									
									".$ApprvX."
									".$Print."
									</div>";
			$data[] = $nestedData;
            $urut1++;
            $urut2++;
		}

		$json_data = array(
			"draw"            	=> intval( $requestData['draw'] ),
			"recordsTotal"    	=> intval( $totalData ),
			"recordsFiltered" 	=> intval( $totalFiltered ),
			"data"            	=> $data
		);

		echo json_encode($json_data);
	}

	public function queryDataJSONAppFD($like_value = NULL, $column_order = NULL, $column_dir = NULL, $limit_start = NULL, $limit_length = NULL){

		$sql = "
			SELECT
				a.*
			FROM
				table_final_drawing a
		   WHERE 1=1 AND a.aju_approved_est = 'Y' AND a.approved_est = 'N'
			AND (
				a.no_ipp LIKE '%".$this->db->escape_like_str($like_value)."%'
				OR a.id_bq LIKE '%".$this->db->escape_like_str($like_value)."%'
				OR a.nm_customer LIKE '%".$this->db->escape_like_str($like_value)."%'
	        )
		";
		// echo $sql; exit;

		$data['totalData'] = $this->db->query($sql)->num_rows();
		$data['totalFiltered'] = $this->db->query($sql)->num_rows();
		$columns_order_by = array(
			0 => 'nomor',
			1 => 'id_bq',
			2 => 'nm_customer'
		);

		$sql .= " ORDER BY ".$columns_order_by[$column_order]." ".$column_dir." ";
		$sql .= " LIMIT ".$limit_start." ,".$limit_length." ";

		$data['query'] = $this->db->query($sql);
		return $data;
	}
	
	public function modalAppFD(){
		$this->load->view('FinalDrawing/approve_modal');
	}
	
	public function AppBQFDEstNew(){
		$id_bq 			= $this->uri->segment(3);
		$data_session	= $this->session->userdata;
		
		$status		= $this->input->post('status');
		$reason		= $this->input->post('approve_reason');
		
		$Imp			= explode('-', $id_bq);
		
		$checkPro 	= "SELECT * FROM production_header WHERE no_ipp='".$Imp[1]."'";
		$numPro 	= $this->db->query($checkPro)->num_rows();
		// echo $numPro; exit;
		if($numPro < 1){
			if($status == 'Y'){
				$Arr_Edit	= array(
					'approved_est' 		=> 'Y',
					'approved_est_by' 	=> $data_session['ORI_User']['username'],
					'approved_est_date' => date('Y-m-d H:i:s')
				);
				
				$Arr_Edit2	= array(
					'status' => 'WAITING PRODUCTION',
					'quo_reason' => $reason,
					'quo_by' => $data_session['ORI_User']['username'],
					'quo_date' => date('Y-m-d H:i:s')
				);
				$HistReason	= 'Approve Final Drawing with BQ : '.$id_bq;
				
				//save to production
				$ArrInsertPro = array(
					'id_produksi' => "PRO-".$Imp[1],
					'no_ipp' => $Imp[1],
					'jalur' => 'FD',
					'so_number' => "SO-".$Imp[1],
					'created_by' => $data_session['ORI_User']['username'],
					'created_date' => date('Y-m-d H:i:s')
				);
			
				$qDet_Gt	= "SELECT a.*, b.id AS id_milik , b.id_product AS id_product FROM so_detail_detail a INNER JOIN so_detail_header b ON a.id_bq_header = b.id_bq_header  WHERE a.id_bq = '".$id_bq."' ";
				$restBq		= $this->db->query($qDet_Gt)->result_array();
				 
				$ArrDetalPro = array();
				foreach($restBq AS $val => $valx){
					$ArrDetalPro[$val]['id_milik'] 		= $valx['id_milik']; 
					$ArrDetalPro[$val]['id_produksi'] 	= "PRO-".$Imp[1];
					$ArrDetalPro[$val]['id_delivery'] 	= $valx['id_delivery'];
					$ArrDetalPro[$val]['sts_delivery'] 	= $valx['sts_delivery'];
					$ArrDetalPro[$val]['sub_delivery'] 	= $valx['sub_delivery'];
					$ArrDetalPro[$val]['id_category'] 	= $valx['id_category'];
					$ArrDetalPro[$val]['id_product'] 	= $valx['id_product'];
					$ArrDetalPro[$val]['product_ke'] 	= $valx['product_ke'];
					$ArrDetalPro[$val]['qty'] 			= $valx['qty'];
				}
			}
			
			if($status == 'N'){
				$Arr_Edit	= array(
					'reason_approved_est'	=> $reason,
					'aju_approved_est' 		=> 'N',
					'aju_approved_est_by' 	=> $data_session['ORI_User']['username'],
					'aju_approved_est_date' => date('Y-m-d H:i:s')
				);
				
				$Arr_Edit2	= array(
					'status' => 'WAITING FINAL DRAWING'
				);
				$HistReason	= 'Reject Final Drawing To Est with BQ : '.$id_bq;
			}
			
			if($status == 'M'){
				$Arr_Edit	= array(
					'reason_approved_est'	=> $reason,
					'aju_approved_est' 		=> 'N',
					'aju_approved' 			=> 'N',
					'approved_est' 			=> 'N',
					'approved' 				=> 'N',
					'aju_approved_est_by' 	=> $data_session['ORI_User']['username'],
					'aju_approved_est_date' => date('Y-m-d H:i:s')
				);
				
				$Arr_Edit2	= array(
					'status' => 'WAITING FINAL DRAWING'
				);
				$HistReason	= 'Reject Final Drawing To Bq with BQ : '.$id_bq;
			}
			// print_r($Arr_Edit);
			// exit;
			$this->db->trans_start();
				$this->db->where('no_ipp', $Imp[1]);
				$this->db->update('production', $Arr_Edit2);
				
				$this->db->where('id_bq', $id_bq);
				$this->db->update('so_header', $Arr_Edit);
				
				if($status == 'Y'){
					$this->db->insert('production_header', $ArrInsertPro);
					$this->db->insert_batch('production_detail', $ArrDetalPro);
				}
			$this->db->trans_complete();
			
			if($this->db->trans_status() === FALSE){
				$this->db->trans_rollback();
				$Arr_Data	= array(
					'pesan'		=>'Approve process failed. Please try again later ...',
					'status'	=> 0
				);			
			}
			else{
				$this->db->trans_commit();
				$Arr_Data	= array(
					'pesan'		=>'Approve process success. Thanks ...',
					'status'	=> 1
				);				
				history($HistReason);
			}
		}
		else{
			$Arr_Data	= array(
				'pesan'		=>'Data already produced. Please refresh page ...',
				'status'	=> 0
			);	
		}
		echo json_encode($Arr_Data);
	}

	public function AppBQFDMatPlan(){
		$id_bq 			= $this->uri->segment(3);
		$data_session	= $this->session->userdata;
		
		$status		= $this->input->post('status');
		$reason		= $this->input->post('approve_reason');
		
		$Imp			= explode('-', $id_bq);
		
		$checkPro 	= "SELECT * FROM production_header WHERE no_ipp='".$Imp[1]."'";
		$numPro 	= $this->db->query($checkPro)->num_rows();
		// echo $numPro; exit;
		if($numPro < 1){
			if($status == 'Y'){
				$Arr_Edit	= array(
					'approved_est' 		=> 'Y',
					'approved_est_by' 	=> $data_session['ORI_User']['username'],
					'approved_est_date' => date('Y-m-d H:i:s')
				);
				
				$Arr_Edit2	= array(
					// 'status' => 'WAITING MATERIAL PLANNING',
					'status' => 'WAITING PRODUCTION',
					'quo_reason' => $reason,
					'quo_by' => $data_session['ORI_User']['username'],
					'quo_date' => date('Y-m-d H:i:s'),
					'mp' => 'Y',
					'mp_by' => $data_session['ORI_User']['username'],
					'mp_date' => date('Y-m-d H:i:s')
				);
				$HistReason	= 'Approve Final Drawing (in material planning) with BQ : '.$id_bq;
				
				//save to production
				$ArrInsertPro = array(
					'id_produksi' => "PRO-".$Imp[1],
					'no_ipp' => $Imp[1],
					'jalur' => 'FD',
					'so_number' => "SO-".$Imp[1],
					'created_by' => $data_session['ORI_User']['username'],
					'created_date' => date('Y-m-d H:i:s')
				);
			
				$qDet_Gt	= "SELECT a.*, b.id AS id_milik , b.id_product AS id_product FROM so_detail_detail a INNER JOIN so_detail_header b ON a.id_bq_header = b.id_bq_header  WHERE a.id_bq = '".$id_bq."' ";
				$restBq		= $this->db->query($qDet_Gt)->result_array();
				 
				$ArrDetalPro = array();
				foreach($restBq AS $val => $valx){
					$ArrDetalPro[$val]['id_milik'] 		= $valx['id_milik']; 
					$ArrDetalPro[$val]['id_produksi'] 	= "PRO-".$Imp[1];
					$ArrDetalPro[$val]['id_delivery'] 	= $valx['id_delivery'];
					$ArrDetalPro[$val]['sts_delivery'] 	= $valx['sts_delivery'];
					$ArrDetalPro[$val]['sub_delivery'] 	= $valx['sub_delivery'];
					$ArrDetalPro[$val]['id_category'] 	= $valx['id_category'];
					$ArrDetalPro[$val]['id_product'] 	= $valx['id_product'];
					$ArrDetalPro[$val]['product_ke'] 	= $valx['product_ke'];
					$ArrDetalPro[$val]['qty'] 			= $valx['qty'];
				}
			}
			
			if($status == 'N'){
				$Arr_Edit	= array(
					'reason_approved_est'	=> $reason,
					'aju_approved_est' 		=> 'N',
					'aju_approved_est_by' 	=> $data_session['ORI_User']['username'],
					'aju_approved_est_date' => date('Y-m-d H:i:s')
				);
				
				$Arr_Edit2	= array(
					'status' => 'WAITING FINAL DRAWING'
				);
				// $HistReason	= 'Reject Final Drawing To Est with BQ : '.$id_bq;
			}
			
			if($status == 'M'){
				$Arr_Edit	= array(
					'reason_approved_est'	=> $reason,
					'aju_approved_est' 		=> 'N',
					'aju_approved' 			=> 'N',
					'approved_est' 			=> 'N',
					'approved' 				=> 'N',
					'aju_approved_est_by' 	=> $data_session['ORI_User']['username'],
					'aju_approved_est_date' => date('Y-m-d H:i:s')
				);
				
				$Arr_Edit2	= array(
					'status' => 'WAITING FINAL DRAWING'
				);
				$HistReason	= 'Reject Final Drawing To Bq with BQ : '.$id_bq;
			}
			// print_r($Arr_Edit);
			// exit;
			$this->db->trans_start();
				$this->db->where('no_ipp', $Imp[1]);
				$this->db->update('production', $Arr_Edit2);
				
				$this->db->where('id_bq', $id_bq);
				$this->db->update('so_header', $Arr_Edit);
				
				if($status == 'Y'){
					$this->db->insert('production_header', $ArrInsertPro);
					$this->db->insert_batch('production_detail', $ArrDetalPro);
				}
			$this->db->trans_complete();
			
			if($this->db->trans_status() === FALSE){
				$this->db->trans_rollback();
				$Arr_Data	= array(
					'pesan'		=>'Approve process failed. Please try again later ...',
					'status'	=> 0
				);			
			}
			else{
				$this->db->trans_commit();
				$Arr_Data	= array(
					'pesan'		=>'Approve process success. Thanks ...',
					'status'	=> 1
				);				
				history($HistReason);
			}
		}
		else{
			$Arr_Data	= array(
				'pesan'		=>'Data already produced. Please refresh page ...',
				'status'	=> 0
			);	
		}
		echo json_encode($Arr_Data);
	}
	
	public function modalFD_pipe(){
		history('View edit product estimasi in final drawing pipe');
		$this->load->view('Machine_modal_fd/pipe');
	}

	public function modalFD_end_cap(){
		history('View edit product estimasi in final drawing end cap');
		$this->load->view('Machine_modal_fd/end_cap');
	}

	public function modalFD_blindflange(){
		history('View edit product estimasi in final drawing blind flange');
		$this->load->view('Machine_modal_fd/blind_flange');
	}

	public function modalFD_pipeslongsong(){
		history('View edit product estimasi in final drawing pipe slongsong');
		$this->load->view('Machine_modal_fd/pipe_slongsong');
	}

	public function modalFD_elbowmould(){
		history('View edit product estimasi in final drawing elbow mould');
		$this->load->view('Machine_modal_fd/elbow_mould');
	}

	public function modalFD_elbowmitter(){
		history('View edit product estimasi in final drawing elbow mitter');
		$this->load->view('Machine_modal_fd/elbow_mitter');
	}

	public function modalFD_eccentric_reducer(){
		history('View edit product estimasi in final drawing eccentric reducer');
		$this->load->view('Machine_modal_fd/eccentric_reducer');
	}

	public function modalFD_concentric_reducer(){
		history('View edit product estimasi in final drawing concentric reducer');
		$this->load->view('Machine_modal_fd/concentric_reducer');
	}

	public function modalFD_equal_tee_mould(){
		history('View edit product estimasi in final drawing equal tee mould');
		$this->load->view('Machine_modal_fd/equal_tee_mould');
	}

	public function modalFD_reducer_tee_mould(){
		history('View edit product estimasi in final drawing reducer tee mould');
		$this->load->view('Machine_modal_fd/reducer_tee_mould');
	}

	public function modalFD_equal_tee_slongsong(){
		history('View edit product estimasi in final drawing equal tee slongsong');
		$this->load->view('Machine_modal_fd/equal_tee_slongsong');
	}

	public function modalFD_reducer_tee_slongsong(){
		history('View edit product estimasi in final drawing reducer tee slongsong');
		$this->load->view('Machine_modal_fd/reducer_tee_slongsong');
	}

	public function modalFD_flange_mould(){
		history('View edit product estimasi in final drawing flange mould');
		$this->load->view('Machine_modal_fd/flange_mould');
	}
	
	public function modalFD_colar(){
		history('View edit product estimasi in final drawing colar');
		$this->load->view('Machine_modal_fd/colar');
	}
	
	public function modalFD_colar_slongsong(){
		history('View edit product estimasi in final drawing colar slongsong');
		$this->load->view('Machine_modal_fd/colar_slongsong');
	}

	public function modalFD_flange_slongsong(){
		history('View edit product estimasi in final drawing flange slongsong');
		$this->load->view('Machine_modal_fd/flange_slongsong');
	}

	public function modalFD_field_joint(){
		history('View edit product estimasi in final drawing field joint');
		$this->load->view('Machine_modal_fd/field_joint');
	}
	
	public function getMaterialx(){
		$id_material	= $this->input->post('id_material');
		$diameter 		= $this->input->post('diameter');
		$resin			= $this->input->post('resin');
		$id_category	= $this->input->post('id_ori');
		$resinOri		= $this->input->post('resinOri');

		// echo $id_material;
		// exit;

		//TYPE RELEASE AGENT $id_category == 'TYP-0030'
		if($id_category == 'TYP-0008'){
			$nm_standard 	= 'thickness';
			$sqlMaterial	= "SELECT * FROM raw_material_bq_standard WHERE id_material ='".$id_material."' AND nm_standard='".$nm_standard."' LIMIT 1 ";
			$restMicron		= $this->db->query($sqlMaterial)->result();
			if(!empty($restMicron[0]->nilai_standard)){
				if($diameter < 40){$micron	= 0;}
				else{
					if($diameter < 400){$micron	= $restMicron[0]->nilai_standard/1000000;}
					else{$micron	= $restMicron[0]->nilai_standard/1000000;}
				}
			}
			else{$micron = 0;}

			$ArrJson	= array(
				'weight' => $micron
			);
		}
		//TYPE VEIL
		if($id_category == 'TYP-0003' OR $id_category == 'TYP-0004' OR $id_category == 'TYP-0001'){
			$nm_standard 	= 'area weight';

			$sqlMaterial	= "SELECT * FROM raw_material_bq_standard WHERE id_material ='".$id_material."' AND nm_standard='".$nm_standard."' LIMIT 1 ";
			$restMicron		= $this->db->query($sqlMaterial)->result();
			$NumMic			= $this->db->query($sqlMaterial)->num_rows();

			$micron			= 0;
			$thickness		= 0;
			if($NumMic != 0){
				$micron		=  $restMicron[0]->nilai_standard;
				$thickness	= ($micron/1000/2.56)+($micron/1000/1.2*$resin);
			}

			$resin = $resinOri;
			$LayerR	= "";
			if($id_material == 'MTL-1903000'){
				$resin = "MTL-1903000";
				$LayerR	= 0;
			}

			//resinAkhir
			$sqlResin	= $this->db->query("SELECT id_category FROM raw_materials WHERE id_material ='".$id_material."' LIMIT 1 ")->result();

			$resinAkhir	= "N";
			if($sqlResin[0]->id_category == 'TYP-0001'){
				$resinAkhir	= "Y";
			}

			$ArrJson		= array(
				'weight' 	=> $micron,
				'thickness'	=> $thickness,
				'resin'		=> $resin,
				'resinUt'	=> $id_material,
				'layer'		=> $LayerR,
				'resinAk'	=> $resinAkhir
			);
		}

		if($id_category == 'TYP-0005'){

			$sqlMicron		= "SELECT * FROM raw_material_bq_standard WHERE id_material ='".$id_material."' AND nm_standard='area weight' LIMIT 1 ";
			$restMicron		= $this->db->query($sqlMicron)->result_array();
			$NumMic			= $this->db->query($sqlMicron)->num_rows();

			// echo $sqlMicron."<br>";

			$weight			= 0;
			$bw				= 0;
			$jumRoov		= 0;
			$thickness		= 0;
			if($NumMic != 0){
				$weight		=  floatval($restMicron[0]['nilai_standard']);
				if($weight != 0 OR $weight != null OR $weight != ''){
					// $bw			= floatval(($weight >= '2200')?'160':(($weight < '2000')?'100':'0'));
					// $jumRoov	= floatval(($weight >= '2200')?'54':(($weight < '2000')?'52':'0'));
					$bw			= floatval($this->input->post('bw'));
					$jumRoov		= floatval($this->input->post('jumlah')); 
					if($bw != 0){
						$thickness	= (($weight/1000)/ $bw * $jumRoov * (2 / 2.56)) + (($weight/1000)/ $bw * $jumRoov * (2 / 1.2) * $resin);
					}
				}
			}

			// echo $weight;
			$resinX = "";
			$LayerR	= "";
			if($id_material == 'MTL-1903000'){
				$resinX = 'MTL-1903000';
				$LayerR	= 0;
			}

			//resinAkhir
			$sqlResin	= $this->db->query("SELECT id_category FROM raw_materials WHERE id_material ='".$id_material."' LIMIT 1 ")->result();

			$resinAkhir	= "N";
			if($sqlResin[0]->id_category == 'TYP-0001'){
				$resinAkhir	= "Y";
			}

			$ArrJson		= array(
				'weight' 	=> $weight,
				'bw' 		=> $bw,
				'jumRoov' 	=> $jumRoov,
				'resin'		=> $resinX,
				'thickness'	=> $thickness,
				'layer'		=> $LayerR,
				'resinUt'	=> $id_material,
				'resinAk'	=> $resinAkhir
			);
		}

		if($id_category == 'TYP-0006'){

			$sqlWrW			= "SELECT * FROM raw_material_bq_standard WHERE id_material ='".$id_material."' AND nm_standard='area weight' LIMIT 1 ";
			$restWrW		= $this->db->query($sqlWrW)->result_array();
			$NumWrW			= $this->db->query($sqlWrW)->num_rows();

			$sqlWrT			= "SELECT * FROM raw_material_bq_standard WHERE id_material ='".$id_material."' AND nm_standard='thickness' LIMIT 1 ";
			$restWrT		= $this->db->query($sqlWrT)->result_array();
			$NumWrT			= $this->db->query($sqlWrT)->num_rows();

			$weight			= 0;
			$thickness		= 0;
			if($NumWrW != 0){
				$weight		=  $restWrW[0]['nilai_standard'];
			}
			if($NumWrT != 0){
				$thickness	=  $restWrT[0]['nilai_standard'];
			}

			$resinX = "";
			$LayerR	= "";
			if($id_material == 'MTL-1903000'){
				$resinX = 'MTL-1903000';
				$LayerR	= 0;
			}

			//resinAkhir
			$sqlResin	= $this->db->query("SELECT id_category FROM raw_materials WHERE id_material ='".$id_material."' LIMIT 1 ")->result();

			$resinAkhir	= "N";
			if($sqlResin[0]->id_category == 'TYP-0001'){
				$resinAkhir	= "Y";
			}

			$ArrJson		= array(
				'weight' 	=> $weight,
				'resin'		=> $resinX,
				'thickness'	=> $thickness,
				'layer'		=> $LayerR,
				'resinUt'	=> $id_material,
				'resinAk'	=> $resinAkhir
			);
		}

		echo json_encode($ArrJson);
	}
	
	public function modalEditEstDefault(){
		$this->load->view('Machine_modal_fd/modalEditEstDefault');
	}
	
	public function modalDetailMat(){
		$this->load->view('FinalDrawing/modalDetailMat');
	}
	
	function insert_final_drawing(){
		$sqlUpdate = "SELECT
					a.*,
					a.no_ipp,
					b.id_customer,
					b.nm_customer,
					b.project,
					b.ref_quo,
					b.`status`,
					b.sts_price_quo
					FROM
						so_header a LEFT JOIN production b ON a.no_ipp = b.no_ipp WHERE b.`status`='WAITING APPROVE FINAL DRAWING'";
		$restUpdate = $this->db->query($sqlUpdate)->result_array();
		$ArrUpdate = array();
		foreach($restUpdate AS $val => $valx){ 
			$ArrUpdate[$val]['id_bq'] 			= $valx['id_bq'];
			$ArrUpdate[$val]['no_ipp'] 			= $valx['no_ipp'];
			$ArrUpdate[$val]['id_customer'] 	= $valx['id_customer'];
			$ArrUpdate[$val]['nm_customer'] 	= $valx['nm_customer'];
			$ArrUpdate[$val]['project'] 		= $valx['project'];
			$ArrUpdate[$val]['ref_quo'] 		= $valx['ref_quo'];
			$ArrUpdate[$val]['sum_sales_order'] = SUM_SO_ALL($valx['id_bq']);
			$ArrUpdate[$val]['sum_quotation'] 	= SUM_QUO_ALL($valx['id_bq']);
			$ArrUpdate[$val]['sum_final_drawing'] 	= SUM_FD_ALL($valx['id_bq']);
			$ArrUpdate[$val]['status'] 			= $valx['status'];
			$ArrUpdate[$val]['rev'] 			= $valx['rev'];
			$ArrUpdate[$val]['sts_price_quo'] 	= $valx['sts_price_quo'];
			$ArrUpdate[$val]['aju_approved'] 	= $valx['aju_approved'];
			$ArrUpdate[$val]['aju_approved_est'] 	= $valx['aju_approved_est'];
			$ArrUpdate[$val]['approved_est'] 	= $valx['approved_est'];
			$ArrUpdate[$val]['approved'] 		= $valx['approved'];
			$ArrUpdate[$val]['create_by'] 		= $this->session->userdata['ORI_User']['username'];
			$ArrUpdate[$val]['create_date'] 	= date('Y-m-d H:i:s');
		}
		
		// print_r($ArrUpdate); 
		// exit;
		$this->db->trans_start();
			$this->db->truncate('table_final_drawing'); 
			if(!empty($ArrUpdate)){
				$this->db->insert_batch('table_final_drawing', $ArrUpdate);
			}
		$this->db->trans_complete();
		
		if($this->db->trans_status() === FALSE){
			$this->db->trans_rollback();
			$Arr_Data	= array(
				'pesan'		=>'Update Failed. Please try again later ...',
				'status'	=> 0
			);			
		}
		else{
			$this->db->trans_commit();
			$Arr_Data	= array(
				'pesan'		=>'Update Success. Thanks ...',
				'status'	=> 1
			);				
			history('Success insert final drawing table');
		}
		echo json_encode($Arr_Data);
		
	}
	
	//excel final drawing
	public function ExcelBudgetSo(){
		//membuat objek PHPExcel
		set_time_limit(0);
		ini_set('memory_limit','1024M');
		$id_bq		= $this->uri->segment(3);

		$this->load->library("PHPExcel");
		// $this->load->library("PHPExcel/Writer/Excel2007");
		$objPHPExcel	= new PHPExcel();
		
		$style_header = array(
			'borders' => array(
				'allborders' => array(
					  'style' => PHPExcel_Style_Border::BORDER_THIN,
					  'color' => array('rgb'=>'000000')
				  )
			),
			'fill' => array(
				'type' => PHPExcel_Style_Fill::FILL_SOLID,
				'color' => array('rgb'=>'CCFF99'),
			),
			'font' => array(
				'bold' => true,
			),
			'alignment' => array(
				'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
				'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
			)
		);

		$style_header2 = array(	
			'fill' => array(
				'type' => PHPExcel_Style_Fill::FILL_SOLID,
				'color' => array('rgb'=>'FFB266'),
			),
			'font' => array(
				'bold' => true,
			),
			'alignment' => array(
				'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
				'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
			)
		);

		$styleArray = array(					  
			  'alignment' => array(
				'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER
			  ),
			  'borders' => array(
				'allborders' => array(
					  'style' => PHPExcel_Style_Border::BORDER_THIN,
					  'color' => array('rgb'=>'000000')
				  )
			)
		  );
		$styleArray3 = array(					  
			  'alignment' => array(
				'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_LEFT
			  ),
			  'borders' => array(
				'allborders' => array(
					  'style' => PHPExcel_Style_Border::BORDER_THIN,
					  'color' => array('rgb'=>'000000')
				  )
			)
		  );  
		 $styleArray4 = array(					  
			  'alignment' => array(
				'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT
			  ),
			  'borders' => array(
				'allborders' => array(
					  'style' => PHPExcel_Style_Border::BORDER_THIN,
					  'color' => array('rgb'=>'000000')
				  )
			)
		  );  
	    $styleArray1 = array(
			  'borders' => array(
				  'allborders' => array(
					  'style' => PHPExcel_Style_Border::BORDER_THIN
				  )
			  ),
			  'alignment' => array(
				'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_LEFT,
				'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
			  )
		  );
		$styleArray2 = array(
			  'borders' => array(
				  'allborders' => array(
					  'style' => PHPExcel_Style_Border::BORDER_THIN
				  )
			  ),
			  'alignment' => array(
				'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
				'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
			  )
		  );
		 
		$Arr_Bulan	= array(1=>'Jan','Feb','Mar','Apr','Mei','Jun','Jul','Aug','Sep','Oct','Nov','Dec'); 
		$sheet 		= $objPHPExcel->getActiveSheet();
		
		$Row		= 1;
		$NewRow		= $Row+1;
		$Col_Akhir	= $Cols	= getColsChar(24);
		$sheet->setCellValue('A'.$Row, 'DETAIL BUDGET FINAL DRAWING '.$id_bq);
		$sheet->getStyle('A'.$Row.':'.$Col_Akhir.$NewRow)->applyFromArray($style_header2);
		$sheet->mergeCells('A'.$Row.':'.$Col_Akhir.$NewRow);
		
		$NewRow	= $NewRow +2;
		$NextRow= $NewRow +1;
		
		$sheet->setCellValue('A'.$NewRow, 'No');
		$sheet->getStyle('A'.$NewRow.':A'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('A'.$NewRow.':A'.$NextRow);
		$sheet->getColumnDimension('A')->setAutoSize(true);
		
		$sheet->setCellValue('B'.$NewRow, 'SO');
		$sheet->getStyle('B'.$NewRow.':B'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('B'.$NewRow.':B'.$NextRow);
		$sheet->getColumnDimension('B')->setAutoSize(true);
		
		$sheet->setCellValue('C'.$NewRow, 'Project');
		$sheet->getStyle('C'.$NewRow.':C'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('C'.$NewRow.':C'.$NextRow);
		$sheet->getColumnDimension('C')->setAutoSize(true);
		
		$sheet->setCellValue('D'.$NewRow, 'Product');
		$sheet->getStyle('D'.$NewRow.':D'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('D'.$NewRow.':D'.$NextRow);
		$sheet->getColumnDimension('D')->setAutoSize(true);
		
		$sheet->setCellValue('E'.$NewRow, 'Liner');
		$sheet->getStyle('E'.$NewRow.':E'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('E'.$NewRow.':E'.$NextRow);
		$sheet->getColumnDimension('E')->setAutoSize(true);
		
		$sheet->setCellValue('F'.$NewRow, 'PN');
		$sheet->getStyle('F'.$NewRow.':F'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('F'.$NewRow.':F'.$NextRow);
		$sheet->getColumnDimension('F')->setAutoSize(true);
		
		$sheet->setCellValue('G'.$NewRow, 'Spesifikasi');
		$sheet->getStyle('G'.$NewRow.':G'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('G'.$NewRow.':G'.$NextRow);
		$sheet->getColumnDimension('G')->setAutoSize(true);
		
		$sheet->setCellValue('H'.$NewRow, 'Est Mat (Kg)');
		$sheet->getStyle('H'.$NewRow.':H'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('H'.$NewRow.':H'.$NextRow);
		$sheet->getColumnDimension('H')->setAutoSize(true);
		
		$sheet->setCellValue('I'.$NewRow, 'Est Mat');
		$sheet->getStyle('I'.$NewRow.':I'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('I'.$NewRow.':I'.$NextRow);
		$sheet->getColumnDimension('I')->setAutoSize(true);
		
		$sheet->setCellValue('J'.$NewRow, 'Direct Labour');
		$sheet->getStyle('J'.$NewRow.':J'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('J'.$NewRow.':J'.$NextRow);
		$sheet->getColumnDimension('J')->setAutoSize(true);
		
		$sheet->setCellValue('K'.$NewRow, 'Indirect Labour');
		$sheet->getStyle('K'.$NewRow.':K'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('K'.$NewRow.':K'.$NextRow);
		$sheet->getColumnDimension('K')->setAutoSize(true);
		
		$sheet->setCellValue('L'.$NewRow, 'Machine');
		$sheet->getStyle('L'.$NewRow.':L'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('L'.$NewRow.':L'.$NextRow);
		$sheet->getColumnDimension('L')->setAutoSize(true);
		
		$sheet->setCellValue('M'.$NewRow, 'Mould Mandrill');
		$sheet->getStyle('M'.$NewRow.':M'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('M'.$NewRow.':M'.$NextRow);
		$sheet->getColumnDimension('M')->setAutoSize(true);
		
		$sheet->setCellValue('N'.$NewRow, 'Consumable');
		$sheet->getStyle('N'.$NewRow.':N'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('N'.$NewRow.':N'.$NextRow);
		$sheet->getColumnDimension('N')->setAutoSize(true);
		
		$sheet->setCellValue('O'.$NewRow, 'Consumable FOH');
		$sheet->getStyle('O'.$NewRow.':O'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('O'.$NewRow.':O'.$NextRow);
		$sheet->getColumnDimension('O')->setAutoSize(true);
		
		$sheet->setCellValue('P'.$NewRow, 'Depresiasi FOH');
		$sheet->getStyle('P'.$NewRow.':P'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('P'.$NewRow.':P'.$NextRow);
		$sheet->getColumnDimension('P')->setAutoSize(true);
		
		$sheet->setCellValue('Q'.$NewRow, 'Gaji Non Produksi');
		$sheet->getStyle('Q'.$NewRow.':Q'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('Q'.$NewRow.':Q'.$NextRow);
		$sheet->getColumnDimension('Q')->setAutoSize(true);
		
		$sheet->setCellValue('R'.$NewRow, 'Biaya Admin');
		$sheet->getStyle('R'.$NewRow.':R'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('R'.$NewRow.':R'.$NextRow);
		$sheet->getColumnDimension('R')->setAutoSize(true);
		
		$sheet->setCellValue('S'.$NewRow, 'Biaya Bulanan');
		$sheet->getStyle('S'.$NewRow.':S'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('S'.$NewRow.':S'.$NextRow);
		$sheet->getColumnDimension('S')->setAutoSize(true);
		
		$sheet->setCellValue('T'.$NewRow, 'Profit');
		$sheet->getStyle('T'.$NewRow.':T'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('T'.$NewRow.':T'.$NextRow);
		$sheet->getColumnDimension('T')->setAutoSize(true);
		
		$sheet->setCellValue('U'.$NewRow, 'Allowance');
		$sheet->getStyle('U'.$NewRow.':U'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('U'.$NewRow.':U'.$NextRow);
		$sheet->getColumnDimension('U')->setAutoSize(true);
		
		$sheet->setCellValue('V'.$NewRow, 'Packing');
		$sheet->getStyle('V'.$NewRow.':V'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('V'.$NewRow.':V'.$NextRow);
		$sheet->getColumnDimension('V')->setAutoSize(true);
		
		$sheet->setCellValue('W'.$NewRow, 'Enggenering');
		$sheet->getStyle('W'.$NewRow.':W'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('W'.$NewRow.':W'.$NextRow);
		$sheet->getColumnDimension('W')->setAutoSize(true);
		
		$sheet->setCellValue('X'.$NewRow, 'Trucking');
		$sheet->getStyle('X'.$NewRow.':X'.$NextRow)->applyFromArray($style_header);
		$sheet->mergeCells('X'.$NewRow.':X'.$NextRow);
		$sheet->getColumnDimension('X')->setAutoSize(true);
		
		// $qMatr 		= SQL_SO($id_bq);
		$qMatr 		= SQL_FD($id_bq);
		$restDetail1= $this->db->query($qMatr)->result_array(); 
		
		$SQLbGsO 	= "SELECT * FROM budget_so WHERE id_bq='".$id_bq."'";
		$rESTbgSO	= $this->db->query($SQLbGsO)->result_array();
		// echo $qMatr; exit;
		
		if($restDetail1){
			$awal_row	= $NextRow;
			$no=0;
			$SUM = 0;
			$SumEstHarga = 0;
			$SumTot2 = 0;
			$HPP_Tot = 0;
			
			$EstMatKg = 0;
			$EstMat = 0;
			
			$Direct = 0;
			$Indirect = 0;
			$Machi = 0;
			$MouldM = 0;
			$Consumab = 0;
			
			$ConsFOH = 0;
			$DepFOH = 0;
			$GjNonP = 0;
			$ByAdmin = 0;
			$ByBulanan = 0;
			
			$Profits = 0;
			$Allowancex = 0;
			foreach($restDetail1 as $key => $row_Cek){
				$no++;
				$awal_row++;
				$awal_col	= 0;
				
				$EstMatKg += $row_Cek['sum_mat2'];
				
				
				$Direct += $row_Cek['direct_labour'];
				$Indirect += $row_Cek['indirect_labour'];
				$Machi += $row_Cek['machine'];
				$MouldM += $row_Cek['mould_mandrill'];
				$Consumab += $row_Cek['consumable'];
				
				$ConsFOH += $row_Cek['foh_consumable'];
				$DepFOH += $row_Cek['foh_depresiasi'];
				$GjNonP += $row_Cek['biaya_gaji_non_produksi'];
				$ByAdmin += $row_Cek['biaya_non_produksi'];
				$ByBulanan += $row_Cek['biaya_rutin_bulanan'];
				
				
				// $getProfit = $this->db->query("SELECT profit FROM cost_profit WHERE diameter='".str_replace('.','',$row_Cek['diameter_1'])."' AND diameter2='".str_replace('.','',$row_Cek['diameter_2'])."' AND product_parent='".$row_Cek['id_category']."' ")->result_array();
				// $est_harga = (($row_Cek['est_harga2']+$row_Cek['cost_process']+$row_Cek['foh_consumable']+$row_Cek['foh_depresiasi']+$row_Cek['biaya_gaji_non_produksi']+$row_Cek['biaya_non_produksi']+$row_Cek['biaya_rutin_bulanan'])) / $row_Cek['qty'];
				$est_harga = (($row_Cek['est_harga2']+$row_Cek['direct_labour']+$row_Cek['indirect_labour']+$row_Cek['machine']+$row_Cek['mould_mandrill']+$row_Cek['consumable']+$row_Cek['foh_consumable']+$row_Cek['foh_depresiasi']+$row_Cek['biaya_gaji_non_produksi']+$row_Cek['biaya_non_produksi']+$row_Cek['biaya_rutin_bulanan'])) / $row_Cek['qty'];
				

				$profit = (!empty($row_Cek['persen']))?$row_Cek['persen']:30;
				$EstMat += $row_Cek['est_harga2'];
				
				$helpProfit = $est_harga *($profit/100);

				
				$HrgTot   = (($est_harga) + ($helpProfit)) * $row_Cek['qty'];
				$HPP_Tot += $est_harga * $row_Cek['qty'];
				$SumTot2 += $HrgTot;

				$allow 		= (!empty($row_Cek['extra']))?$row_Cek['extra']:15;
				
				$HrgTot2  = (($HrgTot) + ($HrgTot * ($allow/100)));
				$SumEstHarga = $est_harga * $row_Cek['qty'];
				
				// $HrgTot2   	= (($est_harga) + ($est_harga * ($profit/100))) * $valx['qty'];
				// $HrgTot  	= (($HrgTot2) + ($HrgTot2 * ($allow/100)));
				
				$SUM	 += (($HrgTot) + ($HrgTot * ($allow/100)));
				
				if($row_Cek['id_category'] == 'pipe' OR $row_Cek['id_category'] == 'pipe slongsong'){
				$dim = number_format($row_Cek['diameter_1'])." x ".number_format($row_Cek['length'])." x ".floatval($row_Cek['thickness']);
				}
				elseif($row_Cek['id_category'] == 'elbow mitter' OR $row_Cek['id_category'] == 'elbow mould'){
					$dim = number_format($row_Cek['diameter_1'])." x ".floatval($row_Cek['thickness']).", ".$row_Cek['type']." ".floatval($row_Cek['sudut']);
				}
				elseif($row_Cek['id_category'] == 'concentric reducer' OR $row_Cek['id_category'] == 'reducer tee mould' OR $row_Cek['id_category'] == 'eccentric reducer' OR $row_Cek['id_category'] == 'reducer tee slongsong' OR $row_Cek['id_category'] == 'branch joint'){
					$dim = number_format($row_Cek['diameter_1'])." x ".number_format($row_Cek['diameter_2'])." x ".floatval($row_Cek['thickness']);
				}
				elseif($row_Cek['id_category'] == 'colar' OR $row_Cek['id_category'] == 'colar slongsong' OR $row_Cek['id_category'] == 'end cap' OR $row_Cek['id_category'] == 'flange slongsong' OR $row_Cek['id_category'] == 'flange mould' OR $row_Cek['id_category'] == 'equal tee mould' OR $row_Cek['id_category'] == 'blind flange' OR $row_Cek['id_category'] == 'equal tee slongsong'){
					$dim = number_format($row_Cek['diameter_1'])." x ".floatval($row_Cek['thickness']);
				}
				elseif($row_Cek['id_category'] == 'field joint' OR $row_Cek['id_category'] == 'shop joint' ){
					$dim = floatval($row_Cek['diameter_1'])." x ".floatval($row_Cek['length']);
				}
				else{$dim = "belum di set";}
				
				//cek project
				$sqlP = $this->db->query("SELECT project FROM production WHERE no_ipp='".str_replace('BQ-', '', $id_bq)."'")->result_array();
				
				$Profits += $HrgTot - $SumEstHarga;
				$Allowancex += $HrgTot2 - $HrgTot;
				
				
				$awal_col++;
				$nomorx		= $no;
				$Cols		= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $nomorx);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray3);
				
				$awal_col++;
				$id_bqx		= $id_bq;
				$Cols		= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $id_bqx);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray3);
				
				$awal_col++;
				$project	= $sqlP[0]['project'];
				$Cols		= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $project);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray3);
				
				$awal_col++;
				$id_category	= $row_Cek['id_category'];
				$Cols			= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $id_category);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray3);
				
				$awal_col++;
				$liner	= $row_Cek['liner'];
				$Cols			= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $liner);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray4);
				
				$awal_col++;
				$pressure	= $row_Cek['pressure'];
				$Cols			= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $pressure);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray4);
				
				$awal_col++;
				$spesifik	= $dim;
				$Cols			= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $spesifik);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray4);
				
				$awal_col++;
				$sum_mat2	= $row_Cek['sum_mat2'];
				$Cols			= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $sum_mat2);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray4);
				
				$awal_col++;
				$est_harga2	= $row_Cek['est_harga2'];
				$Cols			= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $est_harga2);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray4);
				
				$awal_col++;
				$direct_labour	= $row_Cek['direct_labour'];
				$Cols			= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $direct_labour);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray4);
				
				$awal_col++;
				$indirect_labour	= $row_Cek['indirect_labour'];
				$Cols			= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $indirect_labour);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray4);
				
				$awal_col++;
				$machine	= $row_Cek['machine'];
				$Cols			= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $machine);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray4);
				
				$awal_col++;
				$mould_mandrill	= $row_Cek['mould_mandrill'];
				$Cols			= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $mould_mandrill);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray4);
				
				$awal_col++;
				$consumable	= $row_Cek['consumable'];
				$Cols			= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $consumable);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray4);
				
				$awal_col++;
				$foh_consumable	= $row_Cek['foh_consumable'];
				$Cols			= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $foh_consumable);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray4);
				
				$awal_col++;
				$foh_depresiasi	= $row_Cek['foh_depresiasi'];
				$Cols			= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $foh_depresiasi);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray4);
				
				$awal_col++;
				$biaya_gaji_non_produksi	= $row_Cek['biaya_gaji_non_produksi'];
				$Cols			= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $biaya_gaji_non_produksi);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray4);
				
				$awal_col++;
				$biaya_non_produksi	= $row_Cek['biaya_non_produksi'];
				$Cols			= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $biaya_non_produksi);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray4);
				
				$awal_col++;
				$biaya_rutin_bulanan	= $row_Cek['biaya_rutin_bulanan'];
				$Cols			= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $biaya_rutin_bulanan);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray4);
				
				$awal_col++;
				// $profit	= $est_harga ; 
				$profit	= $HrgTot - $SumEstHarga ;
				$Cols			= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $profit);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray4);
				
				$awal_col++;
				$allowance	= $HrgTot2 - $HrgTot;
				$Cols			= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $allowance);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray4);
				
				$awal_col++;
				$packing	= '-';
				$Cols			= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $packing);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray4);
				
				$awal_col++;
				$enggenering	= '-';
				$Cols			= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $enggenering);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray4);
				
				$awal_col++;
				$trucking	= '-';
				$Cols			= getColsChar($awal_col);
				$sheet->setCellValue($Cols.$awal_row, $trucking);
				$sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray4);
			}
			// echo $no;exit;
			$Colsw = floatval($no) +6;
			
			// echo $Colsw."-".$Colse; exit;
			
			$sheet->setCellValue("A".$Colsw."", 'SUM');
			$sheet->getStyle("A".$Colsw.":A".$Colsw."")->applyFromArray($style_header);
			$sheet->mergeCells("A".$Colsw.":G".$Colsw."");
			$sheet->getColumnDimension('A')->setAutoSize(true);
			
			
			$sheet->setCellValue("H".$Colsw."", $EstMatKg);
			$sheet->getStyle("H".$Colsw.":H".$Colsw."")->applyFromArray($styleArray4);
			$sheet->mergeCells("H".$Colsw.":H".$Colsw."");
			$sheet->getColumnDimension('H')->setAutoSize(true);
			
			$sheet->setCellValue("I".$Colsw."", $EstMat);
			$sheet->getStyle("I".$Colsw.":I".$Colsw."")->applyFromArray($styleArray4);
			$sheet->mergeCells("I".$Colsw.":I".$Colsw."");
			$sheet->getColumnDimension('I')->setAutoSize(true);
			
			$sheet->setCellValue("J".$Colsw."", $Direct );
			$sheet->getStyle("J".$Colsw.":J".$Colsw."")->applyFromArray($styleArray4);
			$sheet->mergeCells("J".$Colsw.":J".$Colsw."");
			$sheet->getColumnDimension('J')->setAutoSize(true);
			
			$sheet->setCellValue("K".$Colsw."", $Indirect);
			$sheet->getStyle("K".$Colsw.":K".$Colsw."")->applyFromArray($styleArray4);
			$sheet->mergeCells("K".$Colsw.":K".$Colsw."");
			$sheet->getColumnDimension('K')->setAutoSize(true);
			
			$sheet->setCellValue("L".$Colsw."", $Machi);
			$sheet->getStyle("L".$Colsw.":L".$Colsw."")->applyFromArray($styleArray4);
			$sheet->mergeCells("L".$Colsw.":L".$Colsw."");
			$sheet->getColumnDimension('L')->setAutoSize(true);
			
			$sheet->setCellValue("M".$Colsw."", $MouldM);
			$sheet->getStyle("M".$Colsw.":M".$Colsw."")->applyFromArray($styleArray4);
			$sheet->mergeCells("M".$Colsw.":M".$Colsw."");
			$sheet->getColumnDimension('M')->setAutoSize(true);
			
			$sheet->setCellValue("N".$Colsw."", $Consumab);
			$sheet->getStyle("N".$Colsw.":N".$Colsw."")->applyFromArray($styleArray4);
			$sheet->mergeCells("N".$Colsw.":N".$Colsw."");
			$sheet->getColumnDimension('N')->setAutoSize(true);
			
			$sheet->setCellValue("O".$Colsw."", $ConsFOH);
			$sheet->getStyle("O".$Colsw.":O".$Colsw."")->applyFromArray($styleArray4);
			$sheet->mergeCells("O".$Colsw.":O".$Colsw."");
			$sheet->getColumnDimension('O')->setAutoSize(true);
			
			$sheet->setCellValue("P".$Colsw."", $DepFOH);
			$sheet->getStyle("P".$Colsw.":P".$Colsw."")->applyFromArray($styleArray4);
			$sheet->mergeCells("P".$Colsw.":P".$Colsw."");
			$sheet->getColumnDimension('P')->setAutoSize(true);
			
			$sheet->setCellValue("Q".$Colsw."", $GjNonP);
			$sheet->getStyle("Q".$Colsw.":Q".$Colsw."")->applyFromArray($styleArray4);
			$sheet->mergeCells("Q".$Colsw.":Q".$Colsw."");
			$sheet->getColumnDimension('Q')->setAutoSize(true);
			
			$sheet->setCellValue("R".$Colsw."", $ByAdmin);
			$sheet->getStyle("R".$Colsw.":R".$Colsw."")->applyFromArray($styleArray4);
			$sheet->mergeCells("R".$Colsw.":R".$Colsw."");
			$sheet->getColumnDimension('R')->setAutoSize(true);
			
			$sheet->setCellValue("S".$Colsw."", $ByBulanan);
			$sheet->getStyle("S".$Colsw.":S".$Colsw."")->applyFromArray($styleArray4);
			$sheet->mergeCells("S".$Colsw.":S".$Colsw."");
			$sheet->getColumnDimension('S')->setAutoSize(true);
			
			$sheet->setCellValue("T".$Colsw."", $Profits);
			$sheet->getStyle("T".$Colsw.":T".$Colsw."")->applyFromArray($styleArray4);
			$sheet->mergeCells("T".$Colsw.":T".$Colsw."");
			$sheet->getColumnDimension('T')->setAutoSize(true);
			
			$sheet->setCellValue("U".$Colsw."", $Allowancex);
			$sheet->getStyle("U".$Colsw.":U".$Colsw."")->applyFromArray($styleArray4);
			$sheet->mergeCells("U".$Colsw.":U".$Colsw."");
			$sheet->getColumnDimension('U')->setAutoSize(true);
			
			$sheet->setCellValue("V".$Colsw."", $rESTbgSO[0]['packing']);
			$sheet->getStyle("V".$Colsw.":V".$Colsw."")->applyFromArray($styleArray4);
			$sheet->mergeCells("V".$Colsw.":V".$Colsw."");
			$sheet->getColumnDimension('V')->setAutoSize(true);
			
			$sheet->setCellValue("W".$Colsw."", $rESTbgSO[0]['enggenering']);
			$sheet->getStyle("W".$Colsw.":W".$Colsw."")->applyFromArray($styleArray4);
			$sheet->mergeCells("W".$Colsw.":W".$Colsw."");
			$sheet->getColumnDimension('W')->setAutoSize(true);
			
			$sheet->setCellValue("X".$Colsw."", $rESTbgSO[0]['truck_export'] + $rESTbgSO[0]['truck_lokal']);
			$sheet->getStyle("X".$Colsw.":X".$Colsw."")->applyFromArray($styleArray4);
			$sheet->mergeCells("X".$Colsw.":X".$Colsw."");
			$sheet->getColumnDimension('X')->setAutoSize(true);
				
			// $awal_col+1;
			// $SumNox	= $SumNo;
			// $Cols			= getColsChar($awal_col+1);
			// $sheet->setCellValue($Cols.$awal_row, $SumNox);
			// $sheet->getStyle($Cols.$awal_row)->applyFromArray($styleArray4);
			
			
		}
		
		
		$sheet->setTitle('Excel Budget Final Drawing');
		//mulai menyimpan excel format xlsx, kalau ingin xls ganti Excel2007 menjadi Excel5          
		$objWriter		= PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
		ob_end_clean();
		//sesuaikan headernya 
		header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");
		header("Cache-Control: no-store, no-cache, must-revalidate");
		header("Cache-Control: post-check=0, pre-check=0", false);
		header("Pragma: no-cache");
		header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
		//ubah nama file saat diunduh
		header('Content-Disposition: attachment;filename="Detail Budget Final Drawing '.$id_bq.' '.date('YmdHis').'.xls"');
		//unduh file
		$objWriter->save("php://output");
	}

}
